

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jun 12 03:41:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 2.10
    23                           ; Generated 31/07/2019 GMT
    24                           ; 
    25                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F26K83 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	nvCOMRAM
    58  000016                     __pnvCOMRAM:
    59                           	opt callstack 0
    60  000016                     _CANADRL:
    61                           	opt callstack 0
    62  000016                     	ds	1
    63  000017                     _CANADRH:
    64                           	opt callstack 0
    65  000017                     	ds	1
    66  0000                     _TXB2D0	set	14278
    67  0000                     _TXB2D1	set	14279
    68  0000                     _TXB2D2	set	14280
    69  0000                     _TXB2D3	set	14281
    70  0000                     _TXB2D4	set	14282
    71  0000                     _TXB2D5	set	14283
    72  0000                     _TXB2D6	set	14284
    73  0000                     _TXB2D7	set	14285
    74  0000                     _TXB2DLC	set	14277
    75  0000                     _TXB2SIDL	set	14274
    76  0000                     _TXB2SIDH	set	14273
    77  0000                     _TXB2CONbits	set	14272
    78  0000                     _TXB1D0	set	14294
    79  0000                     _TXB1D1	set	14295
    80  0000                     _TXB1D2	set	14296
    81  0000                     _TXB1D3	set	14297
    82  0000                     _TXB1D4	set	14298
    83  0000                     _TXB1D5	set	14299
    84  0000                     _TXB1D6	set	14300
    85  0000                     _TXB1D7	set	14301
    86  0000                     _TXB1DLC	set	14293
    87  0000                     _TXB1SIDL	set	14290
    88  0000                     _TXB1SIDH	set	14289
    89  0000                     _TXB1CONbits	set	14288
    90  0000                     _TXB0D0	set	14310
    91  0000                     _TXB0D1	set	14311
    92  0000                     _TXB0D2	set	14312
    93  0000                     _TXB0D3	set	14313
    94  0000                     _TXB0D4	set	14314
    95  0000                     _TXB0D5	set	14315
    96  0000                     _TXB0D6	set	14316
    97  0000                     _TXB0D7	set	14317
    98  0000                     _TXB0DLC	set	14309
    99  0000                     _TXB0SIDL	set	14306
   100  0000                     _TXB0SIDH	set	14305
   101  0000                     _TXB0CONbits	set	14304
   102  0000                     _RXB1CONbits	set	14320
   103  0000                     _BRGCON3	set	14085
   104  0000                     _BRGCON2	set	14084
   105  0000                     _BRGCON1	set	14083
   106  0000                     _CIOCON	set	14080
   107  0000                     _RXM1SIDL	set	14269
   108  0000                     _RXM1SIDH	set	14268
   109  0000                     _RXF5SIDL	set	14261
   110  0000                     _RXF5SIDH	set	14260
   111  0000                     _RXF4SIDL	set	14257
   112  0000                     _RXF4SIDH	set	14256
   113  0000                     _RXF3SIDL	set	14253
   114  0000                     _RXF3SIDH	set	14252
   115  0000                     _RXF2SIDL	set	14249
   116  0000                     _RXF2SIDH	set	14248
   117  0000                     _RXM0SIDL	set	14265
   118  0000                     _RXM0SIDH	set	14264
   119  0000                     _RXF1SIDL	set	14245
   120  0000                     _RXF1SIDH	set	14244
   121  0000                     _RXF0SIDL	set	14241
   122  0000                     _RXF0SIDH	set	14240
   123  0000                     _RXB1D2	set	14328
   124  0000                     _RXB1D1	set	14327
   125  0000                     _RXB1D0	set	14326
   126  0000                     _RXB1DLCbits	set	14325
   127  0000                     _PIR5bits	set	14757
   128  0000                     _PIE5bits	set	14741
   129  0000                     _OSCFRQ	set	14815
   130  0000                     _OSCCON1	set	14809
   131  0000                     _ERRIF	set	118061
   132  0000                     _RXB1IF	set	118057
   133  0000                     _RXB0IF	set	118056
   134  0000                     _I2C1TXIE	set	117912
   135  0000                     _I2C1EIE	set	117914
   136  0000                     _I2C1IE	set	117913
   137  0000                     _RB2PPS	set	14858
   138  0000                     _CANRXPPS	set	15085
   139  0000                     _RC4I2C	set	14955
   140  0000                     _RC3I2C	set	14954
   141  0000                     _I2C1SCLPPS	set	15075
   142  0000                     _RC4PPS	set	14868
   143  0000                     _RC3PPS	set	14867
   144  0000                     _I2C1SDAPPS	set	15076
   145  0000                     _INLVLE	set	14980
   146  0000                     _INLVLC	set	14948
   147  0000                     _INLVLB	set	14932
   148  0000                     _INLVLA	set	14916
   149  0000                     _SLRCONC	set	14947
   150  0000                     _SLRCONB	set	14931
   151  0000                     _SLRCONA	set	14915
   152  0000                     _ODCONC	set	14946
   153  0000                     _ODCONB	set	14930
   154  0000                     _ODCONA	set	14914
   155  0000                     _WPUC	set	14945
   156  0000                     _WPUA	set	14913
   157  0000                     _WPUB	set	14929
   158  0000                     _WPUE	set	14977
   159  0000                     _ANSELA	set	14912
   160  0000                     _ANSELB	set	14928
   161  0000                     _ANSELC	set	14944
   162  0000                     _I2C1RXB	set	15722
   163  0000                     _I2C1STAT1bits	set	15736
   164  0000                     _I2C1TXB	set	15723
   165  0000                     _I2C1CON1bits	set	15732
   166  0000                     _I2C1CON0bits	set	15731
   167  0000                     _I2C1ADB1	set	15726
   168  0000                     _I2C1CON0	set	15731
   169  0000                     _I2C1CNT	set	15724
   170  0000                     _I2C1CLK	set	15739
   171  0000                     _I2C1CON2	set	15733
   172  0000                     _I2C1CON1	set	15732
   173  0000                     _RXB0D0	set	16262
   174  0000                     _RXB0DLCbits	set	16261
   175  0000                     _RXB0CONbits	set	16256
   176  0000                     _ECANCON	set	16273
   177  0000                     _CANSTAT	set	16270
   178  0000                     _CANCON	set	16271
   179  0000                     _INTCON0bits	set	16338
   180  0000                     _TRISC	set	16324
   181  0000                     _TRISB	set	16323
   182  0000                     _TRISA	set	16322
   183  0000                     _LATC	set	16316
   184  0000                     _LATB	set	16315
   185  0000                     _LATA	set	16314
   186  0000                     _PORTA	set	16330
   187  0000                     _GIE	set	130711
   188                           
   189                           ; #config settings
   190  0000                     
   191                           	psect	cinit
   192  000724                     __pcinit:
   193                           	opt callstack 0
   194  000724                     start_initialization:
   195                           	opt callstack 0
   196  000724                     __initialization:
   197                           	opt callstack 0
   198                           
   199                           ;
   200                           ; Setup IVTBASE
   201                           ;
   202  000724  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   203  000726  6ED5               	movwf	213,c
   204  000728  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   205  00072A  6ED6               	movwf	214,c
   206  00072C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   207  00072E  6ED7               	movwf	215,c
   208  000730                     end_of_initialization:
   209                           	opt callstack 0
   210  000730                     __end_of__initialization:
   211                           	opt callstack 0
   212  000730  0E00               	movlw	low (__Lmediumconst shr (0+16))
   213  000732  6EF8               	movwf	tblptru,c
   214  000734  0100               	movlb	0
   215  000736  EF9D  F003         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	cstackCOMRAM
   218  000001                     __pcstackCOMRAM:
   219                           	opt callstack 0
   220  000001                     SendCanFrame@data:
   221                           	opt callstack 0
   222                           
   223                           ; 2 bytes @ 0x0
   224  000001                     	ds	2
   225  000003                     SendCanFrame@length:
   226                           	opt callstack 0
   227                           
   228                           ; 1 bytes @ 0x2
   229  000003                     	ds	1
   230  000004                     ??_SendCanFrame:
   231                           
   232                           ; 1 bytes @ 0x3
   233  000004                     	ds	2
   234  000006                     ??_I2CScan:
   235  000006                     SendCanFrameS@data:
   236                           	opt callstack 0
   237  000006                     HandleCommand@data:
   238                           	opt callstack 0
   239                           
   240                           ; 6 bytes @ 0x5
   241  000006                     	ds	1
   242  000007                     SendCanFrameS@dataA:
   243                           	opt callstack 0
   244                           
   245                           ; 1 bytes @ 0x6
   246  000007                     	ds	1
   247  000008                     I2CScan@j:
   248                           	opt callstack 0
   249                           
   250                           ; 2 bytes @ 0x7
   251  000008                     	ds	2
   252  00000A                     I2CScan@data:
   253                           	opt callstack 0
   254                           
   255                           ; 2 bytes @ 0x9
   256  00000A                     	ds	2
   257  00000C                     HandleCommand@i:
   258                           	opt callstack 0
   259  00000C                     I2CScan@data_643:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0xB
   263  00000C                     	ds	2
   264  00000E                     I2CScan@i:
   265                           	opt callstack 0
   266                           
   267                           ; 1 bytes @ 0xD
   268  00000E                     	ds	1
   269  00000F                     ??_HandleRequest:
   270                           
   271                           ; 1 bytes @ 0xE
   272  00000F                     	ds	2
   273  000011                     InitializeCan@CanAddrLow:
   274                           	opt callstack 0
   275                           
   276                           ; 1 bytes @ 0x10
   277  000011                     	ds	1
   278  000012                     ??_InitializeCan:
   279                           
   280                           ; 1 bytes @ 0x11
   281  000012                     	ds	1
   282  000013                     InitializeCan@CanAddrHigh:
   283                           	opt callstack 0
   284                           
   285                           ; 1 bytes @ 0x12
   286  000013                     	ds	1
   287  000014                     initialize@canAddrH:
   288                           	opt callstack 0
   289                           
   290                           ; 1 bytes @ 0x13
   291  000014                     	ds	1
   292  000015                     initialize@canAddrL:
   293                           	opt callstack 0
   294                           
   295                           ; 1 bytes @ 0x14
   296  000015                     	ds	1
   297  000016                     
   298                           ; 1 bytes @ 0x15
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 180 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, status,2, status,0, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels required when called:    7
   324 ;; This function calls:
   325 ;;		_initialize
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text0
   332  00073A                     __ptext0:
   333                           	opt callstack 0
   334  00073A                     _main:
   335                           	opt callstack 24
   336  00073A                     
   337                           ;main.c: 182:     initialize();
   338  00073A  EC61  F002         	call	_initialize	;wreg free
   339  00073E                     l104:
   340  00073E  EF9F  F003         	goto	l104
   341  000742  EF0D  F000         	goto	start
   342  000746                     __end_of_main:
   343                           	opt callstack 0
   344                           
   345 ;; *************** function _initialize *****************
   346 ;; Defined at:
   347 ;;		line 89 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;  canAddrL        1   20[COMRAM] unsigned char 
   352 ;;  canAddrH        1   19[COMRAM] unsigned char 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;Total ram usage:        2 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; Hardware stack levels required when called:    6
   369 ;; This function calls:
   370 ;;		_InitializeCan
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text1
   377  0004C2                     __ptext1:
   378                           	opt callstack 0
   379  0004C2                     _initialize:
   380                           	opt callstack 24
   381  0004C2                     
   382                           ;main.c: 92:     OSCCON1 = 0x60;
   383  0004C2  0E60               	movlw	96
   384  0004C4  0139               	movlb	57	; () banked
   385  0004C6  6FD9               	movwf	217,b	;volatile
   386                           
   387                           ;main.c: 94:     OSCFRQ = 0x03;
   388  0004C8  0E03               	movlw	3
   389  0004CA  6FDF               	movwf	223,b	;volatile
   390                           
   391                           ;main.c: 99:     LATA = 0x00;
   392  0004CC  0E00               	movlw	0
   393  0004CE  6EBA               	movwf	186,c	;volatile
   394                           
   395                           ;main.c: 100:     LATB = 0x00;
   396  0004D0  0E00               	movlw	0
   397  0004D2  6EBB               	movwf	187,c	;volatile
   398                           
   399                           ;main.c: 101:     LATC = 0x00;
   400  0004D4  0E00               	movlw	0
   401  0004D6  6EBC               	movwf	188,c	;volatile
   402  0004D8                     
   403                           ; BSR set to: 57
   404                           ;main.c: 106:     TRISA = 0xFF;
   405  0004D8  68C2               	setf	194,c	;volatile
   406                           
   407                           ;main.c: 107:     TRISB = 0b11111011;
   408  0004DA  0EFB               	movlw	251
   409  0004DC  6EC3               	movwf	195,c	;volatile
   410                           
   411                           ;main.c: 108:     TRISC = 0xE7;
   412  0004DE  0EE7               	movlw	231
   413  0004E0  6EC4               	movwf	196,c	;volatile
   414                           
   415                           ;main.c: 113:     ANSELC = 0;
   416  0004E2  0E00               	movlw	0
   417  0004E4  013A               	movlb	58	; () banked
   418  0004E6  6F60               	movwf	96,b	;volatile
   419                           
   420                           ;main.c: 114:     ANSELB = 0;
   421  0004E8  0E00               	movlw	0
   422  0004EA  6F50               	movwf	80,b	;volatile
   423                           
   424                           ;main.c: 115:     ANSELA = 0;
   425  0004EC  0E00               	movlw	0
   426  0004EE  6F40               	movwf	64,b	;volatile
   427                           
   428                           ;main.c: 120:     WPUE = 0x00;
   429  0004F0  0E00               	movlw	0
   430  0004F2  6F81               	movwf	129,b	;volatile
   431                           
   432                           ;main.c: 121:     WPUB = 0x00;
   433  0004F4  0E00               	movlw	0
   434  0004F6  6F51               	movwf	81,b	;volatile
   435  0004F8                     
   436                           ; BSR set to: 58
   437                           ;main.c: 122:     WPUA = 0b11111111;
   438  0004F8  6941               	setf	65,b	;volatile
   439                           
   440                           ;main.c: 123:     WPUC = 0x00;
   441  0004FA  0E00               	movlw	0
   442  0004FC  6F61               	movwf	97,b	;volatile
   443                           
   444                           ;main.c: 128:     ODCONA = 0x00;
   445  0004FE  0E00               	movlw	0
   446  000500  6F42               	movwf	66,b	;volatile
   447                           
   448                           ;main.c: 129:     ODCONB = 0x00;
   449  000502  0E00               	movlw	0
   450  000504  6F52               	movwf	82,b	;volatile
   451                           
   452                           ;main.c: 130:     ODCONC = 0x18;
   453  000506  0E18               	movlw	24
   454  000508  6F62               	movwf	98,b	;volatile
   455  00050A                     
   456                           ; BSR set to: 58
   457                           ;main.c: 135:     SLRCONA = 0xFF;
   458  00050A  6943               	setf	67,b	;volatile
   459  00050C                     
   460                           ; BSR set to: 58
   461                           ;main.c: 136:     SLRCONB = 0xFF;
   462  00050C  6953               	setf	83,b	;volatile
   463  00050E                     
   464                           ; BSR set to: 58
   465                           ;main.c: 137:     SLRCONC = 0xFF;
   466  00050E  6963               	setf	99,b	;volatile
   467  000510                     
   468                           ; BSR set to: 58
   469                           ;main.c: 142:     INLVLA = 0xFF;
   470  000510  6944               	setf	68,b	;volatile
   471  000512                     
   472                           ; BSR set to: 58
   473                           ;main.c: 143:     INLVLB = 0xFF;
   474  000512  6954               	setf	84,b	;volatile
   475  000514                     
   476                           ; BSR set to: 58
   477                           ;main.c: 144:     INLVLC = 0xFF;
   478  000514  6964               	setf	100,b	;volatile
   479                           
   480                           ;main.c: 145:     INLVLE = 0x08;
   481  000516  0E08               	movlw	8
   482  000518  6F84               	movwf	132,b	;volatile
   483                           
   484                           ;main.c: 148:     I2C1SDAPPS = 0x14;
   485  00051A  0E14               	movlw	20
   486  00051C  6FE4               	movwf	228,b	;volatile
   487                           
   488                           ;main.c: 149:     RC3PPS = 0x21;
   489  00051E  0E21               	movlw	33
   490  000520  6F13               	movwf	19,b	;volatile
   491                           
   492                           ;main.c: 150:     RC4PPS = 0x22;
   493  000522  0E22               	movlw	34
   494  000524  6F14               	movwf	20,b	;volatile
   495                           
   496                           ;main.c: 151:     I2C1SCLPPS = 0x13;
   497  000526  0E13               	movlw	19
   498  000528  6FE3               	movwf	227,b	;volatile
   499                           
   500                           ;main.c: 152:     RC3I2C = 0x01;
   501  00052A  0E01               	movlw	1
   502  00052C  6F6A               	movwf	106,b	;volatile
   503                           
   504                           ;main.c: 153:     RC4I2C = 0x01;
   505  00052E  0E01               	movlw	1
   506  000530  6F6B               	movwf	107,b	;volatile
   507                           
   508                           ;main.c: 154:     I2C1CON1 = 0b01000000;
   509  000532  0E40               	movlw	64
   510  000534  013D               	movlb	61	; () banked
   511  000536  6F74               	movwf	116,b	;volatile
   512                           
   513                           ;main.c: 155:     I2C1CON2 = 0b00000001;
   514  000538  0E01               	movlw	1
   515  00053A  6F75               	movwf	117,b	;volatile
   516                           
   517                           ;main.c: 156:     I2C1CLK = 0x03;
   518  00053C  0E03               	movlw	3
   519  00053E  6F7B               	movwf	123,b	;volatile
   520  000540                     
   521                           ; BSR set to: 61
   522                           ;main.c: 157:     I2C1CNT = 0xFF;
   523  000540  696C               	setf	108,b	;volatile
   524                           
   525                           ;main.c: 159:     I2C1CON0 = 0b10000100;
   526  000542  0E84               	movlw	132
   527  000544  6F73               	movwf	115,b	;volatile
   528  000546                     
   529                           ; BSR set to: 61
   530                           ;main.c: 164:     char canAddrH = 0b01000000 | (PORTA>>3 & 0b00011111) ;
   531  000546  38CA               	swapf	202,w,c	;volatile
   532  000548  46E8               	rlncf	wreg,f,c
   533  00054A  0B1F               	andlw	31
   534  00054C  0B1F               	andlw	31
   535  00054E  0940               	iorlw	64
   536  000550  6E14               	movwf	initialize@canAddrH^0,c
   537  000552                     
   538                           ; BSR set to: 61
   539                           ;main.c: 165:     char canAddrL = (PORTA<<5 & 0b11100000);
   540  000552  38CA               	swapf	202,w,c	;volatile
   541  000554  46E8               	rlncf	wreg,f,c
   542  000556  0BE0               	andlw	224
   543  000558  0BE0               	andlw	224
   544  00055A  6E15               	movwf	initialize@canAddrL^0,c
   545  00055C                     
   546                           ; BSR set to: 61
   547                           ;main.c: 167:     InitializeCan(canAddrH, canAddrL);
   548  00055C  0060  F054  F011   	movff	initialize@canAddrL,InitializeCan@CanAddrLow
   549  000562  5014               	movf	initialize@canAddrH^0,w,c
   550  000564  EC05  F002         	call	_InitializeCan
   551  000568                     
   552                           ;main.c: 171:     INTCON0bits.IPEN = 0;
   553  000568  9AD2               	bcf	210,5,c	;volatile
   554  00056A                     
   555                           ;main.c: 172:     GIE = 1;
   556  00056A  8ED2               	bsf	16338,7,c	;volatile
   557  00056C                     
   558                           ;main.c: 173:     I2C1IE = 1;
   559  00056C  0139               	movlb	57	; () banked
   560  00056E  8393               	bsf	147,1,b	;volatile
   561  000570                     
   562                           ; BSR set to: 57
   563                           ;main.c: 174:     I2C1EIE = 1;
   564  000570  8593               	bsf	147,2,b	;volatile
   565  000572                     
   566                           ; BSR set to: 57
   567                           ;main.c: 175:     I2C1TXIE = 1;
   568  000572  8193               	bsf	147,0,b	;volatile
   569  000574                     
   570                           ; BSR set to: 57
   571                           ;main.c: 176:     PIE5bits.ERRIE = 1;
   572  000574  8B95               	bsf	149,5,b	;volatile
   573  000576                     
   574                           ; BSR set to: 57
   575  000576  0012               	return		;funcret
   576  000578                     __end_of_initialize:
   577                           	opt callstack 0
   578                           
   579 ;; *************** function _InitializeCan *****************
   580 ;; Defined at:
   581 ;;		line 67 in file "CanModule.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  CanAddrHigh     1    wreg     unsigned char 
   584 ;;  CanAddrLow      1   16[COMRAM] unsigned char 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  CanAddrHigh     1   18[COMRAM] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   596 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;Total ram usage:        3 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    5
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_initialize
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text2
   611  00040A                     __ptext2:
   612                           	opt callstack 0
   613  00040A                     _InitializeCan:
   614                           	opt callstack 24
   615                           
   616                           ; BSR set to: 57
   617                           ;incstack = 0
   618                           ;InitializeCan@CanAddrHigh stored from wreg
   619  00040A  6E13               	movwf	InitializeCan@CanAddrHigh^0,c
   620  00040C                     
   621                           ;CanModule.c: 68:     CANADRH = CanAddrHigh;
   622  00040C  0060  F04C  F017   	movff	InitializeCan@CanAddrHigh,_CANADRH
   623  000412                     
   624                           ;CanModule.c: 69:     CANADRL = CanAddrLow;
   625  000412  0060  F044  F016   	movff	InitializeCan@CanAddrLow,_CANADRL
   626  000418                     
   627                           ;CanModule.c: 71:     CANRXPPS = 0x0B;
   628  000418  0E0B               	movlw	11
   629  00041A  013A               	movlb	58	; () banked
   630  00041C  6FED               	movwf	237,b	;volatile
   631  00041E                     
   632                           ; BSR set to: 58
   633                           ;CanModule.c: 72:     RB2PPS = 0x33;
   634  00041E  0E33               	movlw	51
   635  000420  6F0A               	movwf	10,b	;volatile
   636  000422                     
   637                           ; BSR set to: 58
   638                           ;CanModule.c: 74:     CANCON = 0x80;
   639  000422  0E80               	movlw	128
   640  000424  6E8F               	movwf	143,c	;volatile
   641  000426                     l1448:
   642  000426  508E               	movf	142,w,c	;volatile
   643  000428  0BE0               	andlw	224
   644  00042A  0A80               	xorlw	128
   645  00042C  A4D8               	btfss	status,2,c
   646  00042E  EF1B  F002         	goto	u311
   647  000432  EF1D  F002         	goto	u310
   648  000436                     u311:
   649  000436  EF13  F002         	goto	l1448
   650  00043A                     u310:
   651  00043A                     
   652                           ;CanModule.c: 78:     RXF0SIDH = 0xFF;
   653  00043A  0137               	movlb	55	; () banked
   654  00043C  69A0               	setf	160,b	;volatile
   655  00043E                     
   656                           ; BSR set to: 55
   657                           ;CanModule.c: 79:     RXF0SIDL = 0xE0;
   658  00043E  0EE0               	movlw	224
   659  000440  6FA1               	movwf	161,b	;volatile
   660  000442                     
   661                           ; BSR set to: 55
   662                           ;CanModule.c: 80:     RXF1SIDH = 0xFF;
   663  000442  69A4               	setf	164,b	;volatile
   664                           
   665                           ;CanModule.c: 81:     RXF1SIDL = 0xE0;
   666  000444  0EE0               	movlw	224
   667  000446  6FA5               	movwf	165,b	;volatile
   668                           
   669                           ;CanModule.c: 82:     RXM0SIDH = 0b11100000;
   670  000448  0EE0               	movlw	224
   671  00044A  6FB8               	movwf	184,b	;volatile
   672                           
   673                           ;CanModule.c: 83:     RXM0SIDL = 0x00;
   674  00044C  0E00               	movlw	0
   675  00044E  6FB9               	movwf	185,b	;volatile
   676  000450                     
   677                           ; BSR set to: 55
   678                           ;CanModule.c: 85:     RXF2SIDH = CANADRH;
   679  000450  0060  F05F  F7A8   	movff	_CANADRH,14248	;volatile
   680  000456                     
   681                           ; BSR set to: 55
   682                           ;CanModule.c: 86:     RXF2SIDL = CANADRL & 0b11100000;
   683  000456  5016               	movf	_CANADRL^0,w,c
   684  000458  0BE0               	andlw	224
   685  00045A  6FA9               	movwf	169,b	;volatile
   686  00045C                     
   687                           ; BSR set to: 55
   688                           ;CanModule.c: 87:     RXF3SIDH = CANADRH;
   689  00045C  0060  F05F  F7AC   	movff	_CANADRH,14252	;volatile
   690  000462                     
   691                           ; BSR set to: 55
   692                           ;CanModule.c: 88:     RXF3SIDL = CANADRL & 0b11100000;
   693  000462  5016               	movf	_CANADRL^0,w,c
   694  000464  0BE0               	andlw	224
   695  000466  6FAD               	movwf	173,b	;volatile
   696  000468                     
   697                           ; BSR set to: 55
   698                           ;CanModule.c: 89:     RXF4SIDH = CANADRH;
   699  000468  0060  F05F  F7B0   	movff	_CANADRH,14256	;volatile
   700  00046E                     
   701                           ; BSR set to: 55
   702                           ;CanModule.c: 90:     RXF4SIDL = CANADRL & 0b11100000;
   703  00046E  5016               	movf	_CANADRL^0,w,c
   704  000470  0BE0               	andlw	224
   705  000472  6FB1               	movwf	177,b	;volatile
   706  000474                     
   707                           ; BSR set to: 55
   708                           ;CanModule.c: 91:     RXF5SIDH = CANADRH;
   709  000474  0060  F05F  F7B4   	movff	_CANADRH,14260	;volatile
   710  00047A                     
   711                           ; BSR set to: 55
   712                           ;CanModule.c: 92:     RXF5SIDL = CANADRL & 0b11100000;
   713  00047A  5016               	movf	_CANADRL^0,w,c
   714  00047C  0BE0               	andlw	224
   715  00047E  6FB5               	movwf	181,b	;volatile
   716  000480                     
   717                           ; BSR set to: 55
   718                           ;CanModule.c: 93:     RXM1SIDH = 0xFF;
   719  000480  69BC               	setf	188,b	;volatile
   720                           
   721                           ;CanModule.c: 94:     RXM1SIDL = 0xE0;
   722  000482  0EE0               	movlw	224
   723  000484  6FBD               	movwf	189,b	;volatile
   724                           
   725                           ;CanModule.c: 96:     ECANCON = 0x00;
   726  000486  0E00               	movlw	0
   727  000488  6E91               	movwf	145,c	;volatile
   728                           
   729                           ;CanModule.c: 97:     CIOCON = 0x00;
   730  00048A  0E00               	movlw	0
   731  00048C  6F00               	movwf	0,b	;volatile
   732                           
   733                           ;CanModule.c: 99:     BRGCON1 = 0x01;
   734  00048E  0E01               	movlw	1
   735  000490  6F03               	movwf	3,b	;volatile
   736                           
   737                           ;CanModule.c: 100:     BRGCON2 = 0x98;
   738  000492  0E98               	movlw	152
   739  000494  6F04               	movwf	4,b	;volatile
   740                           
   741                           ;CanModule.c: 101:     BRGCON3 = 0x81;
   742  000496  0E81               	movlw	129
   743  000498  6F05               	movwf	5,b	;volatile
   744                           
   745                           ;CanModule.c: 103:     CANCON = 0x00;
   746  00049A  0E00               	movlw	0
   747  00049C  6E8F               	movwf	143,c	;volatile
   748  00049E                     l1472:
   749  00049E  006F FE38  F012    	movff	16270,??_InitializeCan	;volatile
   750  0004A4  0EE0               	movlw	224
   751  0004A6  1612               	andwf	??_InitializeCan^0,f,c
   752  0004A8  A4D8               	btfss	status,2,c
   753  0004AA  EF59  F002         	goto	u321
   754  0004AE  EF5B  F002         	goto	u320
   755  0004B2                     u321:
   756  0004B2  EF4F  F002         	goto	l1472
   757  0004B6                     u320:
   758  0004B6                     
   759                           ;CanModule.c: 106:     PIR5bits.RXB0IF = 0;
   760  0004B6  0139               	movlb	57	; () banked
   761  0004B8  91A5               	bcf	165,0,b	;volatile
   762                           
   763                           ;CanModule.c: 107:     PIE5bits.RXB0IE = 1;
   764  0004BA  8195               	bsf	149,0,b	;volatile
   765                           
   766                           ;CanModule.c: 108:     PIR5bits.RXB1IF = 0;
   767  0004BC  93A5               	bcf	165,1,b	;volatile
   768                           
   769                           ;CanModule.c: 109:     PIE5bits.RXB1IE = 1;
   770  0004BE  8395               	bsf	149,1,b	;volatile
   771  0004C0                     
   772                           ; BSR set to: 57
   773  0004C0  0012               	return		;funcret
   774  0004C2                     __end_of_InitializeCan:
   775                           	opt callstack 0
   776                           
   777 ;; *************** function _IRQ *****************
   778 ;; Defined at:
   779 ;;		line 189 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    4
   800 ;; This function calls:
   801 ;;		_ProcessCanMessage
   802 ;; This function is called by:
   803 ;;		Interrupt level 2
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text3
   808  00069E                     __ptext3:
   809                           	opt callstack 0
   810  00069E                     _IRQ:
   811                           	opt callstack 24
   812  00069E                     
   813                           ;main.c: 190:     if (RXB0IF ||RXB1IF) {
   814  00069E  0139               	movlb	57	; () banked
   815  0006A0  B1A5               	btfsc	165,0,b	;volatile
   816  0006A2  EF55  F003         	goto	i2u46_41
   817  0006A6  EF57  F003         	goto	i2u46_40
   818  0006AA                     i2u46_41:
   819  0006AA  EF5E  F003         	goto	i2l1590
   820  0006AE                     i2u46_40:
   821  0006AE                     
   822                           ; BSR set to: 57
   823  0006AE  A3A5               	btfss	165,1,b	;volatile
   824  0006B0  EF5C  F003         	goto	i2u47_41
   825  0006B4  EF5E  F003         	goto	i2u47_40
   826  0006B8                     i2u47_41:
   827  0006B8  EF62  F003         	goto	i2l112
   828  0006BC                     i2u47_40:
   829  0006BC                     i2l1590:
   830                           
   831                           ; BSR set to: 57
   832                           ;main.c: 191:         ProcessCanMessage();
   833  0006BC  ECBC  F002         	call	_ProcessCanMessage	;wreg free
   834                           
   835                           ;main.c: 192:     }
   836  0006C0  EF6A  F003         	goto	i2l117
   837  0006C4                     i2l112:
   838                           
   839                           ; BSR set to: 57
   840  0006C4  ABA5               	btfss	165,5,b	;volatile
   841  0006C6  EF67  F003         	goto	i2u48_41
   842  0006CA  EF69  F003         	goto	i2u48_40
   843  0006CE                     i2u48_41:
   844  0006CE  EF6A  F003         	goto	i2l117
   845  0006D2                     i2u48_40:
   846  0006D2                     
   847                           ; BSR set to: 57
   848                           ;main.c: 195:         ERRIF = 0;
   849  0006D2  9BA5               	bcf	165,5,b	;volatile
   850  0006D4                     i2l117:
   851  0006D4  0011               	retfie		f
   852  0006D6                     __end_of_IRQ:
   853                           	opt callstack 0
   854                           
   855 ;; *************** function _ProcessCanMessage *****************
   856 ;; Defined at:
   857 ;;		line 112 in file "CanModule.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    3
   878 ;; This function calls:
   879 ;;		_HandleCommand
   880 ;;		_HandleRequest
   881 ;;		_SendCanFrameS
   882 ;; This function is called by:
   883 ;;		_IRQ
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text4
   888  000578                     __ptext4:
   889                           	opt callstack 0
   890  000578                     _ProcessCanMessage:
   891                           	opt callstack 24
   892  000578                     
   893                           ;CanModule.c: 114:     if(RXB0IF) {
   894  000578  0139               	movlb	57	; () banked
   895  00057A  A1A5               	btfss	165,0,b	;volatile
   896  00057C  EFC2  F002         	goto	i2u39_41
   897  000580  EFC4  F002         	goto	i2u39_40
   898  000584                     i2u39_41:
   899  000584  EFE5  F002         	goto	i2l324
   900  000588                     i2u39_40:
   901  000588                     
   902                           ; BSR set to: 57
   903                           ;CanModule.c: 115:         if(RXB0CONbits.RXFUL && RXB0DLCbits.DLC == 1 && RXB0D0 == 0xF
      +                          F) {
   904  000588  AE80               	btfss	128,7,c	;volatile
   905  00058A  EFC9  F002         	goto	i2u40_41
   906  00058E  EFCB  F002         	goto	i2u40_40
   907  000592                     i2u40_41:
   908  000592  EFE1  F002         	goto	i2l1570
   909  000596                     i2u40_40:
   910  000596                     
   911                           ; BSR set to: 57
   912  000596  5085               	movf	133,w,c	;volatile
   913  000598  0B0F               	andlw	15
   914  00059A  06E8               	decf	wreg,f,c
   915  00059C  A4D8               	btfss	status,2,c
   916  00059E  EFD3  F002         	goto	i2u41_41
   917  0005A2  EFD5  F002         	goto	i2u41_40
   918  0005A6                     i2u41_41:
   919  0005A6  EFE1  F002         	goto	i2l1570
   920  0005AA                     i2u41_40:
   921  0005AA                     
   922                           ; BSR set to: 57
   923  0005AA  2886               	incf	134,w,c	;volatile
   924  0005AC  A4D8               	btfss	status,2,c
   925  0005AE  EFDB  F002         	goto	i2u42_41
   926  0005B2  EFDD  F002         	goto	i2u42_40
   927  0005B6                     i2u42_41:
   928  0005B6  EFE1  F002         	goto	i2l1570
   929  0005BA                     i2u42_40:
   930  0005BA                     
   931                           ; BSR set to: 57
   932                           ;CanModule.c: 116:             SendCanFrameS(0xFF);
   933  0005BA  0EFF               	movlw	255
   934  0005BC  EC85  F003         	call	_SendCanFrameS
   935  0005C0                     
   936                           ;CanModule.c: 117:             RXB0CONbits.RXFUL = 0;
   937  0005C0  9E80               	bcf	128,7,c	;volatile
   938  0005C2                     i2l1570:
   939                           
   940                           ;CanModule.c: 119:         RXB0IF = 0;
   941  0005C2  0139               	movlb	57	; () banked
   942  0005C4  91A5               	bcf	165,0,b	;volatile
   943                           
   944                           ;CanModule.c: 120:     }
   945  0005C6  EF05  F003         	goto	i2l331
   946  0005CA                     i2l324:
   947                           
   948                           ; BSR set to: 57
   949  0005CA  A3A5               	btfss	165,1,b	;volatile
   950  0005CC  EFEA  F002         	goto	i2u43_41
   951  0005D0  EFEC  F002         	goto	i2u43_40
   952  0005D4                     i2u43_41:
   953  0005D4  EF05  F003         	goto	i2l331
   954  0005D8                     i2u43_40:
   955  0005D8                     
   956                           ; BSR set to: 57
   957                           ;CanModule.c: 123:         if(RXB1CONbits.RXFUL) {
   958  0005D8  0137               	movlb	55	; () banked
   959  0005DA  AFF0               	btfss	240,7,b	;volatile
   960  0005DC  EFF2  F002         	goto	i2u44_41
   961  0005E0  EFF4  F002         	goto	i2u44_40
   962  0005E4                     i2u44_41:
   963  0005E4  EF03  F003         	goto	i2l1582
   964  0005E8                     i2u44_40:
   965  0005E8                     
   966                           ; BSR set to: 55
   967                           ;CanModule.c: 124:             if(RXB1CONbits.RXRTRRO) {
   968  0005E8  A7F0               	btfss	240,3,b	;volatile
   969  0005EA  EFF9  F002         	goto	i2u45_41
   970  0005EE  EFFB  F002         	goto	i2u45_40
   971  0005F2                     i2u45_41:
   972  0005F2  EFFF  F002         	goto	i2l1578
   973  0005F6                     i2u45_40:
   974  0005F6                     
   975                           ; BSR set to: 55
   976                           ;CanModule.c: 125:                 HandleRequest();
   977  0005F6  EC6B  F003         	call	_HandleRequest	;wreg free
   978                           
   979                           ;CanModule.c: 126:             }
   980  0005FA  EF01  F003         	goto	i2l1580
   981  0005FE                     i2l1578:
   982                           
   983                           ; BSR set to: 55
   984                           ;CanModule.c: 128:                 HandleCommand();
   985  0005FE  EC9D  F001         	call	_HandleCommand	;wreg free
   986  000602                     i2l1580:
   987                           
   988                           ;CanModule.c: 130:             RXB1CONbits.RXFUL = 0;
   989  000602  0137               	movlb	55	; () banked
   990  000604  9FF0               	bcf	240,7,b	;volatile
   991  000606                     i2l1582:
   992                           
   993                           ; BSR set to: 55
   994                           ;CanModule.c: 132:         RXB1IF = 0;
   995  000606  0139               	movlb	57	; () banked
   996  000608  93A5               	bcf	165,1,b	;volatile
   997  00060A                     i2l331:
   998                           
   999                           ; BSR set to: 57
  1000  00060A  0012               	return		;funcret
  1001  00060C                     __end_of_ProcessCanMessage:
  1002                           	opt callstack 0
  1003                           
  1004 ;; *************** function _SendCanFrameS *****************
  1005 ;; Defined at:
  1006 ;;		line 136 in file "CanModule.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  data            1    wreg     unsigned char 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  data            1    5[COMRAM] unsigned char 
  1011 ;;  dataA           1    6[COMRAM] unsigned char [1]
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;Total ram usage:        2 bytes
  1026 ;; Hardware stack levels used:    1
  1027 ;; Hardware stack levels required when called:    1
  1028 ;; This function calls:
  1029 ;;		_SendCanFrame
  1030 ;; This function is called by:
  1031 ;;		_ProcessCanMessage
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text5
  1036  00070A                     __ptext5:
  1037                           	opt callstack 0
  1038  00070A                     _SendCanFrameS:
  1039                           	opt callstack 25
  1040                           
  1041                           ; BSR set to: 57
  1042                           ;incstack = 0
  1043                           ;SendCanFrameS@data stored from wreg
  1044  00070A  6E06               	movwf	SendCanFrameS@data^0,c
  1045  00070C                     
  1046                           ;CanModule.c: 137:     char dataA[1];;CanModule.c: 138:     dataA[0] = data;
  1047  00070C  0060  F018  F007   	movff	SendCanFrameS@data,SendCanFrameS@dataA
  1048  000712                     
  1049                           ;CanModule.c: 139:     SendCanFrame(dataA, 1);
  1050  000712  0E07               	movlw	low SendCanFrameS@dataA
  1051  000714  6E01               	movwf	SendCanFrame@data^0,c
  1052  000716  0E00               	movlw	high SendCanFrameS@dataA
  1053  000718  6E02               	movwf	(SendCanFrame@data+1)^0,c
  1054  00071A  0E01               	movlw	1
  1055  00071C  6E03               	movwf	SendCanFrame@length^0,c
  1056  00071E  EC0F  F000         	call	_SendCanFrame	;wreg free
  1057  000722  0012               	return		;funcret
  1058  000724                     __end_of_SendCanFrameS:
  1059                           	opt callstack 0
  1060                           
  1061 ;; *************** function _HandleRequest *****************
  1062 ;; Defined at:
  1063 ;;		line 35 in file "CanModule.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;Total ram usage:        2 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    2
  1084 ;; This function calls:
  1085 ;;		_I2CScan
  1086 ;; This function is called by:
  1087 ;;		_ProcessCanMessage
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text6
  1092  0006D6                     __ptext6:
  1093                           	opt callstack 0
  1094  0006D6                     _HandleRequest:
  1095                           	opt callstack 24
  1096  0006D6                     
  1097                           ;CanModule.c: 36:     switch(RXB1DLCbits.DLC) {
  1098  0006D6  EF71  F003         	goto	i2l1480
  1099  0006DA                     i2l1476:
  1100                           
  1101                           ; BSR set to: 55
  1102                           ;CanModule.c: 38:             I2CScan();
  1103  0006DA  EC06  F003         	call	_I2CScan	;wreg free
  1104                           
  1105                           ;CanModule.c: 39:             break;
  1106  0006DE  EF84  F003         	goto	i2l300
  1107  0006E2                     i2l1480:
  1108  0006E2  0137               	movlb	55	; () banked
  1109  0006E4  51F5               	movf	245,w,b	;volatile
  1110  0006E6  0B0F               	andlw	15
  1111  0006E8  6E0F               	movwf	??_HandleRequest^0,c
  1112  0006EA  6A10               	clrf	(??_HandleRequest+1)^0,c
  1113                           
  1114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1115                           ; Switch size 1, requested type "simple"
  1116                           ; Number of cases is 1, Range of values is 0 to 0
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte            4     3 (average)
  1120                           ;	Chosen strategy is simple_byte
  1121  0006EC  5010               	movf	(??_HandleRequest+1)^0,w,c
  1122  0006EE  0A00               	xorlw	0	; case 0
  1123  0006F0  B4D8               	btfsc	status,2,c
  1124  0006F2  EF7D  F003         	goto	i2l1684
  1125  0006F6  EF84  F003         	goto	i2l300
  1126  0006FA                     i2l1684:
  1127                           
  1128                           ; BSR set to: 55
  1129                           ; Switch size 1, requested type "simple"
  1130                           ; Number of cases is 1, Range of values is 1 to 1
  1131                           ; switch strategies available:
  1132                           ; Name         Instructions Cycles
  1133                           ; simple_byte            4     3 (average)
  1134                           ;	Chosen strategy is simple_byte
  1135  0006FA  500F               	movf	??_HandleRequest^0,w,c
  1136  0006FC  0A01               	xorlw	1	; case 1
  1137  0006FE  B4D8               	btfsc	status,2,c
  1138  000700  EF6D  F003         	goto	i2l1476
  1139  000704  EF84  F003         	goto	i2l300
  1140  000708                     i2l300:
  1141  000708  0012               	return		;funcret
  1142  00070A                     __end_of_HandleRequest:
  1143                           	opt callstack 0
  1144                           
  1145 ;; *************** function _I2CScan *****************
  1146 ;; Defined at:
  1147 ;;		line 15 in file "CanModule.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  data            2    9[COMRAM] unsigned char [2]
  1152 ;;  j               2    7[COMRAM] int 
  1153 ;;  i               1   13[COMRAM] unsigned char 
  1154 ;;  data            2   11[COMRAM] unsigned char [2]
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;Total ram usage:        9 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    1
  1171 ;; This function calls:
  1172 ;;		_SendCanFrame
  1173 ;; This function is called by:
  1174 ;;		_HandleRequest
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text7
  1179  00060C                     __ptext7:
  1180                           	opt callstack 0
  1181  00060C                     _I2CScan:
  1182                           	opt callstack 24
  1183  00060C                     
  1184                           ;CanModule.c: 16:     for(char i = 1; i <= 127; i++) {
  1185  00060C  0E01               	movlw	1
  1186  00060E  6E0E               	movwf	I2CScan@i^0,c
  1187  000610                     i2l1418:
  1188                           
  1189                           ;CanModule.c: 17:         I2C1CNT = 0;
  1190  000610  0E00               	movlw	0
  1191  000612  013D               	movlb	61	; () banked
  1192  000614  6F6C               	movwf	108,b	;volatile
  1193  000616                     
  1194                           ; BSR set to: 61
  1195                           ;CanModule.c: 18:         I2C1ADB1 = i<<1;
  1196  000616  500E               	movf	I2CScan@i^0,w,c
  1197  000618  240E               	addwf	I2CScan@i^0,w,c
  1198  00061A  6F6E               	movwf	110,b	;volatile
  1199  00061C                     
  1200                           ; BSR set to: 61
  1201                           ;CanModule.c: 19:         I2C1CON0bits.S = 1;
  1202  00061C  8B73               	bsf	115,5,b	;volatile
  1203  00061E                     
  1204                           ; BSR set to: 61
  1205                           ;CanModule.c: 20:         int j = 0;
  1206  00061E  0E00               	movlw	0
  1207  000620  6E09               	movwf	(I2CScan@j+1)^0,c
  1208  000622  0E00               	movlw	0
  1209  000624  6E08               	movwf	I2CScan@j^0,c
  1210  000626                     i2l1426:
  1211  000626  5008               	movf	I2CScan@j^0,w,c
  1212  000628  6E06               	movwf	??_I2CScan^0,c
  1213  00062A  5009               	movf	(I2CScan@j+1)^0,w,c
  1214  00062C  6E07               	movwf	(??_I2CScan+1)^0,c
  1215  00062E  4A08               	infsnz	I2CScan@j^0,f,c
  1216  000630  2A09               	incf	(I2CScan@j+1)^0,f,c
  1217  000632  BE07               	btfsc	(??_I2CScan+1)^0,7,c
  1218  000634  EF25  F003         	goto	i2u28_41
  1219  000638  0EF4               	movlw	244
  1220  00063A  5C06               	subwf	??_I2CScan^0,w,c
  1221  00063C  0E01               	movlw	1
  1222  00063E  5807               	subwfb	(??_I2CScan+1)^0,w,c
  1223  000640  A0D8               	btfss	status,0,c
  1224  000642  EF25  F003         	goto	i2u28_41
  1225  000646  EF27  F003         	goto	i2u28_40
  1226  00064A                     i2u28_41:
  1227  00064A  EF13  F003         	goto	i2l1426
  1228  00064E                     i2u28_40:
  1229  00064E                     
  1230                           ;CanModule.c: 22:         if (!I2C1CON1bits.ACKSTAT) {
  1231  00064E  013D               	movlb	61	; () banked
  1232  000650  BB74               	btfsc	116,5,b	;volatile
  1233  000652  EF2D  F003         	goto	i2u29_41
  1234  000656  EF2F  F003         	goto	i2u29_40
  1235  00065A                     i2u29_41:
  1236  00065A  EF3B  F003         	goto	i2l1432
  1237  00065E                     i2u29_40:
  1238  00065E                     
  1239                           ; BSR set to: 61
  1240                           ;CanModule.c: 23:             char data[2];;CanModule.c: 24:             data[0] = 0xFF;
  1241  00065E  680A               	setf	I2CScan@data^0,c
  1242                           
  1243                           ;CanModule.c: 25:             data[1] = i;
  1244  000660  0060  F038  F00B   	movff	I2CScan@i,I2CScan@data+1
  1245  000666                     
  1246                           ; BSR set to: 61
  1247                           ;CanModule.c: 26:             SendCanFrame(data, 2);
  1248  000666  0E0A               	movlw	low I2CScan@data
  1249  000668  6E01               	movwf	SendCanFrame@data^0,c
  1250  00066A  0E00               	movlw	high I2CScan@data
  1251  00066C  6E02               	movwf	(SendCanFrame@data+1)^0,c
  1252  00066E  0E02               	movlw	2
  1253  000670  6E03               	movwf	SendCanFrame@length^0,c
  1254  000672  EC0F  F000         	call	_SendCanFrame	;wreg free
  1255  000676                     i2l1432:
  1256                           
  1257                           ;CanModule.c: 28:     }
  1258  000676  2A0E               	incf	I2CScan@i^0,f,c
  1259  000678  0E7F               	movlw	127
  1260  00067A  640E               	cpfsgt	I2CScan@i^0,c
  1261  00067C  EF42  F003         	goto	i2u30_41
  1262  000680  EF44  F003         	goto	i2u30_40
  1263  000684                     i2u30_41:
  1264  000684  EF08  F003         	goto	i2l1418
  1265  000688                     i2u30_40:
  1266  000688                     
  1267                           ;CanModule.c: 29:     char data[2];;CanModule.c: 30:     data[0] = 0xFF;
  1268  000688  680C               	setf	I2CScan@data_643^0,c
  1269                           
  1270                           ;CanModule.c: 31:     data[1] = 0xFF;
  1271  00068A  680D               	setf	(I2CScan@data_643+1)^0,c
  1272  00068C                     
  1273                           ;CanModule.c: 32:     SendCanFrame(data, 2);
  1274  00068C  0E0C               	movlw	low I2CScan@data_643
  1275  00068E  6E01               	movwf	SendCanFrame@data^0,c
  1276  000690  0E00               	movlw	high I2CScan@data_643
  1277  000692  6E02               	movwf	(SendCanFrame@data+1)^0,c
  1278  000694  0E02               	movlw	2
  1279  000696  6E03               	movwf	SendCanFrame@length^0,c
  1280  000698  EC0F  F000         	call	_SendCanFrame	;wreg free
  1281  00069C  0012               	return		;funcret
  1282  00069E                     __end_of_I2CScan:
  1283                           	opt callstack 0
  1284                           
  1285 ;; *************** function _HandleCommand *****************
  1286 ;; Defined at:
  1287 ;;		line 43 in file "CanModule.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  data            6    5[COMRAM] unsigned char [6]
  1292 ;;  i               1   11[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        7 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		_SendCanFrame
  1311 ;; This function is called by:
  1312 ;;		_ProcessCanMessage
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text8
  1317  00033A                     __ptext8:
  1318                           	opt callstack 0
  1319  00033A                     _HandleCommand:
  1320                           	opt callstack 25
  1321  00033A                     
  1322                           ;CanModule.c: 44:     if(RXB1DLCbits.DLC == 3 && RXB1D0 == 0xEE) {
  1323  00033A  0137               	movlb	55	; () banked
  1324  00033C  51F5               	movf	245,w,b	;volatile
  1325  00033E  0B0F               	andlw	15
  1326  000340  0A03               	xorlw	3
  1327  000342  A4D8               	btfss	status,2,c
  1328  000344  EFA6  F001         	goto	i2u33_41
  1329  000348  EFA8  F001         	goto	i2u33_40
  1330  00034C                     i2u33_41:
  1331  00034C  EFBD  F001         	goto	i2l1500
  1332  000350                     i2u33_40:
  1333  000350                     
  1334                           ; BSR set to: 55
  1335  000350  0EEE               	movlw	238
  1336  000352  19F6               	xorwf	246,w,b	;volatile
  1337  000354  A4D8               	btfss	status,2,c
  1338  000356  EFAF  F001         	goto	i2u34_41
  1339  00035A  EFB1  F001         	goto	i2u34_40
  1340  00035E                     i2u34_41:
  1341  00035E  EFBD  F001         	goto	i2l1500
  1342  000362                     i2u34_40:
  1343  000362                     
  1344                           ; BSR set to: 55
  1345                           ;CanModule.c: 45:         I2C1CNT = 1;
  1346  000362  0E01               	movlw	1
  1347  000364  013D               	movlb	61	; () banked
  1348  000366  6F6C               	movwf	108,b	;volatile
  1349  000368                     
  1350                           ; BSR set to: 61
  1351                           ;CanModule.c: 46:         I2C1ADB1 = RXB1D1;
  1352  000368  006D FFDF FD6E     	movff	14327,15726	;volatile
  1353  00036E                     
  1354                           ; BSR set to: 61
  1355                           ;CanModule.c: 47:         I2C1TXB = RXB1D2;
  1356  00036E  006D FFE3 FD6B     	movff	14328,15723	;volatile
  1357  000374                     
  1358                           ; BSR set to: 61
  1359                           ;CanModule.c: 48:         I2C1CON0bits.S = 1;
  1360  000374  8B73               	bsf	115,5,b	;volatile
  1361                           
  1362                           ;CanModule.c: 49:     }
  1363  000376  EF04  F002         	goto	i2l312
  1364  00037A                     i2l1500:
  1365                           
  1366                           ; BSR set to: 55
  1367  00037A  51F5               	movf	245,w,b	;volatile
  1368  00037C  0B0F               	andlw	15
  1369  00037E  0A03               	xorlw	3
  1370  000380  A4D8               	btfss	status,2,c
  1371  000382  EFC5  F001         	goto	i2u35_41
  1372  000386  EFC7  F001         	goto	i2u35_40
  1373  00038A                     i2u35_41:
  1374  00038A  EF04  F002         	goto	i2l312
  1375  00038E                     i2u35_40:
  1376  00038E                     
  1377                           ; BSR set to: 55
  1378  00038E  0EDD               	movlw	221
  1379  000390  19F6               	xorwf	246,w,b	;volatile
  1380  000392  A4D8               	btfss	status,2,c
  1381  000394  EFCE  F001         	goto	i2u36_41
  1382  000398  EFD0  F001         	goto	i2u36_40
  1383  00039C                     i2u36_41:
  1384  00039C  EF04  F002         	goto	i2l312
  1385  0003A0                     i2u36_40:
  1386  0003A0                     
  1387                           ; BSR set to: 55
  1388                           ;CanModule.c: 51:         I2C1CNT = RXB1D2;
  1389  0003A0  006D FFE3 FD6C     	movff	14328,15724	;volatile
  1390                           
  1391                           ;CanModule.c: 52:         I2C1ADB1 = RXB1D1;
  1392  0003A6  006D FFDF FD6E     	movff	14327,15726	;volatile
  1393                           
  1394                           ;CanModule.c: 53:         I2C1CON0bits.S = 1;
  1395  0003AC  013D               	movlb	61	; () banked
  1396  0003AE  8B73               	bsf	115,5,b	;volatile
  1397  0003B0                     
  1398                           ; BSR set to: 61
  1399                           ;CanModule.c: 54:         char data[6];;CanModule.c: 55:         char i = 0;
  1400  0003B0  0E00               	movlw	0
  1401  0003B2  6E0C               	movwf	HandleCommand@i^0,c
  1402                           
  1403                           ;CanModule.c: 56:         while(i <= RXB1D2) {
  1404  0003B4  EFEF  F001         	goto	i2l1512
  1405  0003B8                     i2l308:
  1406  0003B8  013D               	movlb	61	; () banked
  1407  0003BA  A178               	btfss	120,0,b	;volatile
  1408  0003BC  EFE2  F001         	goto	i2u37_41
  1409  0003C0  EFE4  F001         	goto	i2u37_40
  1410  0003C4                     i2u37_41:
  1411  0003C4  EFDC  F001         	goto	i2l308
  1412  0003C8                     i2u37_40:
  1413  0003C8                     
  1414                           ; BSR set to: 61
  1415                           ;CanModule.c: 58:             I2C1CON1bits.ACKDT = 0;
  1416  0003C8  9D74               	bcf	116,6,b	;volatile
  1417  0003CA                     
  1418                           ; BSR set to: 61
  1419                           ;CanModule.c: 59:             data[i] = I2C1RXB;
  1420  0003CA  0E06               	movlw	low HandleCommand@data
  1421  0003CC  240C               	addwf	HandleCommand@i^0,w,c
  1422  0003CE  6ED9               	movwf	fsr2l,c
  1423  0003D0  6ADA               	clrf	fsr2h,c
  1424  0003D2  0E00               	movlw	high HandleCommand@data
  1425  0003D4  22DA               	addwfc	fsr2h,f,c
  1426  0003D6  006F F5AB FFDF     	movff	15722,indf2	;volatile
  1427  0003DC                     
  1428                           ; BSR set to: 61
  1429                           ;CanModule.c: 60:             i++;
  1430  0003DC  2A0C               	incf	HandleCommand@i^0,f,c
  1431  0003DE                     i2l1512:
  1432                           
  1433                           ; BSR set to: 61
  1434                           ;CanModule.c: 56:         while(i <= RXB1D2) {
  1435  0003DE  500C               	movf	HandleCommand@i^0,w,c
  1436  0003E0  0137               	movlb	55	; () banked
  1437  0003E2  5DF8               	subwf	248,w,b	;volatile
  1438  0003E4  B0D8               	btfsc	status,0,c
  1439  0003E6  EFF7  F001         	goto	i2u38_41
  1440  0003EA  EFF9  F001         	goto	i2u38_40
  1441  0003EE                     i2u38_41:
  1442  0003EE  EFDC  F001         	goto	i2l308
  1443  0003F2                     i2u38_40:
  1444  0003F2                     
  1445                           ; BSR set to: 55
  1446                           ;CanModule.c: 62:         I2C1CON1bits.ACKCNT = 0;
  1447  0003F2  013D               	movlb	61	; () banked
  1448  0003F4  9F74               	bcf	116,7,b	;volatile
  1449  0003F6                     
  1450                           ; BSR set to: 61
  1451                           ;CanModule.c: 63:         SendCanFrame(data,RXB1D2);
  1452  0003F6  0E06               	movlw	low HandleCommand@data
  1453  0003F8  6E01               	movwf	SendCanFrame@data^0,c
  1454  0003FA  0E00               	movlw	high HandleCommand@data
  1455  0003FC  6E02               	movwf	(SendCanFrame@data+1)^0,c
  1456  0003FE  006D FFE0  F003    	movff	14328,SendCanFrame@length	;volatile
  1457  000404  EC0F  F000         	call	_SendCanFrame	;wreg free
  1458  000408                     i2l312:
  1459  000408  0012               	return		;funcret
  1460  00040A                     __end_of_HandleCommand:
  1461                           	opt callstack 0
  1462                           
  1463 ;; *************** function _SendCanFrame *****************
  1464 ;; Defined at:
  1465 ;;		line 142 in file "CanModule.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  data            2    0[COMRAM] PTR unsigned char 
  1468 ;;		 -> SendCanFrameS@dataA(1), HandleCommand@data(6), I2CScan@data_643(2), I2CScan@data(2), 
  1469 ;;  length          1    2[COMRAM] unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  1    wreg      void 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1481 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;Total ram usage:        5 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_I2CScan
  1491 ;;		_HandleCommand
  1492 ;;		_SendCanFrameS
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text9
  1497  00001E                     __ptext9:
  1498                           	opt callstack 0
  1499  00001E                     _SendCanFrame:
  1500                           	opt callstack 25
  1501  00001E                     i2l337:
  1502                           
  1503                           ;CanModule.c: 144:         if(!TXB0CONbits.TXREQ) {
  1504  00001E  0137               	movlb	55	; () banked
  1505  000020  B7E0               	btfsc	224,3,b	;volatile
  1506  000022  EF15  F000         	goto	i2u25_41
  1507  000026  EF17  F000         	goto	i2u25_40
  1508  00002A                     i2u25_41:
  1509  00002A  EF94  F000         	goto	i2l338
  1510  00002E                     i2u25_40:
  1511  00002E                     
  1512                           ; BSR set to: 55
  1513                           ;CanModule.c: 145:             TXB0SIDH = CANADRH;
  1514  00002E  0060  F05F  F7E1   	movff	_CANADRH,14305	;volatile
  1515                           
  1516                           ;CanModule.c: 146:             TXB0SIDL = CANADRL;
  1517  000034  0060  F05B  F7E2   	movff	_CANADRL,14306	;volatile
  1518                           
  1519                           ;CanModule.c: 147:             TXB0DLC = length;
  1520  00003A  0060  F00F  F7E5   	movff	SendCanFrame@length,14309	;volatile
  1521                           
  1522                           ;CanModule.c: 148:             switch(length) {
  1523  000040  EF64  F000         	goto	i2l1374
  1524  000044                     i2l1370:
  1525                           
  1526                           ; BSR set to: 55
  1527                           ;CanModule.c: 151:                     TXB0D7 = data[7];
  1528  000044  EE20 F007          	lfsr	2,7
  1529  000048  5001               	movf	SendCanFrame@data^0,w,c
  1530  00004A  26D9               	addwf	fsr2l,f,c
  1531  00004C  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1532  00004E  22DA               	addwfc	fsr2h,f,c
  1533  000050  50DF               	movf	indf2,w,c
  1534  000052  6FED               	movwf	237,b	;volatile
  1535  000054                     i2l342:
  1536                           
  1537                           ; BSR set to: 55
  1538                           ;CanModule.c: 153:                     TXB0D6 = data[6];
  1539  000054  EE20 F006          	lfsr	2,6
  1540  000058  5001               	movf	SendCanFrame@data^0,w,c
  1541  00005A  26D9               	addwf	fsr2l,f,c
  1542  00005C  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1543  00005E  22DA               	addwfc	fsr2h,f,c
  1544  000060  50DF               	movf	indf2,w,c
  1545  000062  6FEC               	movwf	236,b	;volatile
  1546  000064                     i2l343:
  1547                           
  1548                           ; BSR set to: 55
  1549                           ;CanModule.c: 155:                     TXB0D5 = data[5];
  1550  000064  EE20 F005          	lfsr	2,5
  1551  000068  5001               	movf	SendCanFrame@data^0,w,c
  1552  00006A  26D9               	addwf	fsr2l,f,c
  1553  00006C  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1554  00006E  22DA               	addwfc	fsr2h,f,c
  1555  000070  50DF               	movf	indf2,w,c
  1556  000072  6FEB               	movwf	235,b	;volatile
  1557  000074                     i2l344:
  1558                           
  1559                           ; BSR set to: 55
  1560                           ;CanModule.c: 157:                     TXB0D4 = data[4];
  1561  000074  EE20 F004          	lfsr	2,4
  1562  000078  5001               	movf	SendCanFrame@data^0,w,c
  1563  00007A  26D9               	addwf	fsr2l,f,c
  1564  00007C  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1565  00007E  22DA               	addwfc	fsr2h,f,c
  1566  000080  50DF               	movf	indf2,w,c
  1567  000082  6FEA               	movwf	234,b	;volatile
  1568  000084                     i2l345:
  1569                           
  1570                           ; BSR set to: 55
  1571                           ;CanModule.c: 159:                     TXB0D3 = data[3];
  1572  000084  EE20 F003          	lfsr	2,3
  1573  000088  5001               	movf	SendCanFrame@data^0,w,c
  1574  00008A  26D9               	addwf	fsr2l,f,c
  1575  00008C  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1576  00008E  22DA               	addwfc	fsr2h,f,c
  1577  000090  50DF               	movf	indf2,w,c
  1578  000092  6FE9               	movwf	233,b	;volatile
  1579  000094                     i2l346:
  1580                           
  1581                           ; BSR set to: 55
  1582                           ;CanModule.c: 161:                     TXB0D2 = data[2];
  1583  000094  EE20 F002          	lfsr	2,2
  1584  000098  5001               	movf	SendCanFrame@data^0,w,c
  1585  00009A  26D9               	addwf	fsr2l,f,c
  1586  00009C  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1587  00009E  22DA               	addwfc	fsr2h,f,c
  1588  0000A0  50DF               	movf	indf2,w,c
  1589  0000A2  6FE8               	movwf	232,b	;volatile
  1590  0000A4                     i2l347:
  1591                           
  1592                           ; BSR set to: 55
  1593                           ;CanModule.c: 163:                     TXB0D1 = data[1];
  1594  0000A4  EE20 F001          	lfsr	2,1
  1595  0000A8  5001               	movf	SendCanFrame@data^0,w,c
  1596  0000AA  26D9               	addwf	fsr2l,f,c
  1597  0000AC  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1598  0000AE  22DA               	addwfc	fsr2h,f,c
  1599  0000B0  50DF               	movf	indf2,w,c
  1600  0000B2  6FE7               	movwf	231,b	;volatile
  1601  0000B4                     i2l1372:
  1602                           
  1603                           ; BSR set to: 55
  1604                           ;CanModule.c: 165:                     TXB0D0 = data[0];
  1605  0000B4  0060  F007  FFD9   	movff	SendCanFrame@data,fsr2l
  1606  0000BA  0060  F00B  FFDA   	movff	SendCanFrame@data+1,fsr2h
  1607  0000C0  50DF               	movf	indf2,w,c
  1608  0000C2  6FE6               	movwf	230,b	;volatile
  1609                           
  1610                           ;CanModule.c: 166:             }
  1611  0000C4  EF91  F000         	goto	i2l349
  1612  0000C8                     i2l1374:
  1613                           
  1614                           ; BSR set to: 55
  1615  0000C8  5003               	movf	SendCanFrame@length^0,w,c
  1616  0000CA  6E04               	movwf	??_SendCanFrame^0,c
  1617  0000CC  6A05               	clrf	(??_SendCanFrame+1)^0,c
  1618                           
  1619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1620                           ; Switch size 1, requested type "simple"
  1621                           ; Number of cases is 1, Range of values is 0 to 0
  1622                           ; switch strategies available:
  1623                           ; Name         Instructions Cycles
  1624                           ; simple_byte            4     3 (average)
  1625                           ;	Chosen strategy is simple_byte
  1626  0000CE  5005               	movf	(??_SendCanFrame+1)^0,w,c
  1627  0000D0  0A00               	xorlw	0	; case 0
  1628  0000D2  B4D8               	btfsc	status,2,c
  1629  0000D4  EF6E  F000         	goto	i2l1686
  1630  0000D8  EF22  F000         	goto	i2l1370
  1631  0000DC                     i2l1686:
  1632                           
  1633                           ; BSR set to: 55
  1634                           ; Switch size 1, requested type "simple"
  1635                           ; Number of cases is 8, Range of values is 1 to 8
  1636                           ; switch strategies available:
  1637                           ; Name         Instructions Cycles
  1638                           ; simple_byte           25    13 (average)
  1639                           ;	Chosen strategy is simple_byte
  1640  0000DC  5004               	movf	??_SendCanFrame^0,w,c
  1641  0000DE  0A01               	xorlw	1	; case 1
  1642  0000E0  B4D8               	btfsc	status,2,c
  1643  0000E2  EF5A  F000         	goto	i2l1372
  1644  0000E6  0A03               	xorlw	3	; case 2
  1645  0000E8  B4D8               	btfsc	status,2,c
  1646  0000EA  EF52  F000         	goto	i2l347
  1647  0000EE  0A01               	xorlw	1	; case 3
  1648  0000F0  B4D8               	btfsc	status,2,c
  1649  0000F2  EF4A  F000         	goto	i2l346
  1650  0000F6  0A07               	xorlw	7	; case 4
  1651  0000F8  B4D8               	btfsc	status,2,c
  1652  0000FA  EF42  F000         	goto	i2l345
  1653  0000FE  0A01               	xorlw	1	; case 5
  1654  000100  B4D8               	btfsc	status,2,c
  1655  000102  EF3A  F000         	goto	i2l344
  1656  000106  0A03               	xorlw	3	; case 6
  1657  000108  B4D8               	btfsc	status,2,c
  1658  00010A  EF32  F000         	goto	i2l343
  1659  00010E  0A01               	xorlw	1	; case 7
  1660  000110  B4D8               	btfsc	status,2,c
  1661  000112  EF2A  F000         	goto	i2l342
  1662  000116  0A0F               	xorlw	15	; case 8
  1663  000118  B4D8               	btfsc	status,2,c
  1664  00011A  EF22  F000         	goto	i2l1370
  1665  00011E  EF22  F000         	goto	i2l1370
  1666  000122                     i2l349:
  1667                           
  1668                           ; BSR set to: 55
  1669                           ;CanModule.c: 167:             TXB0CONbits.TXREQ = 1;
  1670  000122  87E0               	bsf	224,3,b	;volatile
  1671                           
  1672                           ;CanModule.c: 168:             break;
  1673  000124  EF9C  F001         	goto	i2l376
  1674  000128                     i2l338:
  1675                           
  1676                           ; BSR set to: 55
  1677  000128  B7D0               	btfsc	208,3,b	;volatile
  1678  00012A  EF99  F000         	goto	i2u26_41
  1679  00012E  EF9B  F000         	goto	i2u26_40
  1680  000132                     i2u26_41:
  1681  000132  EF17  F001         	goto	i2l352
  1682  000136                     i2u26_40:
  1683  000136                     
  1684                           ; BSR set to: 55
  1685                           ;CanModule.c: 171:             TXB1SIDH = CANADRH;
  1686  000136  0060  F05F  F7D1   	movff	_CANADRH,14289	;volatile
  1687                           
  1688                           ;CanModule.c: 172:             TXB1SIDL = CANADRL;
  1689  00013C  0060  F05B  F7D2   	movff	_CANADRL,14290	;volatile
  1690  000142                     
  1691                           ; BSR set to: 55
  1692                           ;CanModule.c: 173:             TXB1DLC = 1;
  1693  000142  0E01               	movlw	1
  1694  000144  6FD5               	movwf	213,b	;volatile
  1695                           
  1696                           ;CanModule.c: 174:             switch(length) {
  1697  000146  EFE7  F000         	goto	i2l1386
  1698  00014A                     i2l1382:
  1699                           
  1700                           ; BSR set to: 55
  1701                           ;CanModule.c: 176:                     TXB1D7 = data[7];
  1702  00014A  EE20 F007          	lfsr	2,7
  1703  00014E  5001               	movf	SendCanFrame@data^0,w,c
  1704  000150  26D9               	addwf	fsr2l,f,c
  1705  000152  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1706  000154  22DA               	addwfc	fsr2h,f,c
  1707  000156  50DF               	movf	indf2,w,c
  1708  000158  6FDD               	movwf	221,b	;volatile
  1709  00015A                     i2l355:
  1710                           
  1711                           ; BSR set to: 55
  1712                           ;CanModule.c: 178:                     TXB1D6 = data[6];
  1713  00015A  EE20 F006          	lfsr	2,6
  1714  00015E  5001               	movf	SendCanFrame@data^0,w,c
  1715  000160  26D9               	addwf	fsr2l,f,c
  1716  000162  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1717  000164  22DA               	addwfc	fsr2h,f,c
  1718  000166  50DF               	movf	indf2,w,c
  1719  000168  6FDC               	movwf	220,b	;volatile
  1720  00016A                     i2l356:
  1721                           
  1722                           ; BSR set to: 55
  1723                           ;CanModule.c: 180:                     TXB1D5 = data[5];
  1724  00016A  EE20 F005          	lfsr	2,5
  1725  00016E  5001               	movf	SendCanFrame@data^0,w,c
  1726  000170  26D9               	addwf	fsr2l,f,c
  1727  000172  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1728  000174  22DA               	addwfc	fsr2h,f,c
  1729  000176  50DF               	movf	indf2,w,c
  1730  000178  6FDB               	movwf	219,b	;volatile
  1731  00017A                     i2l357:
  1732                           
  1733                           ; BSR set to: 55
  1734                           ;CanModule.c: 182:                     TXB1D4 = data[4];
  1735  00017A  EE20 F004          	lfsr	2,4
  1736  00017E  5001               	movf	SendCanFrame@data^0,w,c
  1737  000180  26D9               	addwf	fsr2l,f,c
  1738  000182  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1739  000184  22DA               	addwfc	fsr2h,f,c
  1740  000186  50DF               	movf	indf2,w,c
  1741  000188  6FDA               	movwf	218,b	;volatile
  1742  00018A                     i2l358:
  1743                           
  1744                           ; BSR set to: 55
  1745                           ;CanModule.c: 184:                     TXB1D3 = data[3];
  1746  00018A  EE20 F003          	lfsr	2,3
  1747  00018E  5001               	movf	SendCanFrame@data^0,w,c
  1748  000190  26D9               	addwf	fsr2l,f,c
  1749  000192  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1750  000194  22DA               	addwfc	fsr2h,f,c
  1751  000196  50DF               	movf	indf2,w,c
  1752  000198  6FD9               	movwf	217,b	;volatile
  1753  00019A                     i2l359:
  1754                           
  1755                           ; BSR set to: 55
  1756                           ;CanModule.c: 186:                     TXB1D2 = data[2];
  1757  00019A  EE20 F002          	lfsr	2,2
  1758  00019E  5001               	movf	SendCanFrame@data^0,w,c
  1759  0001A0  26D9               	addwf	fsr2l,f,c
  1760  0001A2  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1761  0001A4  22DA               	addwfc	fsr2h,f,c
  1762  0001A6  50DF               	movf	indf2,w,c
  1763  0001A8  6FD8               	movwf	216,b	;volatile
  1764  0001AA                     i2l360:
  1765                           
  1766                           ; BSR set to: 55
  1767                           ;CanModule.c: 188:                     TXB1D1 = data[1];
  1768  0001AA  EE20 F001          	lfsr	2,1
  1769  0001AE  5001               	movf	SendCanFrame@data^0,w,c
  1770  0001B0  26D9               	addwf	fsr2l,f,c
  1771  0001B2  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1772  0001B4  22DA               	addwfc	fsr2h,f,c
  1773  0001B6  50DF               	movf	indf2,w,c
  1774  0001B8  6FD7               	movwf	215,b	;volatile
  1775  0001BA                     i2l1384:
  1776                           
  1777                           ; BSR set to: 55
  1778                           ;CanModule.c: 190:                     TXB1D0 = data[0];
  1779  0001BA  0060  F007  FFD9   	movff	SendCanFrame@data,fsr2l
  1780  0001C0  0060  F00B  FFDA   	movff	SendCanFrame@data+1,fsr2h
  1781  0001C6  50DF               	movf	indf2,w,c
  1782  0001C8  6FD6               	movwf	214,b	;volatile
  1783                           
  1784                           ;CanModule.c: 191:             }
  1785  0001CA  EF14  F001         	goto	i2l362
  1786  0001CE                     i2l1386:
  1787                           
  1788                           ; BSR set to: 55
  1789  0001CE  5003               	movf	SendCanFrame@length^0,w,c
  1790  0001D0  6E04               	movwf	??_SendCanFrame^0,c
  1791  0001D2  6A05               	clrf	(??_SendCanFrame+1)^0,c
  1792                           
  1793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1794                           ; Switch size 1, requested type "simple"
  1795                           ; Number of cases is 1, Range of values is 0 to 0
  1796                           ; switch strategies available:
  1797                           ; Name         Instructions Cycles
  1798                           ; simple_byte            4     3 (average)
  1799                           ;	Chosen strategy is simple_byte
  1800  0001D4  5005               	movf	(??_SendCanFrame+1)^0,w,c
  1801  0001D6  0A00               	xorlw	0	; case 0
  1802  0001D8  B4D8               	btfsc	status,2,c
  1803  0001DA  EFF1  F000         	goto	i2l1688
  1804  0001DE  EF14  F001         	goto	i2l362
  1805  0001E2                     i2l1688:
  1806                           
  1807                           ; BSR set to: 55
  1808                           ; Switch size 1, requested type "simple"
  1809                           ; Number of cases is 8, Range of values is 0 to 7
  1810                           ; switch strategies available:
  1811                           ; Name         Instructions Cycles
  1812                           ; simple_byte           25    13 (average)
  1813                           ;	Chosen strategy is simple_byte
  1814  0001E2  5004               	movf	??_SendCanFrame^0,w,c
  1815  0001E4  0A00               	xorlw	0	; case 0
  1816  0001E6  B4D8               	btfsc	status,2,c
  1817  0001E8  EFDD  F000         	goto	i2l1384
  1818  0001EC  0A01               	xorlw	1	; case 1
  1819  0001EE  B4D8               	btfsc	status,2,c
  1820  0001F0  EFD5  F000         	goto	i2l360
  1821  0001F4  0A03               	xorlw	3	; case 2
  1822  0001F6  B4D8               	btfsc	status,2,c
  1823  0001F8  EFCD  F000         	goto	i2l359
  1824  0001FC  0A01               	xorlw	1	; case 3
  1825  0001FE  B4D8               	btfsc	status,2,c
  1826  000200  EFC5  F000         	goto	i2l358
  1827  000204  0A07               	xorlw	7	; case 4
  1828  000206  B4D8               	btfsc	status,2,c
  1829  000208  EFBD  F000         	goto	i2l357
  1830  00020C  0A01               	xorlw	1	; case 5
  1831  00020E  B4D8               	btfsc	status,2,c
  1832  000210  EFB5  F000         	goto	i2l356
  1833  000214  0A03               	xorlw	3	; case 6
  1834  000216  B4D8               	btfsc	status,2,c
  1835  000218  EFAD  F000         	goto	i2l355
  1836  00021C  0A01               	xorlw	1	; case 7
  1837  00021E  B4D8               	btfsc	status,2,c
  1838  000220  EFA5  F000         	goto	i2l1382
  1839  000224  EF14  F001         	goto	i2l362
  1840  000228                     i2l362:
  1841                           
  1842                           ; BSR set to: 55
  1843                           ;CanModule.c: 192:             TXB1CONbits.TXREQ = 1;
  1844  000228  87D0               	bsf	208,3,b	;volatile
  1845                           
  1846                           ;CanModule.c: 193:             break;
  1847  00022A  EF9C  F001         	goto	i2l376
  1848  00022E                     i2l352:
  1849                           
  1850                           ; BSR set to: 55
  1851  00022E  B7C0               	btfsc	192,3,b	;volatile
  1852  000230  EF1C  F001         	goto	i2u27_41
  1853  000234  EF1E  F001         	goto	i2u27_40
  1854  000238                     i2u27_41:
  1855  000238  EF9A  F001         	goto	i2l351
  1856  00023C                     i2u27_40:
  1857  00023C                     
  1858                           ; BSR set to: 55
  1859                           ;CanModule.c: 196:             TXB2SIDH = CANADRH;
  1860  00023C  0060  F05F  F7C1   	movff	_CANADRH,14273	;volatile
  1861                           
  1862                           ;CanModule.c: 197:             TXB2SIDL = CANADRL;
  1863  000242  0060  F05B  F7C2   	movff	_CANADRL,14274	;volatile
  1864  000248                     
  1865                           ; BSR set to: 55
  1866                           ;CanModule.c: 198:             TXB2DLC = 1;
  1867  000248  0E01               	movlw	1
  1868  00024A  6FC5               	movwf	197,b	;volatile
  1869                           
  1870                           ;CanModule.c: 199:             switch(length) {
  1871  00024C  EF6A  F001         	goto	i2l1398
  1872  000250                     i2l1394:
  1873                           
  1874                           ; BSR set to: 55
  1875                           ;CanModule.c: 201:                     TXB2D7 = data[7];
  1876  000250  EE20 F007          	lfsr	2,7
  1877  000254  5001               	movf	SendCanFrame@data^0,w,c
  1878  000256  26D9               	addwf	fsr2l,f,c
  1879  000258  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1880  00025A  22DA               	addwfc	fsr2h,f,c
  1881  00025C  50DF               	movf	indf2,w,c
  1882  00025E  6FCD               	movwf	205,b	;volatile
  1883  000260                     i2l367:
  1884                           
  1885                           ; BSR set to: 55
  1886                           ;CanModule.c: 203:                     TXB2D6 = data[6];
  1887  000260  EE20 F006          	lfsr	2,6
  1888  000264  5001               	movf	SendCanFrame@data^0,w,c
  1889  000266  26D9               	addwf	fsr2l,f,c
  1890  000268  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1891  00026A  22DA               	addwfc	fsr2h,f,c
  1892  00026C  50DF               	movf	indf2,w,c
  1893  00026E  6FCC               	movwf	204,b	;volatile
  1894  000270                     i2l368:
  1895                           
  1896                           ; BSR set to: 55
  1897                           ;CanModule.c: 205:                     TXB2D5 = data[5];
  1898  000270  EE20 F005          	lfsr	2,5
  1899  000274  5001               	movf	SendCanFrame@data^0,w,c
  1900  000276  26D9               	addwf	fsr2l,f,c
  1901  000278  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1902  00027A  22DA               	addwfc	fsr2h,f,c
  1903  00027C  50DF               	movf	indf2,w,c
  1904  00027E  6FCB               	movwf	203,b	;volatile
  1905  000280                     i2l369:
  1906                           
  1907                           ; BSR set to: 55
  1908                           ;CanModule.c: 207:                     TXB2D4 = data[4];
  1909  000280  EE20 F004          	lfsr	2,4
  1910  000284  5001               	movf	SendCanFrame@data^0,w,c
  1911  000286  26D9               	addwf	fsr2l,f,c
  1912  000288  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1913  00028A  22DA               	addwfc	fsr2h,f,c
  1914  00028C  50DF               	movf	indf2,w,c
  1915  00028E  6FCA               	movwf	202,b	;volatile
  1916  000290                     i2l370:
  1917                           
  1918                           ; BSR set to: 55
  1919                           ;CanModule.c: 209:                     TXB2D3 = data[3];
  1920  000290  EE20 F003          	lfsr	2,3
  1921  000294  5001               	movf	SendCanFrame@data^0,w,c
  1922  000296  26D9               	addwf	fsr2l,f,c
  1923  000298  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1924  00029A  22DA               	addwfc	fsr2h,f,c
  1925  00029C  50DF               	movf	indf2,w,c
  1926  00029E  6FC9               	movwf	201,b	;volatile
  1927  0002A0                     i2l371:
  1928                           
  1929                           ; BSR set to: 55
  1930                           ;CanModule.c: 211:                     TXB2D2 = data[2];
  1931  0002A0  EE20 F002          	lfsr	2,2
  1932  0002A4  5001               	movf	SendCanFrame@data^0,w,c
  1933  0002A6  26D9               	addwf	fsr2l,f,c
  1934  0002A8  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1935  0002AA  22DA               	addwfc	fsr2h,f,c
  1936  0002AC  50DF               	movf	indf2,w,c
  1937  0002AE  6FC8               	movwf	200,b	;volatile
  1938  0002B0                     i2l372:
  1939                           
  1940                           ; BSR set to: 55
  1941                           ;CanModule.c: 213:                     TXB2D1 = data[1];
  1942  0002B0  EE20 F001          	lfsr	2,1
  1943  0002B4  5001               	movf	SendCanFrame@data^0,w,c
  1944  0002B6  26D9               	addwf	fsr2l,f,c
  1945  0002B8  5002               	movf	(SendCanFrame@data+1)^0,w,c
  1946  0002BA  22DA               	addwfc	fsr2h,f,c
  1947  0002BC  50DF               	movf	indf2,w,c
  1948  0002BE  6FC7               	movwf	199,b	;volatile
  1949  0002C0                     i2l1396:
  1950                           
  1951                           ; BSR set to: 55
  1952                           ;CanModule.c: 215:                     TXB2D0 = data[0];
  1953  0002C0  0060  F007  FFD9   	movff	SendCanFrame@data,fsr2l
  1954  0002C6  0060  F00B  FFDA   	movff	SendCanFrame@data+1,fsr2h
  1955  0002CC  50DF               	movf	indf2,w,c
  1956  0002CE  6FC6               	movwf	198,b	;volatile
  1957                           
  1958                           ;CanModule.c: 216:             }
  1959  0002D0  EF97  F001         	goto	i2l374
  1960  0002D4                     i2l1398:
  1961                           
  1962                           ; BSR set to: 55
  1963  0002D4  5003               	movf	SendCanFrame@length^0,w,c
  1964  0002D6  6E04               	movwf	??_SendCanFrame^0,c
  1965  0002D8  6A05               	clrf	(??_SendCanFrame+1)^0,c
  1966                           
  1967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1968                           ; Switch size 1, requested type "simple"
  1969                           ; Number of cases is 1, Range of values is 0 to 0
  1970                           ; switch strategies available:
  1971                           ; Name         Instructions Cycles
  1972                           ; simple_byte            4     3 (average)
  1973                           ;	Chosen strategy is simple_byte
  1974  0002DA  5005               	movf	(??_SendCanFrame+1)^0,w,c
  1975  0002DC  0A00               	xorlw	0	; case 0
  1976  0002DE  B4D8               	btfsc	status,2,c
  1977  0002E0  EF74  F001         	goto	i2l1690
  1978  0002E4  EF97  F001         	goto	i2l374
  1979  0002E8                     i2l1690:
  1980                           
  1981                           ; BSR set to: 55
  1982                           ; Switch size 1, requested type "simple"
  1983                           ; Number of cases is 8, Range of values is 0 to 7
  1984                           ; switch strategies available:
  1985                           ; Name         Instructions Cycles
  1986                           ; simple_byte           25    13 (average)
  1987                           ;	Chosen strategy is simple_byte
  1988  0002E8  5004               	movf	??_SendCanFrame^0,w,c
  1989  0002EA  0A00               	xorlw	0	; case 0
  1990  0002EC  B4D8               	btfsc	status,2,c
  1991  0002EE  EF60  F001         	goto	i2l1396
  1992  0002F2  0A01               	xorlw	1	; case 1
  1993  0002F4  B4D8               	btfsc	status,2,c
  1994  0002F6  EF58  F001         	goto	i2l372
  1995  0002FA  0A03               	xorlw	3	; case 2
  1996  0002FC  B4D8               	btfsc	status,2,c
  1997  0002FE  EF50  F001         	goto	i2l371
  1998  000302  0A01               	xorlw	1	; case 3
  1999  000304  B4D8               	btfsc	status,2,c
  2000  000306  EF48  F001         	goto	i2l370
  2001  00030A  0A07               	xorlw	7	; case 4
  2002  00030C  B4D8               	btfsc	status,2,c
  2003  00030E  EF40  F001         	goto	i2l369
  2004  000312  0A01               	xorlw	1	; case 5
  2005  000314  B4D8               	btfsc	status,2,c
  2006  000316  EF38  F001         	goto	i2l368
  2007  00031A  0A03               	xorlw	3	; case 6
  2008  00031C  B4D8               	btfsc	status,2,c
  2009  00031E  EF30  F001         	goto	i2l367
  2010  000322  0A01               	xorlw	1	; case 7
  2011  000324  B4D8               	btfsc	status,2,c
  2012  000326  EF28  F001         	goto	i2l1394
  2013  00032A  EF97  F001         	goto	i2l374
  2014  00032E                     i2l374:
  2015                           
  2016                           ; BSR set to: 55
  2017                           ;CanModule.c: 217:             TXB2CONbits.TXREQ = 1;
  2018  00032E  87C0               	bsf	192,3,b	;volatile
  2019                           
  2020                           ;CanModule.c: 218:             break;
  2021  000330  EF9C  F001         	goto	i2l376
  2022  000334                     i2l351:
  2023                           
  2024                           ; BSR set to: 55
  2025  000334  EF0F  F000         	goto	i2l337
  2026  000338                     i2l376:
  2027                           
  2028                           ; BSR set to: 55
  2029  000338  0012               	return		;funcret
  2030  00033A                     __end_of_SendCanFrame:
  2031                           	opt callstack 0
  2032                           
  2033                           ;
  2034                           ; Interrupt Vector Table @ 0x8
  2035                           ;
  2036                           
  2037                           	psect	ivt0x8
  2038  000008                     __pivt0x8:
  2039                           	opt callstack 0
  2040  000008                     ivt0x8_base:
  2041                           	opt callstack 0
  2042                           
  2043                           ; high-priority vector
  2044  000008  EF4F  F003         	goto	_IRQ
  2045  000018                     	org	16
  2046                           
  2047                           ; low-priority vector
  2048  000018  00FF               	reset	
  2049  0000                     
  2050                           	psect	rparam
  2051  0000                     tosu	equ	0x3FFF
  2052                           tosh	equ	0x3FFE
  2053                           tosl	equ	0x3FFD
  2054                           stkptr	equ	0x3FFC
  2055                           pclatu	equ	0x3FFB
  2056                           pclath	equ	0x3FFA
  2057                           pcl	equ	0x3FF9
  2058                           tblptru	equ	0x3FF8
  2059                           tblptrh	equ	0x3FF7
  2060                           tblptrl	equ	0x3FF6
  2061                           tablat	equ	0x3FF5
  2062                           prodh	equ	0x3FF4
  2063                           prodl	equ	0x3FF3
  2064                           indf0	equ	0x3FEF
  2065                           postinc0	equ	0x3FEE
  2066                           postdec0	equ	0x3FED
  2067                           preinc0	equ	0x3FEC
  2068                           plusw0	equ	0x3FEB
  2069                           fsr0h	equ	0x3FEA
  2070                           fsr0l	equ	0x3FE9
  2071                           wreg	equ	0x3FE8
  2072                           indf1	equ	0x3FE7
  2073                           postinc1	equ	0x3FE6
  2074                           postdec1	equ	0x3FE5
  2075                           preinc1	equ	0x3FE4
  2076                           plusw1	equ	0x3FE3
  2077                           fsr1h	equ	0x3FE2
  2078                           fsr1l	equ	0x3FE1
  2079                           bsr	equ	0x3FE0
  2080                           indf2	equ	0x3FDF
  2081                           postinc2	equ	0x3FDE
  2082                           postdec2	equ	0x3FDD
  2083                           preinc2	equ	0x3FDC
  2084                           plusw2	equ	0x3FDB
  2085                           fsr2h	equ	0x3FDA
  2086                           fsr2l	equ	0x3FD9
  2087                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     21      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    SendCanFrame@data	PTR unsigned char  size(2) Largest target is 6
		 -> SendCanFrameS@dataA(COMRAM[1]), HandleCommand@data(COMRAM[6]), I2CScan@data_643(COMRAM[2]), I2CScan@data(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_initialize
    _initialize->_InitializeCan

Critical Paths under _IRQ in COMRAM

    _ProcessCanMessage->_HandleRequest
    _SendCanFrameS->_SendCanFrame
    _HandleRequest->_I2CScan
    _I2CScan->_SendCanFrame
    _HandleCommand->_SendCanFrame

Critical Paths under _main in BANK0

    None.

Critical Paths under _IRQ in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRQ in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRQ in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRQ in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IRQ in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IRQ in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IRQ in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IRQ in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IRQ in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IRQ in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IRQ in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IRQ in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IRQ in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IRQ in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IRQ in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _IRQ in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     166
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0     166
                                             19 COMRAM     2     2      0
                      _InitializeCan
 ---------------------------------------------------------------------------------
 (2) _InitializeCan                                        3     2      1     120
                                             16 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _IRQ                                                  0     0      0    4112
                  _ProcessCanMessage
 ---------------------------------------------------------------------------------
 (4) _ProcessCanMessage                                    0     0      0    4112
                      _HandleCommand
                      _HandleRequest
                      _SendCanFrameS
 ---------------------------------------------------------------------------------
 (5) _SendCanFrameS                                        2     2      0    1293
                                              5 COMRAM     2     2      0
                       _SendCanFrame
 ---------------------------------------------------------------------------------
 (5) _HandleRequest                                        2     2      0    1479
                                             14 COMRAM     2     2      0
                            _I2CScan
 ---------------------------------------------------------------------------------
 (6) _I2CScan                                              9     9      0    1479
                                              5 COMRAM     9     9      0
                       _SendCanFrame
 ---------------------------------------------------------------------------------
 (5) _HandleCommand                                        7     7      0    1340
                                              5 COMRAM     7     7      0
                       _SendCanFrame
 ---------------------------------------------------------------------------------
 (6) _SendCanFrame                                         5     2      3    1224
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _InitializeCan

 _IRQ (ROOT)
   _ProcessCanMessage
     _HandleCommand
       _SendCanFrame
     _HandleRequest
       _I2CScan
         _SendCanFrame
     _SendCanFrameS
       _SendCanFrame

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     15      17       1       24.2%
STACK                0      0       0       2        0.0%
DATA                 0      0      17       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0      17       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BIGRAM             FFF      0       0      37        0.0%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jun 12 03:41:55 2020

__size_of_ProcessCanMessage 0094                 __CFG_CP$OFF 000000                          l99 0576  
               __CFG_LVP$ON 000000                         l104 073E                         l105 073E  
                       l320 04B6                         l321 04C0                         l317 043A  
                       _GIE 01FE97                         u310 043A                         u311 0436  
                       u320 04B6                         u321 04B2                         _IRQ 069E  
           __end_of_I2CScan 069E                         wreg 003FE8               __CFG_BBEN$OFF 000000  
                      ?_IRQ 0001                __CFG_ZCD$OFF 000000                        l1440 0412  
                      l1520 04C2                        l1450 043E                        l1442 0418  
                      l1530 050E                        l1522 04D8                        l1460 0462  
                      l1452 0442                        l1444 041E                        l1540 0546  
                      l1532 0510                        l1524 04F8                        l1470 0480  
                      l1462 0468                        l1454 0450                        l1446 0422  
                      l1438 040C                        l1550 056C                        l1542 0552  
                      l1534 0512                        l1526 050A                        l1472 049E  
                      l1464 046E                        l1456 0456                        l1448 0426  
                      l1552 0570                        l1544 055C                        l1536 0514  
                      l1528 050C                        l1466 0474                        l1458 045C  
                      l1554 0572                        l1546 0568                        l1538 0540  
                      l1468 047A                        l1556 0574                        l1548 056A  
                      l1584 073A                        _LATA 003FBA                        _LATB 003FBB  
                      _LATC 003FBC                        _WPUA 003A41                        _WPUB 003A51  
                      _WPUC 003A61                        _WPUE 003A81               __CFG_FCMEN$ON 000000  
                      _main 073A                        fsr2h 003FDA                        indf2 003FDF  
                      fsr2l 003FD9                        start 001A               __CFG_CSWEN$ON 000000  
              ___param_bank 000000      __size_of_InitializeCan 00B8                       ??_IRQ 0011  
                     ?_main 0001               __CFG_WDTE$OFF 000000              __CFG_DEBUG$OFF 000000  
                     _ERRIF 01CD2D                       i2l112 06C4                       i2l300 0708  
                     i2l117 06D4                       i2l310 03C8                       i2l311 03F2  
                     i2l312 0408                       i2l331 060A                       i2l308 03B8  
                     i2l324 05CA                       i2l342 0054                       i2l334 0722  
                     i2l351 0334                       i2l343 0064                       i2l360 01AA  
                     i2l352 022E                       i2l344 0074                       i2l345 0084  
                     i2l337 001E                       i2l370 0290                       i2l362 0228  
                     i2l346 0094                       i2l338 0128                       i2l371 02A0  
                     i2l355 015A                       i2l347 00A4                       i2l372 02B0  
                     i2l356 016A                       i2l292 064E                       i2l357 017A  
                     i2l349 0122                       i2l374 032E                       i2l358 018A  
                     i2l294 069C                       i2l367 0260                       i2l359 019A  
                     i2l368 0270                       i2l376 0338                       i2l369 0280  
                     i2l289 0688     InitializeCan@CanAddrLow 0011                       _PORTA 003FCA  
                     _TRISA 003FC2                       _TRISB 003FC3                       _TRISC 003FC4  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
        __CFG_MCLRE$EXTMCLR 000000       __end_of_HandleCommand 040A                       status 003FD8  
     __end_of_HandleRequest 070A             __initialization 0724                __end_of_main 0746  
          SendCanFrame@data 0001              __CFG_SAFEN$OFF 000000                   ??_I2CScan 0006  
                    ??_main 0016              __CFG_PR1WAY$ON 000000               __activetblptr 000002  
             _InitializeCan 040A                      _I2C1IE 01CC99                      _CANCON 003F8F  
         HandleCommand@data 0006                      _CIOCON 003700                      _ANSELA 003A40  
                    _ANSELB 003A50                      _ANSELC 003A60                      _RC3I2C 003A6A  
                    _RC4I2C 003A6B                      _RB2PPS 003A0A                      _RC3PPS 003A13  
                    _RC4PPS 003A14                      _ODCONA 003A42                      _ODCONB 003A52  
                    _ODCONC 003A62                      i2l1500 037A                      i2l1420 0616  
                    i2l1412 060C                      i2l1510 03DC                      i2l1502 038E  
                    i2l1430 0666                      i2l1422 061C                      i2l1512 03DE  
                    i2l1504 03A0                      i2l1432 0676                      i2l1424 061E  
            __CFG_WDTCCS$SC 000000                      i2l1370 0044                      i2l1514 03F6  
                    i2l1506 03B0                      i2l1434 0678                      i2l1426 0626  
                    i2l1418 0610                      i2l1380 0142                      i2l1372 00B4  
                    i2l1508 03CA                      i2l1436 068C                      i2l1428 065E  
                    i2l1516 070C                      i2l1390 023C                      i2l1382 014A  
                    i2l1374 00C8                      i2l1518 0712                      i2l1392 0248  
                    i2l1384 01BA                      i2l1368 002E                      i2l1480 06E2  
                    i2l1560 0588                      i2l1394 0250                      i2l1386 01CE  
                    i2l1378 0136                      i2l1490 0350                      i2l1474 06D6  
                    i2l1562 0596                      i2l1570 05C2                      i2l1396 02C0  
                    i2l1492 0362                      i2l1476 06DA                      i2l1580 0602  
                    i2l1572 05D8                      i2l1564 05AA                      i2l1398 02D4  
                    i2l1494 0368                      i2l1574 05E8                      i2l1582 0606  
                    i2l1566 05BA                      i2l1558 0578                      i2l1590 06BC  
                    i2l1496 036E                      i2l1488 033A                      i2l1576 05F6  
                    i2l1568 05C0                      i2l1592 06D2                      i2l1690 02E8  
                    i2l1498 0374                      i2l1578 05FE                      i2l1586 069E  
                    i2l1684 06FA                      i2l1588 06AE                      i2l1686 00DC  
                    i2l1688 01E2                      _INLVLA 003A44                      _INLVLB 003A54  
                    _INLVLC 003A64                      _INLVLE 003A84    InitializeCan@CanAddrHigh 0013  
                    _OSCFRQ 0039DF                      _RXB0D0 003F86                      _RXB1D0 0037F6  
                    _RXB1D1 0037F7                      _RXB1D2 0037F8                      _RXB0IF 01CD28  
                    _RXB1IF 01CD29                      _TXB0D0 0037E6                      _TXB0D1 0037E7  
                    _TXB0D2 0037E8                      _TXB0D3 0037E9                      _TXB0D4 0037EA  
                    _TXB1D0 0037D6                      _TXB0D5 0037EB                      _TXB1D1 0037D7  
                    _TXB0D6 0037EC                      _TXB1D2 0037D8                      _TXB0D7 0037ED  
                    _TXB1D3 0037D9                      _TXB1D4 0037DA                      _TXB2D0 0037C6  
                    _TXB1D5 0037DB                      _TXB2D1 0037C7                      _TXB1D6 0037DC  
                    _TXB2D2 0037C8                      _TXB1D7 0037DD                      _TXB2D3 0037C9  
                    _TXB2D4 0037CA                      _TXB2D5 0037CB                      _TXB2D6 0037CC  
                    _TXB2D7 0037CD               ?_SendCanFrame 0001              __CFG_XINST$OFF 000000  
 __CFG_RSTOSC$HFINTOSC_1MHZ 000000              __CFG_STVREN$ON 000000      __size_of_SendCanFrameS 001A  
            ?_InitializeCan 0011                      tblptru 003FF8              ??_SendCanFrame 0004  
                __accesstop 0060     __end_of__initialization 0730               ___rparam_used 000001  
            __pcstackCOMRAM 0001           SendCanFrameS@data 0006             __CFG_IVT1WAY$ON 000000  
             _SendCanFrameS 070A             __CFG_MVECEN$OFF 000000                  __pnvCOMRAM 0016  
                   IVTBASEH 003FD6                     IVTBASEL 003FD5                     IVTBASEU 003FD7  
                   _I2C1EIE 01CC9A                     _I2C1CLK 003D7B                     _I2C1CNT 003D6C  
                   _I2C1RXB 003D6A                     _I2C1TXB 003D6B             __CFG_PPS1WAY$ON 000000  
                   _CANADRH 0017                     _CANADRL 0016                     _I2CScan 060C  
                   _ECANCON 003F91                     _CANSTAT 003F8E                     _BRGCON1 003703  
                   _BRGCON2 003704                     _BRGCON3 003705             ??_InitializeCan 0012  
       __CFG_PWRTS$PWRT_OFF 000000                     _OSCCON1 0039D9                     i2u30_40 0688  
                   i2u30_41 0684                     i2u40_40 0596                     i2u40_41 0592  
                   i2u25_40 002E                     i2u33_40 0350                     i2u41_40 05AA  
                   i2u25_41 002A                     i2u33_41 034C                     i2u41_41 05A6  
                   i2u26_40 0136                     i2u34_40 0362                     i2u42_40 05BA  
                   i2u26_41 0132                     i2u34_41 035E                     i2u42_41 05B6  
                   i2u27_40 023C                     i2u35_40 038E                     i2u43_40 05D8  
                   i2u27_41 0238                     i2u35_41 038A                     i2u43_41 05D4  
                   i2u36_40 03A0                     i2u28_40 064E                     i2u44_40 05E8  
                   i2u36_41 039C                     i2u28_41 064A                     i2u44_41 05E4  
                   i2u37_40 03C8                     i2u29_40 065E                     i2u45_40 05F6  
                   i2u37_41 03C4                     i2u29_41 065A                     i2u45_41 05F2  
                   i2u38_40 03F2                     i2u46_40 06AE                     i2u38_41 03EE  
                   i2u46_41 06AA                     i2u39_40 0588                     i2u47_40 06BC  
                   i2u39_41 0584                     i2u47_41 06B8                     i2u48_40 06D2  
                   i2u48_41 06CE                     _TXB0DLC 0037E5                     _SLRCONA 003A43  
                   _SLRCONB 003A53                     _SLRCONC 003A63                     _TXB1DLC 0037D5  
                   _TXB2DLC 0037C5              ?_SendCanFrameS 0001             I2CScan@data_643 000C  
                   __Hparam 0000                     __Lparam 0000                     __pcinit 0724  
                   __ramtop 1000                  _initialize 04C2                     __ptext0 073A  
                   __ptext1 04C2                     __ptext2 040A                     __ptext3 069E  
                   __ptext4 0578                     __ptext5 070A                     __ptext6 06D6  
                   __ptext7 060C                     __ptext8 033A                     __ptext9 001E  
      __end_of_SendCanFrame 033A             __CFG_WRTAPP$OFF 000000                __size_of_IRQ 0038  
           __CFG_WRTSAF$OFF 000000        end_of_initialization 0730               __Lmediumconst 0000  
     __CFG_WDTCPS$WDTCPS_31 000000      __size_of_HandleCommand 00D0             ??_SendCanFrameS 0006  
    __size_of_HandleRequest 0034            __CFG_FEXTOSC$OFF 000000                 ?_initialize 0001  
        SendCanFrameS@dataA 0007          SendCanFrame@length 0003         start_initialization 0724  
               __end_of_IRQ 06D6                  ivt0x8_base 0008                    I2CScan@i 000E  
                  I2CScan@j 0008               _HandleCommand 033A            __CFG_LPBOREN$OFF 000000  
             _HandleRequest 06D6       __size_of_SendCanFrame 031C                    ?_I2CScan 0001  
               I2CScan@data 000A              ?_HandleCommand 0001         __size_of_initialize 00B6  
              _SendCanFrame 001E              ?_HandleRequest 0001                    _I2C1ADB1 003D6E  
                  _I2C1CON0 003D73                    _I2C1CON1 003D74                    _I2C1CON2 003D75  
                  _I2C1TXIE 01CC98      __CFG_BBSIZE$BBSIZE_512 000000       __end_of_InitializeCan 04C2  
                  _CANRXPPS 003AED                  _I2C1SDAPPS 003AE4                  _I2C1SCLPPS 003AE3  
                  _PIE5bits 003995         __CFG_BORV$VBOR_2P45 000000               _I2C1STAT1bits 003D78  
                  _PIR5bits 0039A5                    _RXF0SIDH 0037A0                    _RXF0SIDL 0037A1  
                  _RXF1SIDH 0037A4                    _RXF1SIDL 0037A5                    _RXF2SIDH 0037A8  
                  _RXF2SIDL 0037A9                    _RXF3SIDH 0037AC                    _RXF3SIDL 0037AD  
                  _RXF4SIDH 0037B0                    _RXF4SIDL 0037B1                    _RXF5SIDH 0037B4  
                  _RXF5SIDL 0037B5                    _TXB0SIDH 0037E1                    _TXB0SIDL 0037E2  
                  _TXB1SIDH 0037D1                    _TXB1SIDL 0037D2                    _TXB2SIDH 0037C1  
                  _TXB2SIDL 0037C2                    _RXM0SIDH 0037B8                    _RXM0SIDL 0037B9  
                  _RXM1SIDH 0037BC                    _RXM1SIDL 0037BD            __size_of_I2CScan 0092  
               _INTCON0bits 003FD2             ??_HandleCommand 0006             ??_HandleRequest 000F  
                  __Hrparam 0000                    __Lrparam 0000          __CFG_BOREN$SBORDIS 000000  
         _ProcessCanMessage 0578                ??_initialize 0014          ?_ProcessCanMessage 0001  
              _I2C1CON0bits 003D73                _I2C1CON1bits 003D74                    __pivt0x8 0008  
       ??_ProcessCanMessage 0011       __end_of_SendCanFrameS 0724               __size_of_main 000C  
        __end_of_initialize 0578        __CFG_WDTCWS$WDTCWS_7 000000   __end_of_ProcessCanMessage 060C  
               _RXB0DLCbits 003F85                 _RXB1DLCbits 0037F5                 _RXB0CONbits 003F80  
               _RXB1CONbits 0037F0              HandleCommand@i 000C                    intlevel2 0000  
         __CFG_CLKOUTEN$OFF 000000                 _TXB0CONbits 0037E0                 _TXB1CONbits 0037D0  
               _TXB2CONbits 0037C0          initialize@canAddrH 0014          initialize@canAddrL 0015  
