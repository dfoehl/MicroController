

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 12 22:39:42 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1503 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010E                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011D                     	;# 
   103  018C                     	;# 
   104  018E                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0194                     	;# 
   111  0195                     	;# 
   112  0196                     	;# 
   113  0197                     	;# 
   114  020C                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0217                     	;# 
   130  0391                     	;# 
   131  0392                     	;# 
   132  0393                     	;# 
   133  0498                     	;# 
   134  0498                     	;# 
   135  0499                     	;# 
   136  049A                     	;# 
   137  049B                     	;# 
   138  049B                     	;# 
   139  049C                     	;# 
   140  049D                     	;# 
   141  049E                     	;# 
   142  049F                     	;# 
   143  0611                     	;# 
   144  0612                     	;# 
   145  0613                     	;# 
   146  0613                     	;# 
   147  0614                     	;# 
   148  0615                     	;# 
   149  0616                     	;# 
   150  0616                     	;# 
   151  0617                     	;# 
   152  0618                     	;# 
   153  0619                     	;# 
   154  0619                     	;# 
   155  061A                     	;# 
   156  061B                     	;# 
   157  061C                     	;# 
   158  061C                     	;# 
   159  0691                     	;# 
   160  0692                     	;# 
   161  0693                     	;# 
   162  0694                     	;# 
   163  0695                     	;# 
   164  0F0F                     	;# 
   165  0F10                     	;# 
   166  0F11                     	;# 
   167  0F12                     	;# 
   168  0F13                     	;# 
   169  0F14                     	;# 
   170  0F15                     	;# 
   171  0F16                     	;# 
   172  0F17                     	;# 
   173  0F18                     	;# 
   174  0F19                     	;# 
   175  0F1A                     	;# 
   176  0F1B                     	;# 
   177  0F1C                     	;# 
   178  0F1D                     	;# 
   179  0F1E                     	;# 
   180  0F1F                     	;# 
   181  0FE3                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  000C                     _PORTA	set	12
   194  008B                     _SSP1IF	set	139
   195  005E                     _PEIE	set	94
   196  005F                     _GIE	set	95
   197  0095                     _OPTION_REGbits	set	149
   198  008E                     _TRISC	set	142
   199  008C                     _TRISA	set	140
   200  0099                     _OSCCON	set	153
   201  048B                     _SSP1IE	set	1163
   202  010C                     _LATAbits	set	268
   203  010E                     _LATC	set	270
   204  018C                     _ANSELA	set	396
   205  018E                     _ANSELC	set	398
   206  0215                     _SSPCON1bits	set	533
   207  0214                     _SSP1STATbits	set	532
   208  0211                     _SSPBUF	set	529
   209  0215                     _SSP1CON1bits	set	533
   210  0212                     _SSP1ADD	set	530
   211  0216                     _SSP1CON2	set	534
   212  0215                     _SSP1CON1	set	533
   213  0214                     _SSP1STAT	set	532
   214  020C                     _WPUA	set	524
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  002E                     start_initialization:	
   220  002E                     __initialization:	
   221                           
   222                           ; Clear objects allocated to BANK0
   223  002E  0020               	movlb	0	; select bank0
   224  002F  01BE               	clrf	__pbssBANK0& (0+127)
   225  0030  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   226  0031                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  0031                     __end_of__initialization:	
   230  0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   231  0032  0020               	movlb	0
   232  0033  2834               	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssBANK0
   235  003E                     __pbssBANK0:	
   236  003E                     _currentState:	
   237  003E                     	ds	1
   238  003F                     _targetState:	
   239  003F                     	ds	1
   240                           
   241                           	psect	cstackCOMMON
   242  0070                     __pcstackCOMMON:	
   243  0070                     ?_initialize:	
   244  0070                     ?_main:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_I2C_Slave_Read:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_I2C_Slave_Read:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255  0070                     	ds	2
   256  0072                     ??_initialize:	
   257  0072                     ?_SetLed:	
   258                           ; 1 bytes @ 0x2
   259                           
   260  0072                     ?___awdiv:	
   261                           ; 1 bytes @ 0x2
   262                           
   263  0072                     SetLed@lowPin:	
   264                           ; 2 bytes @ 0x2
   265                           
   266  0072                     ___awdiv@divisor:	
   267                           ; 1 bytes @ 0x2
   268                           
   269                           
   270                           ; 2 bytes @ 0x2
   271  0072                     	ds	1
   272  0073                     SetLed@active:	
   273                           
   274                           ; 1 bytes @ 0x3
   275  0073                     	ds	1
   276  0074                     ??_SetLed:	
   277  0074                     ___awdiv@dividend:	
   278                           ; 1 bytes @ 0x4
   279                           
   280                           
   281                           ; 2 bytes @ 0x4
   282  0074                     	ds	2
   283  0076                     ??___awdiv:	
   284  0076                     _SetLed$193:	
   285                           ; 1 bytes @ 0x6
   286                           
   287                           
   288                           ; 2 bytes @ 0x6
   289  0076                     	ds	1
   290  0077                     ___awdiv@counter:	
   291                           
   292                           ; 1 bytes @ 0x7
   293  0077                     	ds	1
   294  0078                     SetLed@highPin:	
   295  0078                     ___awdiv@sign:	
   296                           ; 1 bytes @ 0x8
   297                           
   298                           
   299                           ; 1 bytes @ 0x8
   300  0078                     	ds	1
   301  0079                     ___awdiv@quotient:	
   302                           
   303                           ; 2 bytes @ 0x9
   304  0079                     	ds	2
   305                           
   306                           	psect	cstackBANK0
   307  0020                     __pcstackBANK0:	
   308  0020                     ??_main:	
   309                           
   310                           ; 1 bytes @ 0x0
   311  0020                     	ds	2
   312  0022                     main@i_204:	
   313                           
   314                           ; 2 bytes @ 0x2
   315  0022                     	ds	2
   316  0024                     main@j:	
   317                           
   318                           ; 2 bytes @ 0x4
   319  0024                     	ds	2
   320  0026                     main@i_215:	
   321                           
   322                           ; 2 bytes @ 0x6
   323  0026                     	ds	2
   324  0028                     main@j_217:	
   325                           
   326                           ; 2 bytes @ 0x8
   327  0028                     	ds	2
   328  002A                     main@i:	
   329                           
   330                           ; 2 bytes @ 0xA
   331  002A                     	ds	2
   332  002C                     main@x:	
   333                           
   334                           ; 2 bytes @ 0xC
   335  002C                     	ds	2
   336  002E                     main@i_214:	
   337                           
   338                           ; 2 bytes @ 0xE
   339  002E                     	ds	2
   340  0030                     main@x_216:	
   341                           
   342                           ; 2 bytes @ 0x10
   343  0030                     	ds	2
   344  0032                     main@highPin:	
   345                           
   346                           ; 4 bytes @ 0x12
   347  0032                     	ds	4
   348  0036                     main@lowPin:	
   349                           
   350                           ; 4 bytes @ 0x16
   351  0036                     	ds	4
   352  003A                     main@pinActive:	
   353                           
   354                           ; 4 bytes @ 0x1A
   355  003A                     	ds	4
   356                           
   357                           	psect	maintext
   358  0034                     __pmaintext:	
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 106 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;  j               2    8[BANK0 ] short 
   369 ;;  j               2    4[BANK0 ] short 
   370 ;;  x               2   16[BANK0 ] int 
   371 ;;  x               2   12[BANK0 ] int 
   372 ;;  i               2   14[BANK0 ] int 
   373 ;;  i               2    6[BANK0 ] int 
   374 ;;  i               2    2[BANK0 ] int 
   375 ;;  i               2   10[BANK0 ] int 
   376 ;;  pinActive       4   26[BANK0 ] unsigned char [4]
   377 ;;  lowPin          4   22[BANK0 ] unsigned char [4]
   378 ;;  highPin         4   18[BANK0 ] unsigned char [4]
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B1F/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1
   388 ;;      Params:         0       0       0
   389 ;;      Locals:         0      28       0
   390 ;;      Temps:          0       2       0
   391 ;;      Totals:         0      30       0
   392 ;;Total ram usage:       30 bytes
   393 ;; Hardware stack levels required when called:    2
   394 ;; This function calls:
   395 ;;		_SetLed
   396 ;;		___awdiv
   397 ;;		_initialize
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _main
   405  0034                     _main:	
   406  0034                     l1155:	
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   409                           
   410                           
   411                           ;main.c: 108:     initialize();
   412  0034  3183  239A  3180   	fcall	_initialize
   413  0037                     l1157:	
   414                           
   415                           ;main.c: 114:         for(int i = 0; i < 4; i++) {
   416  0037  0020               	movlb	0	; select bank0
   417  0038  01AA               	clrf	main@i
   418  0039  01AB               	clrf	main@i+1
   419  003A                     l1163:	
   420                           
   421                           ;main.c: 115:             highPin[i] = 1;
   422  003A  0020               	movlb	0	; select bank0
   423  003B  082A               	movf	main@i,w
   424  003C  3E32               	addlw	(low (main@highPin| 0))& (0+255)
   425  003D  0086               	movwf	6
   426  003E  0187               	clrf	7
   427  003F  0181               	clrf	1
   428  0040  0A81               	incf	1,f
   429                           
   430                           ;main.c: 116:             lowPin[i] = 0;
   431  0041  082A               	movf	main@i,w
   432  0042  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
   433  0043  0086               	movwf	6
   434  0044  0187               	clrf	7
   435  0045  0181               	clrf	1
   436                           
   437                           ;main.c: 117:             pinActive[i] = 0;
   438  0046  082A               	movf	main@i,w
   439  0047  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
   440  0048  0086               	movwf	6
   441  0049  0187               	clrf	7
   442  004A  0181               	clrf	1
   443  004B                     l1165:	
   444                           
   445                           ;main.c: 118:         }
   446  004B  3001               	movlw	1
   447  004C  07AA               	addwf	main@i,f
   448  004D  3000               	movlw	0
   449  004E  3DAB               	addwfc	main@i+1,f
   450  004F                     l1167:	
   451  004F  082B               	movf	main@i+1,w
   452  0050  3A80               	xorlw	128
   453  0051  00A0               	movwf	??_main
   454  0052  3080               	movlw	128
   455  0053  0220               	subwf	??_main,w
   456  0054  1D03               	skipz
   457  0055  2858               	goto	u595
   458  0056  3004               	movlw	4
   459  0057  022A               	subwf	main@i,w
   460  0058                     u595:	
   461  0058  1C03               	skipc
   462  0059  285B               	goto	u591
   463  005A  285C               	goto	u590
   464  005B                     u591:	
   465  005B  283A               	goto	l1163
   466  005C                     u590:	
   467  005C  292B               	goto	l1337
   468  005D                     l1169:	
   469                           
   470                           ;main.c: 124:                 highPin[0] = 0;
   471  005D  01B2               	clrf	main@highPin
   472  005E                     l1171:	
   473                           
   474                           ;main.c: 125:                 lowPin[0] = 1;
   475  005E  01B6               	clrf	main@lowPin
   476  005F  0AB6               	incf	main@lowPin,f
   477  0060                     l1173:	
   478                           
   479                           ;main.c: 126:                 pinActive[0] = 1;
   480  0060  01BA               	clrf	main@pinActive
   481  0061  0ABA               	incf	main@pinActive,f
   482                           
   483                           ;main.c: 127:                 highPin[1] = 0;
   484  0062  01B3               	clrf	main@highPin+1
   485  0063                     l1175:	
   486                           
   487                           ;main.c: 128:                 lowPin[1] = 3;
   488  0063  3003               	movlw	3
   489  0064  00A0               	movwf	??_main
   490  0065  0820               	movf	??_main,w
   491  0066  00B7               	movwf	main@lowPin+1
   492  0067                     l1177:	
   493                           
   494                           ;main.c: 129:                 pinActive[1] = 1;
   495  0067  01BB               	clrf	main@pinActive+1
   496  0068  0ABB               	incf	main@pinActive+1,f
   497                           
   498                           ;main.c: 130:                 break;
   499  0069  295A               	goto	l1339
   500  006A                     l1179:	
   501                           
   502                           ;main.c: 132:                 highPin[0] = 3;
   503  006A  3003               	movlw	3
   504  006B  00A0               	movwf	??_main
   505  006C  0820               	movf	??_main,w
   506  006D  00B2               	movwf	main@highPin
   507  006E                     l1181:	
   508                           
   509                           ;main.c: 133:                 lowPin[0] = 0;
   510  006E  01B6               	clrf	main@lowPin
   511  006F                     l1183:	
   512                           
   513                           ;main.c: 134:                 pinActive[0] = 1;
   514  006F  01BA               	clrf	main@pinActive
   515  0070  0ABA               	incf	main@pinActive,f
   516                           
   517                           ;main.c: 135:                 break;
   518  0071  295A               	goto	l1339
   519  0072                     l1185:	
   520                           
   521                           ;main.c: 137:                 highPin[0] = 3;
   522  0072  3003               	movlw	3
   523  0073  00A0               	movwf	??_main
   524  0074  0820               	movf	??_main,w
   525  0075  00B2               	movwf	main@highPin
   526  0076                     l1187:	
   527                           
   528                           ;main.c: 138:                 lowPin[0] = 0;
   529  0076  01B6               	clrf	main@lowPin
   530  0077                     l1189:	
   531                           
   532                           ;main.c: 139:                 pinActive[0] = 1;
   533  0077  01BA               	clrf	main@pinActive
   534  0078  0ABA               	incf	main@pinActive,f
   535  0079                     l1191:	
   536                           
   537                           ;main.c: 140:                 highPin[1] = 0;
   538  0079  01B3               	clrf	main@highPin+1
   539                           
   540                           ;main.c: 141:                 lowPin[1] = 2;
   541  007A  3002               	movlw	2
   542  007B  00A0               	movwf	??_main
   543  007C  0820               	movf	??_main,w
   544  007D  00B7               	movwf	main@lowPin+1
   545  007E                     l1193:	
   546                           
   547                           ;main.c: 142:                 pinActive[1] = 1;
   548  007E  01BB               	clrf	main@pinActive+1
   549  007F  0ABB               	incf	main@pinActive+1,f
   550  0080                     l1195:	
   551                           
   552                           ;main.c: 143:                 highPin[2] = 1;
   553  0080  01B4               	clrf	main@highPin+2
   554  0081  0AB4               	incf	main@highPin+2,f
   555                           
   556                           ;main.c: 144:                 lowPin[2] = 2;
   557  0082  3002               	movlw	2
   558  0083  00A0               	movwf	??_main
   559  0084  0820               	movf	??_main,w
   560  0085  00B8               	movwf	main@lowPin+2
   561  0086                     l1197:	
   562                           
   563                           ;main.c: 145:                 pinActive[2] = 1;
   564  0086  01BC               	clrf	main@pinActive+2
   565  0087  0ABC               	incf	main@pinActive+2,f
   566                           
   567                           ;main.c: 146:                 break;
   568  0088  295A               	goto	l1339
   569  0089                     l1199:	
   570                           
   571                           ;main.c: 148:                 highPin[0] = 3;
   572  0089  3003               	movlw	3
   573  008A  00A0               	movwf	??_main
   574  008B  0820               	movf	??_main,w
   575  008C  00B2               	movwf	main@highPin
   576  008D                     l1201:	
   577                           
   578                           ;main.c: 149:                 lowPin[0] = 0;
   579  008D  01B6               	clrf	main@lowPin
   580  008E                     l1203:	
   581                           
   582                           ;main.c: 150:                 pinActive[0] = 1;
   583  008E  01BA               	clrf	main@pinActive
   584  008F  0ABA               	incf	main@pinActive,f
   585  0090                     l1205:	
   586                           
   587                           ;main.c: 151:                 highPin[1] = 2;
   588  0090  3002               	movlw	2
   589  0091  00A0               	movwf	??_main
   590  0092  0820               	movf	??_main,w
   591  0093  00B3               	movwf	main@highPin+1
   592  0094                     l1207:	
   593                           
   594                           ;main.c: 152:                 lowPin[1] = 1;
   595  0094  01B7               	clrf	main@lowPin+1
   596  0095  0AB7               	incf	main@lowPin+1,f
   597  0096                     l1209:	
   598                           
   599                           ;main.c: 153:                 pinActive[1] = 1;
   600  0096  01BB               	clrf	main@pinActive+1
   601  0097  0ABB               	incf	main@pinActive+1,f
   602  0098                     l1211:	
   603                           
   604                           ;main.c: 154:                 highPin[2] = 2;
   605  0098  3002               	movlw	2
   606  0099  00A0               	movwf	??_main
   607  009A  0820               	movf	??_main,w
   608  009B  00B4               	movwf	main@highPin+2
   609  009C                     l1213:	
   610                           
   611                           ;main.c: 155:                 lowPin[2] = 0;
   612  009C  01B8               	clrf	main@lowPin+2
   613  009D  2886               	goto	l1197
   614  009E                     l1217:	
   615                           
   616                           ;main.c: 159:                 highPin[0] = 3;
   617  009E  3003               	movlw	3
   618  009F  00A0               	movwf	??_main
   619  00A0  0820               	movf	??_main,w
   620  00A1  00B2               	movwf	main@highPin
   621  00A2                     l1219:	
   622                           
   623                           ;main.c: 160:                 lowPin[0] = 0;
   624  00A2  01B6               	clrf	main@lowPin
   625  00A3                     l1221:	
   626                           
   627                           ;main.c: 161:                 pinActive[0] = 1;
   628  00A3  01BA               	clrf	main@pinActive
   629  00A4  0ABA               	incf	main@pinActive,f
   630  00A5                     l1223:	
   631                           
   632                           ;main.c: 162:                 highPin[1] = 2;
   633  00A5  3002               	movlw	2
   634  00A6  00A0               	movwf	??_main
   635  00A7  0820               	movf	??_main,w
   636  00A8  00B3               	movwf	main@highPin+1
   637                           
   638                           ;main.c: 163:                 lowPin[1] = 0;
   639  00A9  01B7               	clrf	main@lowPin+1
   640  00AA                     l1225:	
   641                           
   642                           ;main.c: 164:                 pinActive[1] = 1;
   643  00AA  01BB               	clrf	main@pinActive+1
   644  00AB  0ABB               	incf	main@pinActive+1,f
   645  00AC                     l1227:	
   646                           
   647                           ;main.c: 165:                 highPin[2] = 1;
   648  00AC  01B4               	clrf	main@highPin+2
   649  00AD  0AB4               	incf	main@highPin+2,f
   650  00AE                     l1229:	
   651                           
   652                           ;main.c: 166:                 lowPin[2] = 2;
   653  00AE  3002               	movlw	2
   654  00AF  00A0               	movwf	??_main
   655  00B0  0820               	movf	??_main,w
   656  00B1  00B8               	movwf	main@lowPin+2
   657  00B2  2886               	goto	l1197
   658  00B3                     l1233:	
   659                           
   660                           ;main.c: 170:                 highPin[0] = 3;
   661  00B3  3003               	movlw	3
   662  00B4  00A0               	movwf	??_main
   663  00B5  0820               	movf	??_main,w
   664  00B6  00B2               	movwf	main@highPin
   665  00B7                     l1235:	
   666                           
   667                           ;main.c: 171:                 lowPin[0] = 0;
   668  00B7  01B6               	clrf	main@lowPin
   669  00B8                     l1237:	
   670                           
   671                           ;main.c: 172:                 pinActive[0] = 1;
   672  00B8  01BA               	clrf	main@pinActive
   673  00B9  0ABA               	incf	main@pinActive,f
   674  00BA                     l1239:	
   675                           
   676                           ;main.c: 173:                 highPin[1] = 1;
   677  00BA  01B3               	clrf	main@highPin+1
   678  00BB  0AB3               	incf	main@highPin+1,f
   679  00BC                     l1241:	
   680                           
   681                           ;main.c: 174:                 lowPin[1] = 0;
   682  00BC  01B7               	clrf	main@lowPin+1
   683  00BD  2867               	goto	l1177
   684  00BE                     l1245:	
   685                           
   686                           ;main.c: 178:                 highPin[0] = 3;
   687  00BE  3003               	movlw	3
   688  00BF  00A0               	movwf	??_main
   689  00C0  0820               	movf	??_main,w
   690  00C1  00B2               	movwf	main@highPin
   691  00C2                     l1247:	
   692                           
   693                           ;main.c: 179:                 lowPin[0] = 0;
   694  00C2  01B6               	clrf	main@lowPin
   695  00C3                     l1249:	
   696                           
   697                           ;main.c: 180:                 pinActive[0] = 1;
   698  00C3  01BA               	clrf	main@pinActive
   699  00C4  0ABA               	incf	main@pinActive,f
   700  00C5                     l1251:	
   701                           
   702                           ;main.c: 181:                 highPin[1] = 1;
   703  00C5  01B3               	clrf	main@highPin+1
   704  00C6  0AB3               	incf	main@highPin+1,f
   705  00C7                     l1253:	
   706                           
   707                           ;main.c: 182:                 lowPin[1] = 0;
   708  00C7  01B7               	clrf	main@lowPin+1
   709  00C8                     l1255:	
   710                           
   711                           ;main.c: 183:                 pinActive[1] = 1;
   712  00C8  01BB               	clrf	main@pinActive+1
   713  00C9  0ABB               	incf	main@pinActive+1,f
   714  00CA                     l1257:	
   715                           
   716                           ;main.c: 184:                 highPin[2] = 0;
   717  00CA  01B4               	clrf	main@highPin+2
   718  00CB                     l1259:	
   719                           
   720                           ;main.c: 185:                 lowPin[2] = 2;
   721  00CB  3002               	movlw	2
   722  00CC  00A0               	movwf	??_main
   723  00CD  0820               	movf	??_main,w
   724  00CE  00B8               	movwf	main@lowPin+2
   725  00CF                     l1261:	
   726                           
   727                           ;main.c: 186:                 pinActive[2] = 1;
   728  00CF  01BC               	clrf	main@pinActive+2
   729  00D0  0ABC               	incf	main@pinActive+2,f
   730  00D1                     l1263:	
   731                           
   732                           ;main.c: 187:                 highPin[3] = 1;
   733  00D1  01B5               	clrf	main@highPin+3
   734  00D2  0AB5               	incf	main@highPin+3,f
   735  00D3                     l1265:	
   736                           
   737                           ;main.c: 188:                 lowPin[3] = 2;
   738  00D3  3002               	movlw	2
   739  00D4  00A0               	movwf	??_main
   740  00D5  0820               	movf	??_main,w
   741  00D6  00B9               	movwf	main@lowPin+3
   742  00D7                     l1267:	
   743                           
   744                           ;main.c: 189:                 pinActive[3] = 1;
   745  00D7  01BD               	clrf	main@pinActive+3
   746  00D8  0ABD               	incf	main@pinActive+3,f
   747                           
   748                           ;main.c: 190:                 break;
   749  00D9  295A               	goto	l1339
   750  00DA                     l1269:	
   751                           
   752                           ;main.c: 192:                 highPin[0] = 3;
   753  00DA  3003               	movlw	3
   754  00DB  00A0               	movwf	??_main
   755  00DC  0820               	movf	??_main,w
   756  00DD  00B2               	movwf	main@highPin
   757  00DE                     l1271:	
   758                           
   759                           ;main.c: 193:                 lowPin[0] = 0;
   760  00DE  01B6               	clrf	main@lowPin
   761  00DF                     l1273:	
   762                           
   763                           ;main.c: 194:                 pinActive[0] = 1;
   764  00DF  01BA               	clrf	main@pinActive
   765  00E0  0ABA               	incf	main@pinActive,f
   766  00E1                     l1275:	
   767                           
   768                           ;main.c: 195:                 highPin[1] = 1;
   769  00E1  01B3               	clrf	main@highPin+1
   770  00E2  0AB3               	incf	main@highPin+1,f
   771  00E3                     l1277:	
   772                           
   773                           ;main.c: 196:                 lowPin[1] = 0;
   774  00E3  01B7               	clrf	main@lowPin+1
   775  00E4                     l1279:	
   776                           
   777                           ;main.c: 197:                 pinActive[1] = 1;
   778  00E4  01BB               	clrf	main@pinActive+1
   779  00E5  0ABB               	incf	main@pinActive+1,f
   780                           
   781                           ;main.c: 198:                 highPin[2] = 2;
   782  00E6  3002               	movlw	2
   783  00E7  00A0               	movwf	??_main
   784  00E8  0820               	movf	??_main,w
   785  00E9  00B4               	movwf	main@highPin+2
   786  00EA                     l1281:	
   787                           
   788                           ;main.c: 199:                 lowPin[2] = 0;
   789  00EA  01B8               	clrf	main@lowPin+2
   790  00EB                     l1283:	
   791                           
   792                           ;main.c: 200:                 pinActive[2] = 1;
   793  00EB  01BC               	clrf	main@pinActive+2
   794  00EC  0ABC               	incf	main@pinActive+2,f
   795  00ED                     l1285:	
   796                           
   797                           ;main.c: 201:                 highPin[3] = 2;
   798  00ED  3002               	movlw	2
   799  00EE  00A0               	movwf	??_main
   800  00EF  0820               	movf	??_main,w
   801  00F0  00B5               	movwf	main@highPin+3
   802  00F1                     l1287:	
   803                           
   804                           ;main.c: 202:                 lowPin[3] = 1;
   805  00F1  01B9               	clrf	main@lowPin+3
   806  00F2  0AB9               	incf	main@lowPin+3,f
   807  00F3  28D7               	goto	l1267
   808  00F4                     l1291:	
   809                           
   810                           ;main.c: 206:                 highPin[0] = 3;
   811  00F4  3003               	movlw	3
   812  00F5  00A0               	movwf	??_main
   813  00F6  0820               	movf	??_main,w
   814  00F7  00B2               	movwf	main@highPin
   815  00F8                     l1293:	
   816                           
   817                           ;main.c: 207:                 lowPin[0] = 0;
   818  00F8  01B6               	clrf	main@lowPin
   819  00F9                     l1295:	
   820                           
   821                           ;main.c: 208:                 pinActive[0] = 1;
   822  00F9  01BA               	clrf	main@pinActive
   823  00FA  0ABA               	incf	main@pinActive,f
   824  00FB                     l1297:	
   825                           
   826                           ;main.c: 209:                 highPin[1] = 1;
   827  00FB  01B3               	clrf	main@highPin+1
   828  00FC  0AB3               	incf	main@highPin+1,f
   829  00FD                     l1299:	
   830                           
   831                           ;main.c: 210:                 lowPin[1] = 0;
   832  00FD  01B7               	clrf	main@lowPin+1
   833  00FE                     l1301:	
   834                           
   835                           ;main.c: 211:                 pinActive[1] = 1;
   836  00FE  01BB               	clrf	main@pinActive+1
   837  00FF  0ABB               	incf	main@pinActive+1,f
   838                           
   839                           ;main.c: 212:                 highPin[2] = 2;
   840  0100  3002               	movlw	2
   841  0101  00A0               	movwf	??_main
   842  0102  0820               	movf	??_main,w
   843  0103  00B4               	movwf	main@highPin+2
   844  0104                     l1303:	
   845                           
   846                           ;main.c: 213:                 lowPin[2] = 0;
   847  0104  01B8               	clrf	main@lowPin+2
   848  0105  28CF               	goto	l1261
   849  0106                     l83:	
   850                           ;main.c: 219:             case HP0Sh1 :
   851                           
   852                           
   853                           ;main.c: 220:                 highPin[0] = 1;
   854  0106  01B2               	clrf	main@highPin
   855  0107  0AB2               	incf	main@highPin,f
   856  0108                     l1313:	
   857                           
   858                           ;main.c: 221:                 lowPin[0] = 3;
   859  0108  3003               	movlw	3
   860  0109  00A0               	movwf	??_main
   861  010A  0820               	movf	??_main,w
   862  010B  00B6               	movwf	main@lowPin
   863  010C                     l1315:	
   864                           
   865                           ;main.c: 222:                 pinActive[0] = 1;
   866  010C  01BA               	clrf	main@pinActive
   867  010D  0ABA               	incf	main@pinActive,f
   868                           
   869                           ;main.c: 223:                 highPin[1] = 3;
   870  010E  3003               	movlw	3
   871  010F  00A0               	movwf	??_main
   872  0110  0820               	movf	??_main,w
   873  0111  00B3               	movwf	main@highPin+1
   874  0112                     l1317:	
   875                           
   876                           ;main.c: 224:                 lowPin[1] = 1;
   877  0112  01B7               	clrf	main@lowPin+1
   878  0113  0AB7               	incf	main@lowPin+1,f
   879  0114                     l1319:	
   880                           
   881                           ;main.c: 225:                 pinActive[1] = 1;
   882  0114  01BB               	clrf	main@pinActive+1
   883  0115  0ABB               	incf	main@pinActive+1,f
   884  0116                     l1321:	
   885                           
   886                           ;main.c: 226:                 highPin[2] = 0;
   887  0116  01B4               	clrf	main@highPin+2
   888  0117                     l1323:	
   889                           
   890                           ;main.c: 227:                 lowPin[2] = 3;
   891  0117  3003               	movlw	3
   892  0118  00A0               	movwf	??_main
   893  0119  0820               	movf	??_main,w
   894  011A  00B8               	movwf	main@lowPin+2
   895  011B  2886               	goto	l1197
   896  011C                     l84:	
   897                           ;main.c: 230:             case Sh1 :
   898                           
   899                           
   900                           ;main.c: 231:                 highPin[0] = 1;
   901  011C  01B2               	clrf	main@highPin
   902  011D  0AB2               	incf	main@highPin,f
   903  011E                     l1327:	
   904                           
   905                           ;main.c: 232:                 lowPin[0] = 3;
   906  011E  3003               	movlw	3
   907  011F  00A0               	movwf	??_main
   908  0120  0820               	movf	??_main,w
   909  0121  00B6               	movwf	main@lowPin
   910  0122                     l1329:	
   911                           
   912                           ;main.c: 233:                 pinActive[0] = 1;
   913  0122  01BA               	clrf	main@pinActive
   914  0123  0ABA               	incf	main@pinActive,f
   915                           
   916                           ;main.c: 234:                 highPin[1] = 3;
   917  0124  3003               	movlw	3
   918  0125  00A0               	movwf	??_main
   919  0126  0820               	movf	??_main,w
   920  0127  00B3               	movwf	main@highPin+1
   921  0128                     l1331:	
   922                           
   923                           ;main.c: 235:                 lowPin[1] = 1;
   924  0128  01B7               	clrf	main@lowPin+1
   925  0129  0AB7               	incf	main@lowPin+1,f
   926  012A  2867               	goto	l1177
   927  012B                     l1337:	
   928  012B  0020               	movlb	0	; select bank0
   929  012C  083F               	movf	_targetState,w	;volatile
   930  012D  00A0               	movwf	??_main
   931  012E  01A1               	clrf	??_main+1
   932                           
   933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 1, Range of values is 0 to 0
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte            4     3 (average)
   939                           ; direct_byte            8     6 (fixed)
   940                           ; jumptable            260     6 (fixed)
   941                           ;	Chosen strategy is simple_byte
   942  012F  0821               	movf	??_main+1,w
   943  0130  3A00               	xorlw	0	; case 0
   944  0131  1903               	skipnz
   945  0132  2934               	goto	l1499
   946  0133  285D               	goto	l1169
   947  0134                     l1499:	
   948                           
   949                           ; Switch size 1, requested type "simple"
   950                           ; Number of cases is 12, Range of values is 0 to 255
   951                           ; switch strategies available:
   952                           ; Name         Instructions Cycles
   953                           ; simple_byte           37    19 (average)
   954                           ; jumptable            260     6 (fixed)
   955                           ;	Chosen strategy is simple_byte
   956  0134  0820               	movf	??_main,w
   957  0135  3A00               	xorlw	0	; case 0
   958  0136  1903               	skipnz
   959  0137  285D               	goto	l1169
   960  0138  3A0F               	xorlw	15	; case 15
   961  0139  1903               	skipnz
   962  013A  285D               	goto	l1169
   963  013B  3A1E               	xorlw	30	; case 17
   964  013C  1903               	skipnz
   965  013D  286A               	goto	l1179
   966  013E  3A22               	xorlw	34	; case 51
   967  013F  1903               	skipnz
   968  0140  2872               	goto	l1185
   969  0141  3A66               	xorlw	102	; case 85
   970  0142  1903               	skipnz
   971  0143  2889               	goto	l1199
   972  0144  3A22               	xorlw	34	; case 119
   973  0145  1903               	skipnz
   974  0146  289E               	goto	l1217
   975  0147  3AFF               	xorlw	255	; case 136
   976  0148  1903               	skipnz
   977  0149  28B3               	goto	l1233
   978  014A  3A11               	xorlw	17	; case 153
   979  014B  1903               	skipnz
   980  014C  28BE               	goto	l1245
   981  014D  3A22               	xorlw	34	; case 187
   982  014E  1903               	skipnz
   983  014F  28DA               	goto	l1269
   984  0150  3A66               	xorlw	102	; case 221
   985  0151  1903               	skipnz
   986  0152  28F4               	goto	l1291
   987  0153  3A33               	xorlw	51	; case 238
   988  0154  1903               	skipnz
   989  0155  2906               	goto	l83
   990  0156  3A11               	xorlw	17	; case 255
   991  0157  1903               	skipnz
   992  0158  291C               	goto	l84
   993  0159  285D               	goto	l1169
   994  015A                     l1339:	
   995                           
   996                           ;main.c: 240:         currentState = targetState;
   997  015A  083F               	movf	_targetState,w	;volatile
   998  015B  00A0               	movwf	??_main
   999  015C  0820               	movf	??_main,w
  1000  015D  00BE               	movwf	_currentState
  1001  015E                     l1341:	
  1002                           
  1003                           ;main.c: 243:         for(int i = 0; i < 50; i++) {
  1004  015E  01A2               	clrf	main@i_204
  1005  015F  01A3               	clrf	main@i_204+1
  1006  0160                     l1347:	
  1007                           
  1008                           ;main.c: 244:             for(int x = 0; x < 4; x++) {
  1009  0160  0020               	movlb	0	; select bank0
  1010  0161  01AC               	clrf	main@x
  1011  0162  01AD               	clrf	main@x+1
  1012  0163                     l1353:	
  1013                           
  1014                           ;main.c: 245:                 for(short j = 0; j < 10; j++) {
  1015  0163  0020               	movlb	0	; select bank0
  1016  0164  01A4               	clrf	main@j
  1017  0165  01A5               	clrf	main@j+1
  1018  0166                     l1359:	
  1019                           
  1020                           ;main.c: 246:                     if(j <= i/5) {
  1021  0166  3005               	movlw	5
  1022  0167  00F2               	movwf	___awdiv@divisor
  1023  0168  3000               	movlw	0
  1024  0169  00F3               	movwf	___awdiv@divisor+1
  1025  016A  0020               	movlb	0	; select bank0
  1026  016B  0823               	movf	main@i_204+1,w
  1027  016C  00F5               	movwf	___awdiv@dividend+1
  1028  016D  0822               	movf	main@i_204,w
  1029  016E  00F4               	movwf	___awdiv@dividend
  1030  016F  3182  22E6  3180   	fcall	___awdiv
  1031  0172  0873               	movf	?___awdiv+1,w
  1032  0173  3A80               	xorlw	128
  1033  0174  0020               	movlb	0	; select bank0
  1034  0175  00A0               	movwf	??_main
  1035  0176  0825               	movf	main@j+1,w
  1036  0177  3A80               	xorlw	128
  1037  0178  0220               	subwf	??_main,w
  1038  0179  1D03               	skipz
  1039  017A  297D               	goto	u605
  1040  017B  0824               	movf	main@j,w
  1041  017C  0272               	subwf	?___awdiv,w
  1042  017D                     u605:	
  1043  017D  1C03               	skipc
  1044  017E  2980               	goto	u601
  1045  017F  2981               	goto	u600
  1046  0180                     u601:	
  1047  0180  29A1               	goto	l1363
  1048  0181                     u600:	
  1049  0181                     l1361:	
  1050                           
  1051                           ;main.c: 247:                         SetLed(highPin[x], lowPin[x], pinActive[x]);
  1052  0181  0020               	movlb	0	; select bank0
  1053  0182  082C               	movf	main@x,w
  1054  0183  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
  1055  0184  0086               	movwf	6
  1056  0185  0187               	clrf	7
  1057  0186  0801               	movf	1,w
  1058  0187  00A0               	movwf	??_main
  1059  0188  0820               	movf	??_main,w
  1060  0189  00F2               	movwf	SetLed@lowPin
  1061  018A  082C               	movf	main@x,w
  1062  018B  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
  1063  018C  0086               	movwf	6
  1064  018D  0187               	clrf	7
  1065  018E  0801               	movf	1,w
  1066  018F  1D03               	btfss	3,2
  1067  0190  2992               	goto	u611
  1068  0191  2994               	goto	u610
  1069  0192                     u611:	
  1070  0192  3001               	movlw	1
  1071  0193  2995               	goto	u620
  1072  0194                     u610:	
  1073  0194  3000               	movlw	0
  1074  0195                     u620:	
  1075  0195  00A1               	movwf	??_main+1
  1076  0196  0821               	movf	??_main+1,w
  1077  0197  00F3               	movwf	SetLed@active
  1078  0198  082C               	movf	main@x,w
  1079  0199  3E32               	addlw	(low (main@highPin| 0))& (0+255)
  1080  019A  0086               	movwf	6
  1081  019B  0187               	clrf	7
  1082  019C  0801               	movf	1,w
  1083  019D  3183  2345  3180   	fcall	_SetLed
  1084                           
  1085                           ;main.c: 248:                     }
  1086  01A0  29A8               	goto	l1365
  1087  01A1                     l1363:	
  1088                           
  1089                           ;main.c: 250:                         SetLed(0,1,0);
  1090  01A1  01F2               	clrf	SetLed@lowPin
  1091  01A2  0AF2               	incf	SetLed@lowPin,f
  1092  01A3  01F3               	clrf	SetLed@active
  1093  01A4  3000               	movlw	0
  1094  01A5  3183  2345  3180   	fcall	_SetLed
  1095  01A8                     l1365:	
  1096                           
  1097                           ;main.c: 252:                 }
  1098  01A8  3001               	movlw	1
  1099  01A9  0020               	movlb	0	; select bank0
  1100  01AA  07A4               	addwf	main@j,f
  1101  01AB  3000               	movlw	0
  1102  01AC  3DA5               	addwfc	main@j+1,f
  1103  01AD                     l1367:	
  1104  01AD  0825               	movf	main@j+1,w
  1105  01AE  3A80               	xorlw	128
  1106  01AF  00A0               	movwf	??_main
  1107  01B0  3080               	movlw	128
  1108  01B1  0220               	subwf	??_main,w
  1109  01B2  1D03               	skipz
  1110  01B3  29B6               	goto	u635
  1111  01B4  300A               	movlw	10
  1112  01B5  0224               	subwf	main@j,w
  1113  01B6                     u635:	
  1114  01B6  1C03               	skipc
  1115  01B7  29B9               	goto	u631
  1116  01B8  29BA               	goto	u630
  1117  01B9                     u631:	
  1118  01B9  2966               	goto	l1359
  1119  01BA                     u630:	
  1120  01BA                     l1369:	
  1121                           
  1122                           ;main.c: 253:             }
  1123  01BA  3001               	movlw	1
  1124  01BB  0020               	movlb	0	; select bank0
  1125  01BC  07AC               	addwf	main@x,f
  1126  01BD  3000               	movlw	0
  1127  01BE  3DAD               	addwfc	main@x+1,f
  1128  01BF  082D               	movf	main@x+1,w
  1129  01C0  3A80               	xorlw	128
  1130  01C1  00A0               	movwf	??_main
  1131  01C2  3080               	movlw	128
  1132  01C3  0220               	subwf	??_main,w
  1133  01C4  1D03               	skipz
  1134  01C5  29C8               	goto	u645
  1135  01C6  3004               	movlw	4
  1136  01C7  022C               	subwf	main@x,w
  1137  01C8                     u645:	
  1138  01C8  1C03               	skipc
  1139  01C9  29CB               	goto	u641
  1140  01CA  29CC               	goto	u640
  1141  01CB                     u641:	
  1142  01CB  2963               	goto	l1353
  1143  01CC                     u640:	
  1144  01CC                     l1371:	
  1145                           
  1146                           ;main.c: 254:         }
  1147  01CC  3001               	movlw	1
  1148  01CD  0020               	movlb	0	; select bank0
  1149  01CE  07A2               	addwf	main@i_204,f
  1150  01CF  3000               	movlw	0
  1151  01D0  3DA3               	addwfc	main@i_204+1,f
  1152  01D1  0823               	movf	main@i_204+1,w
  1153  01D2  3A80               	xorlw	128
  1154  01D3  00A0               	movwf	??_main
  1155  01D4  3080               	movlw	128
  1156  01D5  0220               	subwf	??_main,w
  1157  01D6  1D03               	skipz
  1158  01D7  29DA               	goto	u655
  1159  01D8  3032               	movlw	50
  1160  01D9  0222               	subwf	main@i_204,w
  1161  01DA                     u655:	
  1162  01DA  1C03               	skipc
  1163  01DB  29DD               	goto	u651
  1164  01DC  29DE               	goto	u650
  1165  01DD                     u651:	
  1166  01DD  2960               	goto	l1347
  1167  01DE                     u650:	
  1168  01DE  29E5               	goto	l1375
  1169  01DF                     l94:	
  1170                           ;main.c: 257:             case HP0 :
  1171                           
  1172                           
  1173                           ;main.c: 258:                 LATAbits.LATA5 = 0;
  1174  01DF  0022               	movlb	2	; select bank2
  1175  01E0  128C               	bcf	12,5	;volatile
  1176                           
  1177                           ;main.c: 259:                 break;
  1178  01E1  2A2F               	goto	l1391
  1179  01E2                     l96:	
  1180                           ;main.c: 260:             default:
  1181                           
  1182                           
  1183                           ;main.c: 261:                 LATAbits.LATA5 = 1;
  1184  01E2  0022               	movlb	2	; select bank2
  1185  01E3  168C               	bsf	12,5	;volatile
  1186                           
  1187                           ;main.c: 262:                 break;
  1188  01E4  2A2F               	goto	l1391
  1189  01E5                     l1375:	
  1190  01E5  0020               	movlb	0	; select bank0
  1191  01E6  083F               	movf	_targetState,w	;volatile
  1192  01E7  00A0               	movwf	??_main
  1193  01E8  01A1               	clrf	??_main+1
  1194                           
  1195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1196                           ; Switch size 1, requested type "simple"
  1197                           ; Number of cases is 1, Range of values is 0 to 0
  1198                           ; switch strategies available:
  1199                           ; Name         Instructions Cycles
  1200                           ; simple_byte            4     3 (average)
  1201                           ; direct_byte            8     6 (fixed)
  1202                           ; jumptable            260     6 (fixed)
  1203                           ;	Chosen strategy is simple_byte
  1204  01E9  0821               	movf	??_main+1,w
  1205  01EA  3A00               	xorlw	0	; case 0
  1206  01EB  1903               	skipnz
  1207  01EC  29EE               	goto	l1501
  1208  01ED  29E2               	goto	l96
  1209  01EE                     l1501:	
  1210                           
  1211                           ; Switch size 1, requested type "simple"
  1212                           ; Number of cases is 1, Range of values is 0 to 0
  1213                           ; switch strategies available:
  1214                           ; Name         Instructions Cycles
  1215                           ; simple_byte            4     3 (average)
  1216                           ; direct_byte            8     6 (fixed)
  1217                           ; jumptable            260     6 (fixed)
  1218                           ;	Chosen strategy is simple_byte
  1219  01EE  0820               	movf	??_main,w
  1220  01EF  3A00               	xorlw	0	; case 0
  1221  01F0  1903               	skipnz
  1222  01F1  29DF               	goto	l94
  1223  01F2  29E2               	goto	l96
  1224  01F3                     l1377:	
  1225                           
  1226                           ;main.c: 266:             for(int i = 0; i < 4; i++) {
  1227  01F3  01AE               	clrf	main@i_214
  1228  01F4  01AF               	clrf	main@i_214+1
  1229  01F5                     l1383:	
  1230                           
  1231                           ;main.c: 267:                 SetLed(highPin[i], lowPin[i], pinActive[i]);
  1232  01F5  0020               	movlb	0	; select bank0
  1233  01F6  082E               	movf	main@i_214,w
  1234  01F7  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
  1235  01F8  0086               	movwf	6
  1236  01F9  0187               	clrf	7
  1237  01FA  0801               	movf	1,w
  1238  01FB  00A0               	movwf	??_main
  1239  01FC  0820               	movf	??_main,w
  1240  01FD  00F2               	movwf	SetLed@lowPin
  1241  01FE  082E               	movf	main@i_214,w
  1242  01FF  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
  1243  0200  0086               	movwf	6
  1244  0201  0187               	clrf	7
  1245  0202  0801               	movf	1,w
  1246  0203  1D03               	btfss	3,2
  1247  0204  2A06               	goto	u661
  1248  0205  2A08               	goto	u660
  1249  0206                     u661:	
  1250  0206  3001               	movlw	1
  1251  0207  2A09               	goto	u670
  1252  0208                     u660:	
  1253  0208  3000               	movlw	0
  1254  0209                     u670:	
  1255  0209  00A1               	movwf	??_main+1
  1256  020A  0821               	movf	??_main+1,w
  1257  020B  00F3               	movwf	SetLed@active
  1258  020C  082E               	movf	main@i_214,w
  1259  020D  3E32               	addlw	(low (main@highPin| 0))& (0+255)
  1260  020E  0086               	movwf	6
  1261  020F  0187               	clrf	7
  1262  0210  0801               	movf	1,w
  1263  0211  3183  2345  3180   	fcall	_SetLed
  1264  0214                     l1385:	
  1265                           
  1266                           ;main.c: 268:                 _delay((unsigned long)((1)*(8000000/4000.0)));
  1267  0214  3003               	movlw	3
  1268  0215  0020               	movlb	0	; select bank0
  1269  0216  00A0               	movwf	??_main
  1270  0217  3097               	movlw	151
  1271  0218                     u837:	
  1272  0218  0B89               	decfsz	9,f
  1273  0219  2A18               	goto	u837
  1274  021A  0BA0               	decfsz	??_main,f
  1275  021B  2A18               	goto	u837
  1276  021C  3200               	nop2
  1277  021D                     l1387:	
  1278                           
  1279                           ;main.c: 269:             }
  1280  021D  3001               	movlw	1
  1281  021E  0020               	movlb	0	; select bank0
  1282  021F  07AE               	addwf	main@i_214,f
  1283  0220  3000               	movlw	0
  1284  0221  3DAF               	addwfc	main@i_214+1,f
  1285  0222                     l1389:	
  1286  0222  082F               	movf	main@i_214+1,w
  1287  0223  3A80               	xorlw	128
  1288  0224  00A0               	movwf	??_main
  1289  0225  3080               	movlw	128
  1290  0226  0220               	subwf	??_main,w
  1291  0227  1D03               	skipz
  1292  0228  2A2B               	goto	u685
  1293  0229  3004               	movlw	4
  1294  022A  022E               	subwf	main@i_214,w
  1295  022B                     u685:	
  1296  022B  1C03               	skipc
  1297  022C  2A2E               	goto	u681
  1298  022D  2A2F               	goto	u680
  1299  022E                     u681:	
  1300  022E  29F5               	goto	l1383
  1301  022F                     u680:	
  1302  022F                     l1391:	
  1303                           
  1304                           ;main.c: 265:         while(currentState == targetState) {
  1305  022F  0020               	movlb	0	; select bank0
  1306  0230  083E               	movf	_currentState,w
  1307  0231  063F               	xorwf	_targetState,w	;volatile
  1308  0232  1903               	skipnz
  1309  0233  2A35               	goto	u691
  1310  0234  2A36               	goto	u690
  1311  0235                     u691:	
  1312  0235  29F3               	goto	l1377
  1313  0236                     u690:	
  1314  0236                     l101:	
  1315                           
  1316                           ;main.c: 272:         LATAbits.LATA5 = 0;
  1317  0236  0022               	movlb	2	; select bank2
  1318  0237  128C               	bcf	12,5	;volatile
  1319  0238                     l1393:	
  1320                           
  1321                           ;main.c: 274:         for(int i = 0; i < 50; i++) {
  1322  0238  0020               	movlb	0	; select bank0
  1323  0239  01A6               	clrf	main@i_215
  1324  023A  01A7               	clrf	main@i_215+1
  1325  023B                     l1395:	
  1326  023B  0827               	movf	main@i_215+1,w
  1327  023C  3A80               	xorlw	128
  1328  023D  00A0               	movwf	??_main
  1329  023E  3080               	movlw	128
  1330  023F  0220               	subwf	??_main,w
  1331  0240  1D03               	skipz
  1332  0241  2A44               	goto	u705
  1333  0242  3032               	movlw	50
  1334  0243  0226               	subwf	main@i_215,w
  1335  0244                     u705:	
  1336  0244  1C03               	skipc
  1337  0245  2A47               	goto	u701
  1338  0246  2A48               	goto	u700
  1339  0247                     u701:	
  1340  0247  2A49               	goto	l1399
  1341  0248                     u700:	
  1342  0248  2AD7               	goto	l1425
  1343  0249                     l1399:	
  1344                           
  1345                           ;main.c: 275:             for(int x = 0; x < 4; x++) {
  1346  0249  0020               	movlb	0	; select bank0
  1347  024A  01B0               	clrf	main@x_216
  1348  024B  01B1               	clrf	main@x_216+1
  1349  024C                     l1401:	
  1350  024C  0831               	movf	main@x_216+1,w
  1351  024D  3A80               	xorlw	128
  1352  024E  00A0               	movwf	??_main
  1353  024F  3080               	movlw	128
  1354  0250  0220               	subwf	??_main,w
  1355  0251  1D03               	skipz
  1356  0252  2A55               	goto	u715
  1357  0253  3004               	movlw	4
  1358  0254  0230               	subwf	main@x_216,w
  1359  0255                     u715:	
  1360  0255  1C03               	skipc
  1361  0256  2A58               	goto	u711
  1362  0257  2A59               	goto	u710
  1363  0258                     u711:	
  1364  0258  2A5A               	goto	l1405
  1365  0259                     u710:	
  1366  0259  2AC5               	goto	l1423
  1367  025A                     l1405:	
  1368                           
  1369                           ;main.c: 276:                 for(short j = 0; j < 10; j++) {
  1370  025A  0020               	movlb	0	; select bank0
  1371  025B  01A8               	clrf	main@j_217
  1372  025C  01A9               	clrf	main@j_217+1
  1373  025D                     l1407:	
  1374  025D  0829               	movf	main@j_217+1,w
  1375  025E  3A80               	xorlw	128
  1376  025F  00A0               	movwf	??_main
  1377  0260  3080               	movlw	128
  1378  0261  0220               	subwf	??_main,w
  1379  0262  1D03               	skipz
  1380  0263  2A66               	goto	u725
  1381  0264  300A               	movlw	10
  1382  0265  0228               	subwf	main@j_217,w
  1383  0266                     u725:	
  1384  0266  1C03               	skipc
  1385  0267  2A69               	goto	u721
  1386  0268  2A6A               	goto	u720
  1387  0269                     u721:	
  1388  0269  2A6B               	goto	l1411
  1389  026A                     u720:	
  1390  026A  2AB3               	goto	l1421
  1391  026B                     l1411:	
  1392                           
  1393                           ;main.c: 277:                     if(j <= i/5) {
  1394  026B  3005               	movlw	5
  1395  026C  00F2               	movwf	___awdiv@divisor
  1396  026D  3000               	movlw	0
  1397  026E  00F3               	movwf	___awdiv@divisor+1
  1398  026F  0020               	movlb	0	; select bank0
  1399  0270  0827               	movf	main@i_215+1,w
  1400  0271  00F5               	movwf	___awdiv@dividend+1
  1401  0272  0826               	movf	main@i_215,w
  1402  0273  00F4               	movwf	___awdiv@dividend
  1403  0274  3182  22E6  3180   	fcall	___awdiv
  1404  0277  0873               	movf	?___awdiv+1,w
  1405  0278  3A80               	xorlw	128
  1406  0279  0020               	movlb	0	; select bank0
  1407  027A  00A0               	movwf	??_main
  1408  027B  0829               	movf	main@j_217+1,w
  1409  027C  3A80               	xorlw	128
  1410  027D  0220               	subwf	??_main,w
  1411  027E  1D03               	skipz
  1412  027F  2A82               	goto	u735
  1413  0280  0828               	movf	main@j_217,w
  1414  0281  0272               	subwf	?___awdiv,w
  1415  0282                     u735:	
  1416  0282  1C03               	skipc
  1417  0283  2A85               	goto	u731
  1418  0284  2A86               	goto	u730
  1419  0285                     u731:	
  1420  0285  2A8E               	goto	l1415
  1421  0286                     u730:	
  1422  0286                     l1413:	
  1423                           
  1424                           ;main.c: 278:                         SetLed(0,1,0);
  1425  0286  01F2               	clrf	SetLed@lowPin
  1426  0287  0AF2               	incf	SetLed@lowPin,f
  1427  0288  01F3               	clrf	SetLed@active
  1428  0289  3000               	movlw	0
  1429  028A  3183  2345  3180   	fcall	_SetLed
  1430                           
  1431                           ;main.c: 279:                     }
  1432  028D  2AAD               	goto	l1417
  1433  028E                     l1415:	
  1434                           
  1435                           ;main.c: 281:                         SetLed(highPin[x], lowPin[x], pinActive[x]);
  1436  028E  0020               	movlb	0	; select bank0
  1437  028F  0830               	movf	main@x_216,w
  1438  0290  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
  1439  0291  0086               	movwf	6
  1440  0292  0187               	clrf	7
  1441  0293  0801               	movf	1,w
  1442  0294  00A0               	movwf	??_main
  1443  0295  0820               	movf	??_main,w
  1444  0296  00F2               	movwf	SetLed@lowPin
  1445  0297  0830               	movf	main@x_216,w
  1446  0298  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
  1447  0299  0086               	movwf	6
  1448  029A  0187               	clrf	7
  1449  029B  0801               	movf	1,w
  1450  029C  1D03               	btfss	3,2
  1451  029D  2A9F               	goto	u741
  1452  029E  2AA1               	goto	u740
  1453  029F                     u741:	
  1454  029F  3001               	movlw	1
  1455  02A0  2AA2               	goto	u750
  1456  02A1                     u740:	
  1457  02A1  3000               	movlw	0
  1458  02A2                     u750:	
  1459  02A2  00A1               	movwf	??_main+1
  1460  02A3  0821               	movf	??_main+1,w
  1461  02A4  00F3               	movwf	SetLed@active
  1462  02A5  0830               	movf	main@x_216,w
  1463  02A6  3E32               	addlw	(low (main@highPin| 0))& (0+255)
  1464  02A7  0086               	movwf	6
  1465  02A8  0187               	clrf	7
  1466  02A9  0801               	movf	1,w
  1467  02AA  3183  2345  3180   	fcall	_SetLed
  1468  02AD                     l1417:	
  1469                           
  1470                           ;main.c: 283:                 }
  1471  02AD  3001               	movlw	1
  1472  02AE  0020               	movlb	0	; select bank0
  1473  02AF  07A8               	addwf	main@j_217,f
  1474  02B0  3000               	movlw	0
  1475  02B1  3DA9               	addwfc	main@j_217+1,f
  1476  02B2  2A5D               	goto	l1407
  1477  02B3                     l1421:	
  1478                           
  1479                           ;main.c: 284:             }
  1480  02B3  3001               	movlw	1
  1481  02B4  0020               	movlb	0	; select bank0
  1482  02B5  07B0               	addwf	main@x_216,f
  1483  02B6  3000               	movlw	0
  1484  02B7  3DB1               	addwfc	main@x_216+1,f
  1485  02B8  0831               	movf	main@x_216+1,w
  1486  02B9  3A80               	xorlw	128
  1487  02BA  00A0               	movwf	??_main
  1488  02BB  3080               	movlw	128
  1489  02BC  0220               	subwf	??_main,w
  1490  02BD  1D03               	skipz
  1491  02BE  2AC1               	goto	u765
  1492  02BF  3004               	movlw	4
  1493  02C0  0230               	subwf	main@x_216,w
  1494  02C1                     u765:	
  1495  02C1  1C03               	skipc
  1496  02C2  2AC4               	goto	u761
  1497  02C3  2AC5               	goto	u760
  1498  02C4                     u761:	
  1499  02C4  2A5A               	goto	l1405
  1500  02C5                     u760:	
  1501  02C5                     l1423:	
  1502                           
  1503                           ;main.c: 285:         }
  1504  02C5  3001               	movlw	1
  1505  02C6  0020               	movlb	0	; select bank0
  1506  02C7  07A6               	addwf	main@i_215,f
  1507  02C8  3000               	movlw	0
  1508  02C9  3DA7               	addwfc	main@i_215+1,f
  1509  02CA  0827               	movf	main@i_215+1,w
  1510  02CB  3A80               	xorlw	128
  1511  02CC  00A0               	movwf	??_main
  1512  02CD  3080               	movlw	128
  1513  02CE  0220               	subwf	??_main,w
  1514  02CF  1D03               	skipz
  1515  02D0  2AD3               	goto	u775
  1516  02D1  3032               	movlw	50
  1517  02D2  0226               	subwf	main@i_215,w
  1518  02D3                     u775:	
  1519  02D3  1C03               	skipc
  1520  02D4  2AD6               	goto	u771
  1521  02D5  2AD7               	goto	u770
  1522  02D6                     u771:	
  1523  02D6  2A49               	goto	l1399
  1524  02D7                     u770:	
  1525  02D7                     l1425:	
  1526                           
  1527                           ;main.c: 287:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1528  02D7  3004               	movlw	4
  1529  02D8  0020               	movlb	0	; select bank0
  1530  02D9  00A1               	movwf	??_main+1
  1531  02DA  300C               	movlw	12
  1532  02DB  00A0               	movwf	??_main
  1533  02DC  3033               	movlw	51
  1534  02DD                     u847:	
  1535  02DD  0B89               	decfsz	9,f
  1536  02DE  2ADD               	goto	u847
  1537  02DF  0BA0               	decfsz	??_main,f
  1538  02E0  2ADD               	goto	u847
  1539  02E1  0BA1               	decfsz	??_main+1,f
  1540  02E2  2ADD               	goto	u847
  1541  02E3  3200               	nop2
  1542  02E4  2837               	goto	l1157
  1543  02E5  282D               	ljmp	start
  1544  02E6                     __end_of_main:	
  1545                           
  1546                           	psect	text1
  1547  039A                     __ptext1:	
  1548 ;; *************** function _initialize *****************
  1549 ;; Defined at:
  1550 ;;		line 72 in file "main.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1
  1564 ;;      Params:         0       0       0
  1565 ;;      Locals:         0       0       0
  1566 ;;      Temps:          0       0       0
  1567 ;;      Totals:         0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function _initialize
  1580  039A                     _initialize:	
  1581  039A                     l1075:	
  1582                           ;incstack = 0
  1583                           ; Regs used in _initialize: [wreg+status,2+status,0]
  1584                           
  1585                           
  1586                           ;main.c: 73:     OSCCON = 0b01110000;
  1587  039A  3070               	movlw	112
  1588  039B  0021               	movlb	1	; select bank1
  1589  039C  0099               	movwf	25	;volatile
  1590                           
  1591                           ;main.c: 75:     TRISA = 0b00000111;
  1592  039D  3007               	movlw	7
  1593  039E  008C               	movwf	12	;volatile
  1594                           
  1595                           ;main.c: 76:     TRISC = 0b00111111;
  1596  039F  303F               	movlw	63
  1597  03A0  008E               	movwf	14	;volatile
  1598  03A1                     l1077:	
  1599                           
  1600                           ;main.c: 78:     ANSELC = 0x00;
  1601  03A1  0023               	movlb	3	; select bank3
  1602  03A2  018E               	clrf	14	;volatile
  1603  03A3                     l1079:	
  1604                           
  1605                           ;main.c: 79:     ANSELA = 0x00;
  1606  03A3  018C               	clrf	12	;volatile
  1607                           
  1608                           ;main.c: 81:     WPUA = 0x07;
  1609  03A4  3007               	movlw	7
  1610  03A5  0024               	movlb	4	; select bank4
  1611  03A6  008C               	movwf	12	;volatile
  1612  03A7                     l1081:	
  1613                           
  1614                           ;main.c: 82:     OPTION_REGbits.nWPUEN = 0;
  1615  03A7  0021               	movlb	1	; select bank1
  1616  03A8  1395               	bcf	21,7	;volatile
  1617                           
  1618                           ;main.c: 84:     SSP1STAT = 0b10000000;
  1619  03A9  3080               	movlw	128
  1620  03AA  0024               	movlb	4	; select bank4
  1621  03AB  0094               	movwf	20	;volatile
  1622                           
  1623                           ;main.c: 85:     SSP1CON1 = 0b00110110;
  1624  03AC  3036               	movlw	54
  1625  03AD  0095               	movwf	21	;volatile
  1626                           
  1627                           ;main.c: 86:     SSP1CON2 = 0b00000001;
  1628  03AE  3001               	movlw	1
  1629  03AF  0096               	movwf	22	;volatile
  1630  03B0                     l1083:	
  1631                           
  1632                           ;main.c: 87:     SSP1ADD = 0b10000000 | (0b00001110 & (PORTA << 1));
  1633  03B0  0020               	movlb	0	; select bank0
  1634  03B1  350C               	lslf	12,w	;volatile
  1635  03B2  390E               	andlw	14
  1636  03B3  3880               	iorlw	128
  1637  03B4  0024               	movlb	4	; select bank4
  1638  03B5  0092               	movwf	18	;volatile
  1639  03B6                     l1085:	
  1640                           
  1641                           ;main.c: 89:     GIE = 1;
  1642  03B6  178B               	bsf	11,7	;volatile
  1643  03B7                     l1087:	
  1644                           
  1645                           ;main.c: 90:     PEIE = 1;
  1646  03B7  170B               	bsf	11,6	;volatile
  1647  03B8                     l1089:	
  1648                           
  1649                           ;main.c: 91:     SSP1IF = 0;
  1650  03B8  0020               	movlb	0	; select bank0
  1651  03B9  1191               	bcf	17,3	;volatile
  1652  03BA                     l1091:	
  1653                           
  1654                           ;main.c: 92:     SSP1IE = 1;
  1655  03BA  0021               	movlb	1	; select bank1
  1656  03BB  1591               	bsf	17,3	;volatile
  1657  03BC                     l53:	
  1658  03BC  0008               	return
  1659  03BD                     __end_of_initialize:	
  1660                           
  1661                           	psect	text2
  1662  02E6                     __ptext2:	
  1663 ;; *************** function ___awdiv *****************
  1664 ;; Defined at:
  1665 ;;		line 5 in file "M:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  divisor         2    2[COMMON] int 
  1668 ;;  dividend        2    4[COMMON] int 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  quotient        2    9[COMMON] int 
  1671 ;;  sign            1    8[COMMON] unsigned char 
  1672 ;;  counter         1    7[COMMON] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  2    2[COMMON] int 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1
  1682 ;;      Params:         4       0       0
  1683 ;;      Locals:         4       0       0
  1684 ;;      Temps:          1       0       0
  1685 ;;      Totals:         9       0       0
  1686 ;;Total ram usage:        9 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    1
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function ___awdiv
  1698  02E6                     ___awdiv:	
  1699  02E6                     l1111:	
  1700                           ;incstack = 0
  1701                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1702                           
  1703  02E6  01F8               	clrf	___awdiv@sign
  1704  02E7                     l1113:	
  1705  02E7  1FF3               	btfss	___awdiv@divisor+1,7
  1706  02E8  2AEA               	goto	u491
  1707  02E9  2AEB               	goto	u490
  1708  02EA                     u491:	
  1709  02EA  2AF2               	goto	l1119
  1710  02EB                     u490:	
  1711  02EB                     l1115:	
  1712  02EB  09F2               	comf	___awdiv@divisor,f
  1713  02EC  09F3               	comf	___awdiv@divisor+1,f
  1714  02ED  0AF2               	incf	___awdiv@divisor,f
  1715  02EE  1903               	skipnz
  1716  02EF  0AF3               	incf	___awdiv@divisor+1,f
  1717  02F0                     l1117:	
  1718  02F0  01F8               	clrf	___awdiv@sign
  1719  02F1  0AF8               	incf	___awdiv@sign,f
  1720  02F2                     l1119:	
  1721  02F2  1FF5               	btfss	___awdiv@dividend+1,7
  1722  02F3  2AF5               	goto	u501
  1723  02F4  2AF6               	goto	u500
  1724  02F5                     u501:	
  1725  02F5  2AFF               	goto	l1125
  1726  02F6                     u500:	
  1727  02F6                     l1121:	
  1728  02F6  09F4               	comf	___awdiv@dividend,f
  1729  02F7  09F5               	comf	___awdiv@dividend+1,f
  1730  02F8  0AF4               	incf	___awdiv@dividend,f
  1731  02F9  1903               	skipnz
  1732  02FA  0AF5               	incf	___awdiv@dividend+1,f
  1733  02FB                     l1123:	
  1734  02FB  3001               	movlw	1
  1735  02FC  00F6               	movwf	??___awdiv
  1736  02FD  0876               	movf	??___awdiv,w
  1737  02FE  06F8               	xorwf	___awdiv@sign,f
  1738  02FF                     l1125:	
  1739  02FF  01F9               	clrf	___awdiv@quotient
  1740  0300  01FA               	clrf	___awdiv@quotient+1
  1741  0301                     l1127:	
  1742  0301  0872               	movf	___awdiv@divisor,w
  1743  0302  0473               	iorwf	___awdiv@divisor+1,w
  1744  0303  1903               	btfsc	3,2
  1745  0304  2B06               	goto	u511
  1746  0305  2B07               	goto	u510
  1747  0306                     u511:	
  1748  0306  2B36               	goto	l1147
  1749  0307                     u510:	
  1750  0307                     l1129:	
  1751  0307  01F7               	clrf	___awdiv@counter
  1752  0308  0AF7               	incf	___awdiv@counter,f
  1753  0309  2B13               	goto	l1135
  1754  030A                     l1131:	
  1755  030A  3001               	movlw	1
  1756  030B                     u525:	
  1757  030B  35F2               	lslf	___awdiv@divisor,f
  1758  030C  0DF3               	rlf	___awdiv@divisor+1,f
  1759  030D  0B89               	decfsz	9,f
  1760  030E  2B0B               	goto	u525
  1761  030F                     l1133:	
  1762  030F  3001               	movlw	1
  1763  0310  00F6               	movwf	??___awdiv
  1764  0311  0876               	movf	??___awdiv,w
  1765  0312  07F7               	addwf	___awdiv@counter,f
  1766  0313                     l1135:	
  1767  0313  1FF3               	btfss	___awdiv@divisor+1,7
  1768  0314  2B16               	goto	u531
  1769  0315  2B17               	goto	u530
  1770  0316                     u531:	
  1771  0316  2B0A               	goto	l1131
  1772  0317                     u530:	
  1773  0317                     l1137:	
  1774  0317  3001               	movlw	1
  1775  0318                     u545:	
  1776  0318  35F9               	lslf	___awdiv@quotient,f
  1777  0319  0DFA               	rlf	___awdiv@quotient+1,f
  1778  031A  0B89               	decfsz	9,f
  1779  031B  2B18               	goto	u545
  1780  031C  0873               	movf	___awdiv@divisor+1,w
  1781  031D  0275               	subwf	___awdiv@dividend+1,w
  1782  031E  1D03               	skipz
  1783  031F  2B22               	goto	u555
  1784  0320  0872               	movf	___awdiv@divisor,w
  1785  0321  0274               	subwf	___awdiv@dividend,w
  1786  0322                     u555:	
  1787  0322  1C03               	skipc
  1788  0323  2B25               	goto	u551
  1789  0324  2B26               	goto	u550
  1790  0325                     u551:	
  1791  0325  2B2B               	goto	l1143
  1792  0326                     u550:	
  1793  0326                     l1139:	
  1794  0326  0872               	movf	___awdiv@divisor,w
  1795  0327  02F4               	subwf	___awdiv@dividend,f
  1796  0328  0873               	movf	___awdiv@divisor+1,w
  1797  0329  3BF5               	subwfb	___awdiv@dividend+1,f
  1798  032A                     l1141:	
  1799  032A  1479               	bsf	___awdiv@quotient,0
  1800  032B                     l1143:	
  1801  032B  3001               	movlw	1
  1802  032C                     u565:	
  1803  032C  36F3               	lsrf	___awdiv@divisor+1,f
  1804  032D  0CF2               	rrf	___awdiv@divisor,f
  1805  032E  0B89               	decfsz	9,f
  1806  032F  2B2C               	goto	u565
  1807  0330                     l1145:	
  1808  0330  3001               	movlw	1
  1809  0331  02F7               	subwf	___awdiv@counter,f
  1810  0332  1D03               	btfss	3,2
  1811  0333  2B35               	goto	u571
  1812  0334  2B36               	goto	u570
  1813  0335                     u571:	
  1814  0335  2B17               	goto	l1137
  1815  0336                     u570:	
  1816  0336                     l1147:	
  1817  0336  0878               	movf	___awdiv@sign,w
  1818  0337  1903               	btfsc	3,2
  1819  0338  2B3A               	goto	u581
  1820  0339  2B3B               	goto	u580
  1821  033A                     u581:	
  1822  033A  2B40               	goto	l1151
  1823  033B                     u580:	
  1824  033B                     l1149:	
  1825  033B  09F9               	comf	___awdiv@quotient,f
  1826  033C  09FA               	comf	___awdiv@quotient+1,f
  1827  033D  0AF9               	incf	___awdiv@quotient,f
  1828  033E  1903               	skipnz
  1829  033F  0AFA               	incf	___awdiv@quotient+1,f
  1830  0340                     l1151:	
  1831  0340  087A               	movf	___awdiv@quotient+1,w
  1832  0341  00F3               	movwf	?___awdiv+1
  1833  0342  0879               	movf	___awdiv@quotient,w
  1834  0343  00F2               	movwf	?___awdiv
  1835  0344                     l346:	
  1836  0344  0008               	return
  1837  0345                     __end_of___awdiv:	
  1838                           
  1839                           	psect	text3
  1840  0345                     __ptext3:	
  1841 ;; *************** function _SetLed *****************
  1842 ;; Defined at:
  1843 ;;		line 97 in file "main.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  highPin         1    wreg     unsigned char 
  1846 ;;  lowPin          1    2[COMMON] unsigned char 
  1847 ;;  active          1    3[COMMON] _Bool 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  highPin         1    8[COMMON] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1
  1859 ;;      Params:         2       0       0
  1860 ;;      Locals:         3       0       0
  1861 ;;      Temps:          2       0       0
  1862 ;;      Totals:         7       0       0
  1863 ;;Total ram usage:        7 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _SetLed
  1875  0345                     _SetLed:	
  1876                           
  1877                           ;incstack = 0
  1878                           ; Regs used in _SetLed: [wreg+status,2+status,0]
  1879                           ;SetLed@highPin stored from wreg
  1880  0345  00F8               	movwf	SetLed@highPin
  1881  0346                     l1095:	
  1882                           
  1883                           ;main.c: 98:     TRISC = 0b00111111;
  1884  0346  303F               	movlw	63
  1885  0347  0021               	movlb	1	; select bank1
  1886  0348  008E               	movwf	14	;volatile
  1887  0349                     l1097:	
  1888                           
  1889                           ;main.c: 99:     LATC = active ? 1 << (highPin+2) : 0;
  1890  0349  0873               	movf	SetLed@active,w
  1891  034A  1D03               	btfss	3,2
  1892  034B  2B4D               	goto	u421
  1893  034C  2B4E               	goto	u420
  1894  034D                     u421:	
  1895  034D  2B51               	goto	l1101
  1896  034E                     u420:	
  1897  034E                     l1099:	
  1898  034E  01F6               	clrf	_SetLed$193
  1899  034F  01F7               	clrf	_SetLed$193+1
  1900  0350  2B61               	goto	l1103
  1901  0351                     l1101:	
  1902  0351  3001               	movlw	1
  1903  0352  00F4               	movwf	??_SetLed
  1904  0353  3000               	movlw	0
  1905  0354  00F5               	movwf	??_SetLed+1
  1906  0355  0878               	movf	SetLed@highPin,w
  1907  0356  3E02               	addlw	2
  1908  0357  0A89               	incf	9,f
  1909  0358  2B5B               	goto	u434
  1910  0359                     u435:	
  1911  0359  35F4               	lslf	??_SetLed,f
  1912  035A  0DF5               	rlf	??_SetLed+1,f
  1913  035B                     u434:	
  1914  035B  0B89               	decfsz	9,f
  1915  035C  2B59               	goto	u435
  1916  035D  0874               	movf	??_SetLed,w
  1917  035E  00F6               	movwf	_SetLed$193
  1918  035F  0875               	movf	??_SetLed+1,w
  1919  0360  00F7               	movwf	_SetLed$193+1
  1920  0361                     l1103:	
  1921  0361  0876               	movf	_SetLed$193,w
  1922  0362  0022               	movlb	2	; select bank2
  1923  0363  008E               	movwf	14	;volatile
  1924  0364                     l1105:	
  1925                           
  1926                           ;main.c: 100:     if (highPin > lowPin)
  1927  0364  0878               	movf	SetLed@highPin,w
  1928  0365  0272               	subwf	SetLed@lowPin,w
  1929  0366  1803               	skipnc
  1930  0367  2B69               	goto	u441
  1931  0368  2B6A               	goto	u440
  1932  0369                     u441:	
  1933  0369  2B82               	goto	l1109
  1934  036A                     u440:	
  1935  036A                     l1107:	
  1936                           
  1937                           ;main.c: 101:         TRISC = (unsigned) ~(((1 << (highPin-lowPin)) + 1) << (2 + lowPin)
      +                          );
  1938  036A  3001               	movlw	1
  1939  036B  00F4               	movwf	??_SetLed
  1940  036C  0872               	movf	SetLed@lowPin,w
  1941  036D  0278               	subwf	SetLed@highPin,w
  1942  036E  0A89               	incf	9,f
  1943  036F  2B71               	goto	u454
  1944  0370                     u455:	
  1945  0370  35F4               	lslf	??_SetLed,f
  1946  0371                     u454:	
  1947  0371  0B89               	decfsz	9,f
  1948  0372  2B70               	goto	u455
  1949  0373  0874               	movf	??_SetLed,w
  1950  0374  3E01               	addlw	1
  1951  0375  00F5               	movwf	??_SetLed+1
  1952  0376  0872               	movf	SetLed@lowPin,w
  1953  0377  3E02               	addlw	2
  1954  0378  0A89               	incf	9,f
  1955  0379  2B7B               	goto	u464
  1956  037A                     u465:	
  1957  037A  35F5               	lslf	??_SetLed+1,f
  1958  037B                     u464:	
  1959  037B  0B89               	decfsz	9,f
  1960  037C  2B7A               	goto	u465
  1961  037D  0875               	movf	??_SetLed+1,w
  1962  037E  3AFF               	xorlw	255
  1963  037F  0021               	movlb	1	; select bank1
  1964  0380  008E               	movwf	14	;volatile
  1965  0381  2B99               	goto	l62
  1966  0382                     l1109:	
  1967                           
  1968                           ;main.c: 103:         TRISC = (unsigned) ~(((1 << (lowPin-highPin)) + 1) << (2 + highPin
      +                          ));
  1969  0382  3001               	movlw	1
  1970  0383  00F4               	movwf	??_SetLed
  1971  0384  0878               	movf	SetLed@highPin,w
  1972  0385  0272               	subwf	SetLed@lowPin,w
  1973  0386  0A89               	incf	9,f
  1974  0387  2B89               	goto	u474
  1975  0388                     u475:	
  1976  0388  35F4               	lslf	??_SetLed,f
  1977  0389                     u474:	
  1978  0389  0B89               	decfsz	9,f
  1979  038A  2B88               	goto	u475
  1980  038B  0874               	movf	??_SetLed,w
  1981  038C  3E01               	addlw	1
  1982  038D  00F5               	movwf	??_SetLed+1
  1983  038E  0878               	movf	SetLed@highPin,w
  1984  038F  3E02               	addlw	2
  1985  0390  0A89               	incf	9,f
  1986  0391  2B93               	goto	u484
  1987  0392                     u485:	
  1988  0392  35F5               	lslf	??_SetLed+1,f
  1989  0393                     u484:	
  1990  0393  0B89               	decfsz	9,f
  1991  0394  2B92               	goto	u485
  1992  0395  0875               	movf	??_SetLed+1,w
  1993  0396  3AFF               	xorlw	255
  1994  0397  0021               	movlb	1	; select bank1
  1995  0398  008E               	movwf	14	;volatile
  1996  0399                     l62:	
  1997  0399  0008               	return
  1998  039A                     __end_of_SetLed:	
  1999                           
  2000                           	psect	intentry
  2001  0004                     __pintentry:	
  2002 ;; *************** function _I2C_Slave_Read *****************
  2003 ;; Defined at:
  2004 ;;		line 291 in file "main.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  buf             1    0        unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1
  2018 ;;      Params:         0       0       0
  2019 ;;      Locals:         1       0       0
  2020 ;;      Temps:          1       0       0
  2021 ;;      Totals:         2       0       0
  2022 ;;Total ram usage:        2 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		Interrupt level 1
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031  0004                     _I2C_Slave_Read:	
  2032                           
  2033                           ;incstack = 0
  2034  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2035                           
  2036                           ; Regs used in _I2C_Slave_Read: [wreg+status,2]
  2037  0005  3180               	pagesel	$
  2038  0006                     i1l1435:	
  2039                           
  2040                           ;main.c: 292:     unsigned char buf;;main.c: 294:     if(SSP1IF == 1) {
  2041  0006  0020               	movlb	0	; select bank0
  2042  0007  1D91               	btfss	17,3	;volatile
  2043  0008  280A               	goto	u78_21
  2044  0009  280B               	goto	u78_20
  2045  000A                     u78_21:	
  2046  000A  282B               	goto	i1l125
  2047  000B                     u78_20:	
  2048  000B                     i1l1437:	
  2049                           
  2050                           ;main.c: 295:         SSP1IF = 0;
  2051  000B  1191               	bcf	17,3	;volatile
  2052                           
  2053                           ;main.c: 297:         if(SSP1CON1bits.WCOL || SSP1CON1bits.SSPOV ) {
  2054  000C  0024               	movlb	4	; select bank4
  2055  000D  1B95               	btfsc	21,7	;volatile
  2056  000E  2810               	goto	u79_21
  2057  000F  2811               	goto	u79_20
  2058  0010                     u79_21:	
  2059  0010  2815               	goto	i1l1441
  2060  0011                     u79_20:	
  2061  0011                     i1l1439:	
  2062  0011  1F15               	btfss	21,6	;volatile
  2063  0012  2814               	goto	u80_21
  2064  0013  2815               	goto	u80_20
  2065  0014                     u80_21:	
  2066  0014  2818               	goto	i1l1447
  2067  0015                     u80_20:	
  2068  0015                     i1l1441:	
  2069  0015  0811               	movf	17,w	;volatile
  2070  0016                     i1l1443:	
  2071                           
  2072                           ;main.c: 299:             SSP1CON1bits.WCOL = 0;
  2073  0016  1395               	bcf	21,7	;volatile
  2074  0017                     i1l1445:	
  2075                           
  2076                           ;main.c: 300:             SSP1CON1bits.SSPOV = 0;
  2077  0017  1315               	bcf	21,6	;volatile
  2078  0018                     i1l1447:	
  2079                           
  2080                           ;main.c: 303:         if (SSP1STATbits.R_nW) {
  2081  0018  1D14               	btfss	20,2	;volatile
  2082  0019  281B               	goto	u81_21
  2083  001A  281C               	goto	u81_20
  2084  001B                     u81_21:	
  2085  001B  281E               	goto	i1l121
  2086  001C                     u81_20:	
  2087  001C                     i1l1449:	
  2088                           
  2089                           ;main.c: 304:             SSPBUF = 0x00;
  2090  001C  0191               	clrf	17	;volatile
  2091                           
  2092                           ;main.c: 305:         } else if (SSP1STATbits.D_nA) {
  2093  001D  2829               	goto	i1l1455
  2094  001E                     i1l121:	
  2095  001E  1E94               	btfss	20,5	;volatile
  2096  001F  2821               	goto	u82_21
  2097  0020  2822               	goto	u82_20
  2098  0021                     u82_21:	
  2099  0021  2828               	goto	i1l1453
  2100  0022                     u82_20:	
  2101  0022                     i1l1451:	
  2102                           
  2103                           ;main.c: 306:             targetState = SSPBUF;
  2104  0022  0811               	movf	17,w	;volatile
  2105  0023  00F0               	movwf	??_I2C_Slave_Read
  2106  0024  0870               	movf	??_I2C_Slave_Read,w
  2107  0025  0020               	movlb	0	; select bank0
  2108  0026  00BF               	movwf	_targetState	;volatile
  2109                           
  2110                           ;main.c: 307:         } else {
  2111  0027  2829               	goto	i1l1455
  2112  0028                     i1l1453:	
  2113  0028  0811               	movf	17,w	;volatile
  2114  0029                     i1l1455:	
  2115                           
  2116                           ;main.c: 311:         SSPCON1bits.CKP = 1;
  2117  0029  0024               	movlb	4	; select bank4
  2118  002A  1615               	bsf	21,4	;volatile
  2119  002B                     i1l125:	
  2120  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2121  002C  0009               	retfie
  2122  002D                     __end_of_I2C_Slave_Read:	
  2123  007E                     btemp	set	126	;btemp
  2124  007E                     int$flags	set	126
  2125  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     30      32
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _I2C_Slave_Read in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _I2C_Slave_Read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _I2C_Slave_Read in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    4080
                                              0 BANK0     30    30      0
                             _SetLed
                            ___awdiv
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SetLed                                               7     5      2    1004
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Read                                       2     2      0       2
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetLed
   ___awdiv
   _initialize

 _I2C_Slave_Read (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 12 22:39:42 2020

            __CFG_CP$OFF 0000                       l53 03BC                       l62 0399  
                     l83 0106                       l84 011C                       l94 01DF  
                     l96 01E2             ___awdiv@sign 0078              __CFG_LVP$ON 0000  
                    l101 0236                      l346 0344                      _GIE 005F  
                    u420 034E                      u500 02F6                      u421 034D  
                    u501 02F5                      u510 0307                      u511 0306  
                    u440 036A                      u600 0181                      u441 0369  
                    u601 0180                      u434 035B                      u530 0317  
                    u610 0194                      u435 0359                      u531 0316  
                    u611 0192                      u700 0248                      u620 0195  
                    u525 030B                      u701 0247                      u605 017D  
                    u454 0371                      u550 0326                      u710 0259  
                    u630 01BA                      u455 0370                      u551 0325  
                    u711 0258                      u631 01B9                      u464 037B  
                    u720 026A                      u640 01CC                      u465 037A  
                    u545 0318                      u721 0269                      u705 0244  
                    u641 01CB                      u474 0389                      u570 0336  
                    u490 02EB                      u730 0286                      u650 01DE  
                    u475 0388                      u571 0335                      u555 0322  
                    u491 02EA                      u731 0285                      u715 0255  
                    u651 01DD                      u635 01B6                      u484 0393  
                    u580 033B                      u740 02A1                      u660 0208  
                    u485 0392                      u581 033A                      u565 032C  
                    u741 029F                      u725 0266                      u661 0206  
                    u645 01C8                      u750 02A2                      u670 0209  
                    u590 005C                      u735 0282                      u655 01DA  
                    u591 005B                      u760 02C5                      u680 022F  
                    u761 02C4                      u681 022E                      u770 02D7  
                    u690 0236                      u771 02D6                      u691 0235  
                    u595 0058                      u765 02C1                      u685 022B  
                    u837 0218                      u847 02DD                      u775 02D3  
           __CFG_BORV$LO 0000                      wreg 0009              main@highPin 0032  
                   l1101 0351                     l1103 0361                     l1111 02E6  
                   l1105 0364                     l1121 02F6                     l1113 02E7  
                   l1201 008D                     l1107 036A                     l1131 030A  
                   l1123 02FB                     l1115 02EB                     l1211 0098  
                   l1203 008E                     l1109 0382                     l1141 032A  
                   l1133 030F                     l1125 02FF                     l1117 02F0  
                   l1301 00FE                     l1221 00A3                     l1213 009C  
                   l1205 0090                     l1151 0340                     l1143 032B  
                   l1135 0313                     l1127 0301                     l1119 02F2  
                   l1303 0104                     l1223 00A5                     l1207 0094  
                   l1145 0330                     l1137 0317                     l1129 0307  
                   l1081 03A7                     l1401 024C                     l1321 0116  
                   l1313 0108                     l1241 00BC                     l1233 00B3  
                   l1225 00AA                     l1217 009E                     l1209 0096  
                   l1139 0326                     l1147 0336                     l1091 03BA  
                   l1083 03B0                     l1075 039A                     l1411 026B  
                   l1331 0128                     l1323 0117                     l1315 010C  
                   l1251 00C5                     l1235 00B7                     l1227 00AC  
                   l1219 00A2                     l1171 005E                     l1163 003A  
                   l1155 0034                     l1149 033B                     l1085 03B6  
                   l1077 03A1                     l1413 0286                     l1421 02B3  
                   l1405 025A                     l1501 01EE                     l1341 015E  
                   l1317 0112                     l1261 00CF                     l1253 00C7  
                   l1245 00BE                     l1237 00B8                     l1229 00AE  
                   l1181 006E                     l1173 0060                     l1165 004B  
                   l1157 0037                     l1095 0346                     l1087 03B7  
                   l1079 03A3                     l1415 028E                     l1407 025D  
                   l1423 02C5                     l1327 011E                     l1319 0114  
                   l1271 00DE                     l1263 00D1                     l1255 00C8  
                   l1247 00C2                     l1239 00BA                     l1191 0079  
                   l1183 006F                     l1175 0063                     l1167 004F  
                   l1097 0349                     l1089 03B8                     l1417 02AD  
                   l1425 02D7                     l1361 0181                     l1353 0163  
                   l1329 0122                     l1281 00EA                     l1273 00DF  
                   l1265 00D3                     l1257 00CA                     l1249 00C3  
                   l1193 007E                     l1185 0072                     l1177 0067  
                   l1169 005D                     l1337 012B                     l1099 034E  
                   l1371 01CC                     l1363 01A1                     l1347 0160  
                   l1291 00F4                     l1283 00EB                     l1275 00E1  
                   l1267 00D7                     l1259 00CB                     l1195 0080  
                   l1187 0076                     l1179 006A                     l1339 015A  
                   l1365 01A8                     l1293 00F8                     l1285 00ED  
                   l1277 00E3                     l1269 00DA                     l1197 0086  
                   l1189 0077                     l1383 01F5                     l1391 022F  
                   l1375 01E5                     l1367 01AD                     l1359 0166  
                   l1295 00F9                     l1287 00F1                     l1279 00E4  
                   l1199 0089                     l1393 0238                     l1385 0214  
                   l1377 01F3                     l1369 01BA                     l1297 00FB  
                   l1395 023B                     l1387 021D                     l1299 00FD  
                   l1389 0222                     l1399 0249                     l1499 0134  
                   _LATC 010E                     _PEIE 005E                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _main 0034                     fsr1h 0007  
                   indf1 0001                     fsr1l 0006                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 002D            __CFG_MCLRE$ON 0000  
                  ?_main 0070          __end_of___awdiv 0345            __CFG_WDTE$OFF 0000  
        ___awdiv@divisor 0072                    i1l121 001E                    i1l125 002B  
        ___awdiv@counter 0077                    _PORTA 000C                    u80_20 0015  
                  u80_21 0014                    u81_20 001C                    u81_21 001B  
                  _TRISA 008C                    _TRISC 008E                    u82_20 0022  
                  u82_21 0021                    u78_20 000B                    u78_21 000A  
                  u79_20 0011                    u79_21 0010                    main@i 002A  
                  main@j 0024                    main@x 002C                    status 0003  
                  wtemp0 007E          __initialization 002E             __end_of_main 02E6  
         __CFG_LPBOR$OFF 0000                   ??_main 0020               _SetLed$193 0076  
       ___awdiv@dividend 0074                   _ANSELA 018C                   _ANSELC 018E  
                 i1l1441 0015                   i1l1451 0022                   i1l1443 0016  
                 i1l1435 0006                   i1l1453 0028                   i1l1445 0017  
                 i1l1437 000B                   i1l1455 0029                   i1l1447 0018  
                 i1l1439 0011                   i1l1449 001C                   _OSCCON 0099  
                 _SSP1IE 048B                   _SSP1IF 008B                   _SSPBUF 0211  
          main@pinActive 003A           __CFG_PWRTE$OFF 0000                   _SetLed 0345  
              ??___awdiv 0076           __CFG_STVREN$ON 0000         ___awdiv@quotient 0079  
__end_of__initialization 0031           __pcstackCOMMON 0070  __size_of_I2C_Slave_Read 0029  
         _OPTION_REGbits 0095               __pbssBANK0 003E                  ?_SetLed 0072  
             __pmaintext 0034               __pintentry 0004                  _SSP1ADD 0212  
        __size_of_SetLed 0055                  ___awdiv 02E6               _initialize 039A  
                __ptext1 039A                  __ptext2 02E6                  __ptext3 0345  
   end_of_initialization 0031             SetLed@active 0073             SetLed@lowPin 0072  
         _I2C_Slave_Read 0004         __CFG_FOSC$INTOSC 0000               main@lowPin 0036  
 __end_of_I2C_Slave_Read 002D           __end_of_SetLed 039A              ?_initialize 0070  
    start_initialization 002E          ?_I2C_Slave_Read 0070                 ??_SetLed 0074  
              ___latbits 0000            __pcstackBANK0 0020             _currentState 003E  
    __size_of_initialize 0023                 ?___awdiv 0072                 _LATAbits 010C  
               _SSP1CON1 0215                 _SSP1CON2 0216                 _SSP1STAT 0214  
              main@i_204 0022                main@i_214 002E                main@i_215 0026  
              main@j_217 0028                main@x_216 0030         __size_of___awdiv 005F  
           ??_initialize 0072             _SSP1CON1bits 0215         ??_I2C_Slave_Read 0070  
          __size_of_main 02B2       __end_of_initialize 03BD                 int$flags 007E  
           _SSP1STATbits 0214                 intlevel1 0000              _targetState 003F  
      __CFG_CLKOUTEN$OFF 0000            SetLed@highPin 0078              _SSPCON1bits 0215  
