

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Apr 19 22:29:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F1503 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  008E                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0095                     	;# 
    81  0096                     	;# 
    82  0097                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  010E                     	;# 
    93  0111                     	;# 
    94  0112                     	;# 
    95  0113                     	;# 
    96  0114                     	;# 
    97  0115                     	;# 
    98  0116                     	;# 
    99  0117                     	;# 
   100  0118                     	;# 
   101  0119                     	;# 
   102  011D                     	;# 
   103  018C                     	;# 
   104  018E                     	;# 
   105  0191                     	;# 
   106  0191                     	;# 
   107  0192                     	;# 
   108  0193                     	;# 
   109  0193                     	;# 
   110  0194                     	;# 
   111  0195                     	;# 
   112  0196                     	;# 
   113  0197                     	;# 
   114  020C                     	;# 
   115  0211                     	;# 
   116  0211                     	;# 
   117  0212                     	;# 
   118  0212                     	;# 
   119  0213                     	;# 
   120  0213                     	;# 
   121  0214                     	;# 
   122  0214                     	;# 
   123  0215                     	;# 
   124  0215                     	;# 
   125  0215                     	;# 
   126  0216                     	;# 
   127  0216                     	;# 
   128  0217                     	;# 
   129  0217                     	;# 
   130  0391                     	;# 
   131  0392                     	;# 
   132  0393                     	;# 
   133  0498                     	;# 
   134  0498                     	;# 
   135  0499                     	;# 
   136  049A                     	;# 
   137  049B                     	;# 
   138  049B                     	;# 
   139  049C                     	;# 
   140  049D                     	;# 
   141  049E                     	;# 
   142  049F                     	;# 
   143  0611                     	;# 
   144  0612                     	;# 
   145  0613                     	;# 
   146  0613                     	;# 
   147  0614                     	;# 
   148  0615                     	;# 
   149  0616                     	;# 
   150  0616                     	;# 
   151  0617                     	;# 
   152  0618                     	;# 
   153  0619                     	;# 
   154  0619                     	;# 
   155  061A                     	;# 
   156  061B                     	;# 
   157  061C                     	;# 
   158  061C                     	;# 
   159  0691                     	;# 
   160  0692                     	;# 
   161  0693                     	;# 
   162  0694                     	;# 
   163  0695                     	;# 
   164  0F0F                     	;# 
   165  0F10                     	;# 
   166  0F11                     	;# 
   167  0F12                     	;# 
   168  0F13                     	;# 
   169  0F14                     	;# 
   170  0F15                     	;# 
   171  0F16                     	;# 
   172  0F17                     	;# 
   173  0F18                     	;# 
   174  0F19                     	;# 
   175  0F1A                     	;# 
   176  0F1B                     	;# 
   177  0F1C                     	;# 
   178  0F1D                     	;# 
   179  0F1E                     	;# 
   180  0F1F                     	;# 
   181  0FE3                     	;# 
   182  0FE4                     	;# 
   183  0FE5                     	;# 
   184  0FE6                     	;# 
   185  0FE7                     	;# 
   186  0FE8                     	;# 
   187  0FE9                     	;# 
   188  0FEA                     	;# 
   189  0FEB                     	;# 
   190  0FED                     	;# 
   191  0FEE                     	;# 
   192  0FEF                     	;# 
   193  000C                     _PORTA	set	12
   194  008B                     _SSP1IF	set	139
   195  005E                     _PEIE	set	94
   196  005F                     _GIE	set	95
   197  0095                     _OPTION_REGbits	set	149
   198  008E                     _TRISC	set	142
   199  008C                     _TRISA	set	140
   200  0099                     _OSCCON	set	153
   201  048B                     _SSP1IE	set	1163
   202  010C                     _LATAbits	set	268
   203  010E                     _LATC	set	270
   204  018C                     _ANSELA	set	396
   205  018E                     _ANSELC	set	398
   206  0215                     _SSPCON1bits	set	533
   207  0214                     _SSP1STATbits	set	532
   208  0211                     _SSPBUF	set	529
   209  0215                     _SSP1CON1bits	set	533
   210  0212                     _SSP1ADD	set	530
   211  0216                     _SSP1CON2	set	534
   212  0215                     _SSP1CON1	set	533
   213  0214                     _SSP1STAT	set	532
   214  020C                     _WPUA	set	524
   215                           
   216                           ; #config settings
   217  0000                     
   218                           	psect	cinit
   219  002E                     start_initialization:	
   220  002E                     __initialization:	
   221                           
   222                           ; Clear objects allocated to BANK0
   223  002E  0020               	movlb	0	; select bank0
   224  002F  01BE               	clrf	__pbssBANK0& (0+127)
   225  0030  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   226  0031                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  0031                     __end_of__initialization:	
   230  0031  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   231  0032  0020               	movlb	0
   232  0033  2834               	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssBANK0
   235  003E                     __pbssBANK0:	
   236  003E                     _currentState:	
   237  003E                     	ds	1
   238  003F                     _targetState:	
   239  003F                     	ds	1
   240                           
   241                           	psect	cstackCOMMON
   242  0070                     __pcstackCOMMON:	
   243  0070                     ?_initialize:	
   244  0070                     ?_main:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_I2C_Slave_Read:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_I2C_Slave_Read:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255  0070                     	ds	2
   256  0072                     ??_initialize:	
   257  0072                     ?_SetLed:	
   258                           ; 1 bytes @ 0x2
   259                           
   260  0072                     ?___awdiv:	
   261                           ; 1 bytes @ 0x2
   262                           
   263  0072                     SetLed@lowPin:	
   264                           ; 2 bytes @ 0x2
   265                           
   266  0072                     ___awdiv@divisor:	
   267                           ; 1 bytes @ 0x2
   268                           
   269                           
   270                           ; 2 bytes @ 0x2
   271  0072                     	ds	1
   272  0073                     SetLed@active:	
   273                           
   274                           ; 1 bytes @ 0x3
   275  0073                     	ds	1
   276  0074                     ??_SetLed:	
   277  0074                     ___awdiv@dividend:	
   278                           ; 1 bytes @ 0x4
   279                           
   280                           
   281                           ; 2 bytes @ 0x4
   282  0074                     	ds	2
   283  0076                     ??___awdiv:	
   284  0076                     _SetLed$191:	
   285                           ; 1 bytes @ 0x6
   286                           
   287                           
   288                           ; 2 bytes @ 0x6
   289  0076                     	ds	1
   290  0077                     ___awdiv@counter:	
   291                           
   292                           ; 1 bytes @ 0x7
   293  0077                     	ds	1
   294  0078                     SetLed@highPin:	
   295  0078                     ___awdiv@sign:	
   296                           ; 1 bytes @ 0x8
   297                           
   298                           
   299                           ; 1 bytes @ 0x8
   300  0078                     	ds	1
   301  0079                     ___awdiv@quotient:	
   302                           
   303                           ; 2 bytes @ 0x9
   304  0079                     	ds	2
   305                           
   306                           	psect	cstackBANK0
   307  0020                     __pcstackBANK0:	
   308  0020                     ??_main:	
   309                           
   310                           ; 1 bytes @ 0x0
   311  0020                     	ds	2
   312  0022                     main@i_202:	
   313                           
   314                           ; 2 bytes @ 0x2
   315  0022                     	ds	2
   316  0024                     main@j:	
   317                           
   318                           ; 2 bytes @ 0x4
   319  0024                     	ds	2
   320  0026                     main@i_213:	
   321                           
   322                           ; 2 bytes @ 0x6
   323  0026                     	ds	2
   324  0028                     main@j_215:	
   325                           
   326                           ; 2 bytes @ 0x8
   327  0028                     	ds	2
   328  002A                     main@i:	
   329                           
   330                           ; 2 bytes @ 0xA
   331  002A                     	ds	2
   332  002C                     main@x:	
   333                           
   334                           ; 2 bytes @ 0xC
   335  002C                     	ds	2
   336  002E                     main@i_212:	
   337                           
   338                           ; 2 bytes @ 0xE
   339  002E                     	ds	2
   340  0030                     main@x_214:	
   341                           
   342                           ; 2 bytes @ 0x10
   343  0030                     	ds	2
   344  0032                     main@highPin:	
   345                           
   346                           ; 4 bytes @ 0x12
   347  0032                     	ds	4
   348  0036                     main@lowPin:	
   349                           
   350                           ; 4 bytes @ 0x16
   351  0036                     	ds	4
   352  003A                     main@pinActive:	
   353                           
   354                           ; 4 bytes @ 0x1A
   355  003A                     	ds	4
   356                           
   357                           	psect	maintext
   358  0034                     __pmaintext:	
   359 ;;
   360 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   361 ;;
   362 ;; *************** function _main *****************
   363 ;; Defined at:
   364 ;;		line 104 in file "main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;  j               2    8[BANK0 ] short 
   369 ;;  j               2    4[BANK0 ] short 
   370 ;;  x               2   16[BANK0 ] int 
   371 ;;  x               2   12[BANK0 ] int 
   372 ;;  i               2   14[BANK0 ] int 
   373 ;;  i               2    6[BANK0 ] int 
   374 ;;  i               2    2[BANK0 ] int 
   375 ;;  i               2   10[BANK0 ] int 
   376 ;;  pinActive       4   26[BANK0 ] unsigned char [4]
   377 ;;  lowPin          4   22[BANK0 ] unsigned char [4]
   378 ;;  highPin         4   18[BANK0 ] unsigned char [4]
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B1F/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1
   388 ;;      Params:         0       0       0
   389 ;;      Locals:         0      28       0
   390 ;;      Temps:          0       2       0
   391 ;;      Totals:         0      30       0
   392 ;;Total ram usage:       30 bytes
   393 ;; Hardware stack levels required when called:    2
   394 ;; This function calls:
   395 ;;		_SetLed
   396 ;;		___awdiv
   397 ;;		_initialize
   398 ;; This function is called by:
   399 ;;		Startup code after reset
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _main
   405  0034                     _main:	
   406  0034                     l1144:	
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   409                           
   410                           
   411                           ;main.c: 106:     initialize();
   412  0034  3183  2385  3180   	fcall	_initialize
   413  0037                     l1146:	
   414                           
   415                           ;main.c: 112:         for(int i = 0; i < 4; i++) {
   416  0037  0020               	movlb	0	; select bank0
   417  0038  01AA               	clrf	main@i
   418  0039  01AB               	clrf	main@i+1
   419  003A                     l1152:	
   420                           
   421                           ;main.c: 113:             highPin[i] = 1;
   422  003A  0020               	movlb	0	; select bank0
   423  003B  082A               	movf	main@i,w
   424  003C  3E32               	addlw	(low (main@highPin| 0))& (0+255)
   425  003D  0086               	movwf	6
   426  003E  0187               	clrf	7
   427  003F  0181               	clrf	1
   428  0040  0A81               	incf	1,f
   429                           
   430                           ;main.c: 114:             lowPin[i] = 0;
   431  0041  082A               	movf	main@i,w
   432  0042  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
   433  0043  0086               	movwf	6
   434  0044  0187               	clrf	7
   435  0045  0181               	clrf	1
   436                           
   437                           ;main.c: 115:             pinActive[i] = 0;
   438  0046  082A               	movf	main@i,w
   439  0047  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
   440  0048  0086               	movwf	6
   441  0049  0187               	clrf	7
   442  004A  0181               	clrf	1
   443  004B                     l1154:	
   444                           
   445                           ;main.c: 116:         }
   446  004B  3001               	movlw	1
   447  004C  07AA               	addwf	main@i,f
   448  004D  3000               	movlw	0
   449  004E  3DAB               	addwfc	main@i+1,f
   450  004F                     l1156:	
   451  004F  082B               	movf	main@i+1,w
   452  0050  3A80               	xorlw	128
   453  0051  00A0               	movwf	??_main
   454  0052  3080               	movlw	128
   455  0053  0220               	subwf	??_main,w
   456  0054  1D03               	skipz
   457  0055  2858               	goto	u595
   458  0056  3004               	movlw	4
   459  0057  022A               	subwf	main@i,w
   460  0058                     u595:	
   461  0058  1C03               	skipc
   462  0059  285B               	goto	u591
   463  005A  285C               	goto	u590
   464  005B                     u591:	
   465  005B  283A               	goto	l1152
   466  005C                     u590:	
   467  005C  291C               	goto	l1318
   468  005D                     l1158:	
   469                           
   470                           ;main.c: 120:                 highPin[0] = 0;
   471  005D  01B2               	clrf	main@highPin
   472  005E                     l1160:	
   473                           
   474                           ;main.c: 121:                 lowPin[0] = 1;
   475  005E  01B6               	clrf	main@lowPin
   476  005F  0AB6               	incf	main@lowPin,f
   477  0060                     l1162:	
   478                           
   479                           ;main.c: 122:                 pinActive[0] = 1;
   480  0060  01BA               	clrf	main@pinActive
   481  0061  0ABA               	incf	main@pinActive,f
   482                           
   483                           ;main.c: 123:                 highPin[1] = 0;
   484  0062  01B3               	clrf	main@highPin+1
   485  0063                     l1164:	
   486                           
   487                           ;main.c: 124:                 lowPin[1] = 3;
   488  0063  3003               	movlw	3
   489  0064  00A0               	movwf	??_main
   490  0065  0820               	movf	??_main,w
   491  0066  00B7               	movwf	main@lowPin+1
   492  0067                     l1166:	
   493                           
   494                           ;main.c: 125:                 pinActive[1] = 1;
   495  0067  01BB               	clrf	main@pinActive+1
   496  0068  0ABB               	incf	main@pinActive+1,f
   497                           
   498                           ;main.c: 126:                 break;
   499  0069  2945               	goto	l1320
   500  006A                     l1168:	
   501                           
   502                           ;main.c: 128:                 highPin[0] = 3;
   503  006A  3003               	movlw	3
   504  006B  00A0               	movwf	??_main
   505  006C  0820               	movf	??_main,w
   506  006D  00B2               	movwf	main@highPin
   507  006E                     l1170:	
   508                           
   509                           ;main.c: 129:                 lowPin[0] = 0;
   510  006E  01B6               	clrf	main@lowPin
   511  006F                     l1172:	
   512                           
   513                           ;main.c: 130:                 pinActive[0] = 1;
   514  006F  01BA               	clrf	main@pinActive
   515  0070  0ABA               	incf	main@pinActive,f
   516                           
   517                           ;main.c: 131:                 break;
   518  0071  2945               	goto	l1320
   519  0072                     l1174:	
   520                           
   521                           ;main.c: 133:                 highPin[0] = 3;
   522  0072  3003               	movlw	3
   523  0073  00A0               	movwf	??_main
   524  0074  0820               	movf	??_main,w
   525  0075  00B2               	movwf	main@highPin
   526  0076                     l1176:	
   527                           
   528                           ;main.c: 134:                 lowPin[0] = 0;
   529  0076  01B6               	clrf	main@lowPin
   530  0077                     l1178:	
   531                           
   532                           ;main.c: 135:                 pinActive[0] = 1;
   533  0077  01BA               	clrf	main@pinActive
   534  0078  0ABA               	incf	main@pinActive,f
   535  0079                     l1180:	
   536                           
   537                           ;main.c: 136:                 highPin[1] = 0;
   538  0079  01B3               	clrf	main@highPin+1
   539                           
   540                           ;main.c: 137:                 lowPin[1] = 2;
   541  007A  3002               	movlw	2
   542  007B  00A0               	movwf	??_main
   543  007C  0820               	movf	??_main,w
   544  007D  00B7               	movwf	main@lowPin+1
   545  007E                     l1182:	
   546                           
   547                           ;main.c: 138:                 pinActive[1] = 1;
   548  007E  01BB               	clrf	main@pinActive+1
   549  007F  0ABB               	incf	main@pinActive+1,f
   550  0080                     l1184:	
   551                           
   552                           ;main.c: 139:                 highPin[2] = 1;
   553  0080  01B4               	clrf	main@highPin+2
   554  0081  0AB4               	incf	main@highPin+2,f
   555                           
   556                           ;main.c: 140:                 lowPin[2] = 2;
   557  0082  3002               	movlw	2
   558  0083  00A0               	movwf	??_main
   559  0084  0820               	movf	??_main,w
   560  0085  00B8               	movwf	main@lowPin+2
   561  0086                     l1186:	
   562                           
   563                           ;main.c: 141:                 pinActive[2] = 1;
   564  0086  01BC               	clrf	main@pinActive+2
   565  0087  0ABC               	incf	main@pinActive+2,f
   566                           
   567                           ;main.c: 142:                 break;
   568  0088  2945               	goto	l1320
   569  0089                     l1188:	
   570                           
   571                           ;main.c: 144:                 highPin[0] = 3;
   572  0089  3003               	movlw	3
   573  008A  00A0               	movwf	??_main
   574  008B  0820               	movf	??_main,w
   575  008C  00B2               	movwf	main@highPin
   576  008D                     l1190:	
   577                           
   578                           ;main.c: 145:                 lowPin[0] = 0;
   579  008D  01B6               	clrf	main@lowPin
   580  008E                     l1192:	
   581                           
   582                           ;main.c: 146:                 pinActive[0] = 1;
   583  008E  01BA               	clrf	main@pinActive
   584  008F  0ABA               	incf	main@pinActive,f
   585  0090                     l1194:	
   586                           
   587                           ;main.c: 147:                 highPin[1] = 2;
   588  0090  3002               	movlw	2
   589  0091  00A0               	movwf	??_main
   590  0092  0820               	movf	??_main,w
   591  0093  00B3               	movwf	main@highPin+1
   592  0094                     l1196:	
   593                           
   594                           ;main.c: 148:                 lowPin[1] = 1;
   595  0094  01B7               	clrf	main@lowPin+1
   596  0095  0AB7               	incf	main@lowPin+1,f
   597  0096                     l1198:	
   598                           
   599                           ;main.c: 149:                 pinActive[1] = 1;
   600  0096  01BB               	clrf	main@pinActive+1
   601  0097  0ABB               	incf	main@pinActive+1,f
   602  0098                     l1200:	
   603                           
   604                           ;main.c: 150:                 highPin[2] = 2;
   605  0098  3002               	movlw	2
   606  0099  00A0               	movwf	??_main
   607  009A  0820               	movf	??_main,w
   608  009B  00B4               	movwf	main@highPin+2
   609  009C                     l1202:	
   610                           
   611                           ;main.c: 151:                 lowPin[2] = 0;
   612  009C  01B8               	clrf	main@lowPin+2
   613  009D  2886               	goto	l1186
   614  009E                     l1206:	
   615                           
   616                           ;main.c: 155:                 highPin[0] = 3;
   617  009E  3003               	movlw	3
   618  009F  00A0               	movwf	??_main
   619  00A0  0820               	movf	??_main,w
   620  00A1  00B2               	movwf	main@highPin
   621  00A2                     l1208:	
   622                           
   623                           ;main.c: 156:                 lowPin[0] = 0;
   624  00A2  01B6               	clrf	main@lowPin
   625  00A3                     l1210:	
   626                           
   627                           ;main.c: 157:                 pinActive[0] = 1;
   628  00A3  01BA               	clrf	main@pinActive
   629  00A4  0ABA               	incf	main@pinActive,f
   630  00A5                     l1212:	
   631                           
   632                           ;main.c: 158:                 highPin[1] = 2;
   633  00A5  3002               	movlw	2
   634  00A6  00A0               	movwf	??_main
   635  00A7  0820               	movf	??_main,w
   636  00A8  00B3               	movwf	main@highPin+1
   637                           
   638                           ;main.c: 159:                 lowPin[1] = 0;
   639  00A9  01B7               	clrf	main@lowPin+1
   640  00AA                     l1214:	
   641                           
   642                           ;main.c: 160:                 pinActive[1] = 1;
   643  00AA  01BB               	clrf	main@pinActive+1
   644  00AB  0ABB               	incf	main@pinActive+1,f
   645  00AC                     l1216:	
   646                           
   647                           ;main.c: 161:                 highPin[2] = 1;
   648  00AC  01B4               	clrf	main@highPin+2
   649  00AD  0AB4               	incf	main@highPin+2,f
   650  00AE                     l1218:	
   651                           
   652                           ;main.c: 162:                 lowPin[2] = 2;
   653  00AE  3002               	movlw	2
   654  00AF  00A0               	movwf	??_main
   655  00B0  0820               	movf	??_main,w
   656  00B1  00B8               	movwf	main@lowPin+2
   657  00B2  2886               	goto	l1186
   658  00B3                     l1222:	
   659                           
   660                           ;main.c: 166:                 highPin[0] = 3;
   661  00B3  3003               	movlw	3
   662  00B4  00A0               	movwf	??_main
   663  00B5  0820               	movf	??_main,w
   664  00B6  00B2               	movwf	main@highPin
   665  00B7                     l1224:	
   666                           
   667                           ;main.c: 167:                 lowPin[0] = 0;
   668  00B7  01B6               	clrf	main@lowPin
   669  00B8                     l1226:	
   670                           
   671                           ;main.c: 168:                 pinActive[0] = 1;
   672  00B8  01BA               	clrf	main@pinActive
   673  00B9  0ABA               	incf	main@pinActive,f
   674  00BA                     l1228:	
   675                           
   676                           ;main.c: 169:                 highPin[1] = 1;
   677  00BA  01B3               	clrf	main@highPin+1
   678  00BB  0AB3               	incf	main@highPin+1,f
   679  00BC                     l1230:	
   680                           
   681                           ;main.c: 170:                 lowPin[1] = 0;
   682  00BC  01B7               	clrf	main@lowPin+1
   683  00BD  2867               	goto	l1166
   684  00BE                     l1234:	
   685                           
   686                           ;main.c: 174:                 highPin[0] = 3;
   687  00BE  3003               	movlw	3
   688  00BF  00A0               	movwf	??_main
   689  00C0  0820               	movf	??_main,w
   690  00C1  00B2               	movwf	main@highPin
   691  00C2                     l1236:	
   692                           
   693                           ;main.c: 175:                 lowPin[0] = 0;
   694  00C2  01B6               	clrf	main@lowPin
   695  00C3                     l1238:	
   696                           
   697                           ;main.c: 176:                 pinActive[0] = 1;
   698  00C3  01BA               	clrf	main@pinActive
   699  00C4  0ABA               	incf	main@pinActive,f
   700  00C5                     l1240:	
   701                           
   702                           ;main.c: 177:                 highPin[1] = 1;
   703  00C5  01B3               	clrf	main@highPin+1
   704  00C6  0AB3               	incf	main@highPin+1,f
   705  00C7                     l1242:	
   706                           
   707                           ;main.c: 178:                 lowPin[1] = 0;
   708  00C7  01B7               	clrf	main@lowPin+1
   709  00C8                     l1244:	
   710                           
   711                           ;main.c: 179:                 pinActive[1] = 1;
   712  00C8  01BB               	clrf	main@pinActive+1
   713  00C9  0ABB               	incf	main@pinActive+1,f
   714  00CA                     l1246:	
   715                           
   716                           ;main.c: 180:                 highPin[2] = 0;
   717  00CA  01B4               	clrf	main@highPin+2
   718  00CB                     l1248:	
   719                           
   720                           ;main.c: 181:                 lowPin[2] = 2;
   721  00CB  3002               	movlw	2
   722  00CC  00A0               	movwf	??_main
   723  00CD  0820               	movf	??_main,w
   724  00CE  00B8               	movwf	main@lowPin+2
   725  00CF                     l1250:	
   726                           
   727                           ;main.c: 182:                 pinActive[2] = 1;
   728  00CF  01BC               	clrf	main@pinActive+2
   729  00D0  0ABC               	incf	main@pinActive+2,f
   730  00D1                     l1252:	
   731                           
   732                           ;main.c: 183:                 highPin[3] = 1;
   733  00D1  01B5               	clrf	main@highPin+3
   734  00D2  0AB5               	incf	main@highPin+3,f
   735  00D3                     l1254:	
   736                           
   737                           ;main.c: 184:                 lowPin[3] = 2;
   738  00D3  3002               	movlw	2
   739  00D4  00A0               	movwf	??_main
   740  00D5  0820               	movf	??_main,w
   741  00D6  00B9               	movwf	main@lowPin+3
   742  00D7                     l1256:	
   743                           
   744                           ;main.c: 185:                 pinActive[3] = 1;
   745  00D7  01BD               	clrf	main@pinActive+3
   746  00D8  0ABD               	incf	main@pinActive+3,f
   747                           
   748                           ;main.c: 186:                 break;
   749  00D9  2945               	goto	l1320
   750  00DA                     l1258:	
   751                           
   752                           ;main.c: 188:                 highPin[0] = 3;
   753  00DA  3003               	movlw	3
   754  00DB  00A0               	movwf	??_main
   755  00DC  0820               	movf	??_main,w
   756  00DD  00B2               	movwf	main@highPin
   757  00DE                     l1260:	
   758                           
   759                           ;main.c: 189:                 lowPin[0] = 0;
   760  00DE  01B6               	clrf	main@lowPin
   761  00DF                     l1262:	
   762                           
   763                           ;main.c: 190:                 pinActive[0] = 1;
   764  00DF  01BA               	clrf	main@pinActive
   765  00E0  0ABA               	incf	main@pinActive,f
   766  00E1                     l1264:	
   767                           
   768                           ;main.c: 191:                 highPin[1] = 1;
   769  00E1  01B3               	clrf	main@highPin+1
   770  00E2  0AB3               	incf	main@highPin+1,f
   771  00E3                     l1266:	
   772                           
   773                           ;main.c: 192:                 lowPin[1] = 0;
   774  00E3  01B7               	clrf	main@lowPin+1
   775  00E4                     l1268:	
   776                           
   777                           ;main.c: 193:                 pinActive[1] = 1;
   778  00E4  01BB               	clrf	main@pinActive+1
   779  00E5  0ABB               	incf	main@pinActive+1,f
   780                           
   781                           ;main.c: 194:                 highPin[2] = 2;
   782  00E6  3002               	movlw	2
   783  00E7  00A0               	movwf	??_main
   784  00E8  0820               	movf	??_main,w
   785  00E9  00B4               	movwf	main@highPin+2
   786  00EA                     l1270:	
   787                           
   788                           ;main.c: 195:                 lowPin[2] = 0;
   789  00EA  01B8               	clrf	main@lowPin+2
   790  00EB                     l1272:	
   791                           
   792                           ;main.c: 196:                 pinActive[2] = 1;
   793  00EB  01BC               	clrf	main@pinActive+2
   794  00EC  0ABC               	incf	main@pinActive+2,f
   795  00ED                     l1274:	
   796                           
   797                           ;main.c: 197:                 highPin[3] = 2;
   798  00ED  3002               	movlw	2
   799  00EE  00A0               	movwf	??_main
   800  00EF  0820               	movf	??_main,w
   801  00F0  00B5               	movwf	main@highPin+3
   802  00F1                     l1276:	
   803                           
   804                           ;main.c: 198:                 lowPin[3] = 1;
   805  00F1  01B9               	clrf	main@lowPin+3
   806  00F2  0AB9               	incf	main@lowPin+3,f
   807  00F3  28D7               	goto	l1256
   808  00F4                     l1280:	
   809                           
   810                           ;main.c: 202:                 highPin[0] = 3;
   811  00F4  3003               	movlw	3
   812  00F5  00A0               	movwf	??_main
   813  00F6  0820               	movf	??_main,w
   814  00F7  00B2               	movwf	main@highPin
   815  00F8                     l1282:	
   816                           
   817                           ;main.c: 203:                 lowPin[0] = 0;
   818  00F8  01B6               	clrf	main@lowPin
   819  00F9                     l1284:	
   820                           
   821                           ;main.c: 204:                 pinActive[0] = 1;
   822  00F9  01BA               	clrf	main@pinActive
   823  00FA  0ABA               	incf	main@pinActive,f
   824  00FB                     l1286:	
   825                           
   826                           ;main.c: 205:                 highPin[1] = 1;
   827  00FB  01B3               	clrf	main@highPin+1
   828  00FC  0AB3               	incf	main@highPin+1,f
   829  00FD                     l1288:	
   830                           
   831                           ;main.c: 206:                 lowPin[1] = 0;
   832  00FD  01B7               	clrf	main@lowPin+1
   833  00FE                     l1290:	
   834                           
   835                           ;main.c: 207:                 pinActive[1] = 1;
   836  00FE  01BB               	clrf	main@pinActive+1
   837  00FF  0ABB               	incf	main@pinActive+1,f
   838                           
   839                           ;main.c: 208:                 highPin[2] = 2;
   840  0100  3002               	movlw	2
   841  0101  00A0               	movwf	??_main
   842  0102  0820               	movf	??_main,w
   843  0103  00B4               	movwf	main@highPin+2
   844  0104                     l1292:	
   845                           
   846                           ;main.c: 209:                 lowPin[2] = 0;
   847  0104  01B8               	clrf	main@lowPin+2
   848  0105  28CF               	goto	l1250
   849  0106                     l81:	
   850                           ;main.c: 215:             case Sh1 :
   851                           
   852                           
   853                           ;main.c: 216:                 highPin[0] = 1;
   854  0106  01B2               	clrf	main@highPin
   855  0107  0AB2               	incf	main@highPin,f
   856  0108                     l1302:	
   857                           
   858                           ;main.c: 217:                 lowPin[0] = 3;
   859  0108  3003               	movlw	3
   860  0109  00A0               	movwf	??_main
   861  010A  0820               	movf	??_main,w
   862  010B  00B6               	movwf	main@lowPin
   863  010C                     l1304:	
   864                           
   865                           ;main.c: 218:                 pinActive[0] = 1;
   866  010C  01BA               	clrf	main@pinActive
   867  010D  0ABA               	incf	main@pinActive,f
   868                           
   869                           ;main.c: 219:                 highPin[1] = 3;
   870  010E  3003               	movlw	3
   871  010F  00A0               	movwf	??_main
   872  0110  0820               	movf	??_main,w
   873  0111  00B3               	movwf	main@highPin+1
   874  0112                     l1306:	
   875                           
   876                           ;main.c: 220:                 lowPin[1] = 1;
   877  0112  01B7               	clrf	main@lowPin+1
   878  0113  0AB7               	incf	main@lowPin+1,f
   879  0114                     l1308:	
   880                           
   881                           ;main.c: 221:                 pinActive[1] = 1;
   882  0114  01BB               	clrf	main@pinActive+1
   883  0115  0ABB               	incf	main@pinActive+1,f
   884  0116                     l1310:	
   885                           
   886                           ;main.c: 222:                 highPin[2] = 0;
   887  0116  01B4               	clrf	main@highPin+2
   888  0117                     l1312:	
   889                           
   890                           ;main.c: 223:                 lowPin[2] = 3;
   891  0117  3003               	movlw	3
   892  0118  00A0               	movwf	??_main
   893  0119  0820               	movf	??_main,w
   894  011A  00B8               	movwf	main@lowPin+2
   895  011B  2886               	goto	l1186
   896  011C                     l1318:	
   897  011C  0020               	movlb	0	; select bank0
   898  011D  083F               	movf	_targetState,w	;volatile
   899  011E  00A0               	movwf	??_main
   900  011F  01A1               	clrf	??_main+1
   901                           
   902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   903                           ; Switch size 1, requested type "simple"
   904                           ; Number of cases is 1, Range of values is 0 to 0
   905                           ; switch strategies available:
   906                           ; Name         Instructions Cycles
   907                           ; simple_byte            4     3 (average)
   908                           ; direct_byte            8     6 (fixed)
   909                           ; jumptable            260     6 (fixed)
   910                           ;	Chosen strategy is simple_byte
   911  0120  0821               	movf	??_main+1,w
   912  0121  3A00               	xorlw	0	; case 0
   913  0122  1903               	skipnz
   914  0123  2925               	goto	l1480
   915  0124  2945               	goto	l1320
   916  0125                     l1480:	
   917                           
   918                           ; Switch size 1, requested type "simple"
   919                           ; Number of cases is 10, Range of values is 0 to 255
   920                           ; switch strategies available:
   921                           ; Name         Instructions Cycles
   922                           ; simple_byte           31    16 (average)
   923                           ; jumptable            260     6 (fixed)
   924                           ;	Chosen strategy is simple_byte
   925  0125  0820               	movf	??_main,w
   926  0126  3A00               	xorlw	0	; case 0
   927  0127  1903               	skipnz
   928  0128  285D               	goto	l1158
   929  0129  3A11               	xorlw	17	; case 17
   930  012A  1903               	skipnz
   931  012B  286A               	goto	l1168
   932  012C  3A22               	xorlw	34	; case 51
   933  012D  1903               	skipnz
   934  012E  2872               	goto	l1174
   935  012F  3A66               	xorlw	102	; case 85
   936  0130  1903               	skipnz
   937  0131  2889               	goto	l1188
   938  0132  3A22               	xorlw	34	; case 119
   939  0133  1903               	skipnz
   940  0134  289E               	goto	l1206
   941  0135  3AFF               	xorlw	255	; case 136
   942  0136  1903               	skipnz
   943  0137  28B3               	goto	l1222
   944  0138  3A11               	xorlw	17	; case 153
   945  0139  1903               	skipnz
   946  013A  28BE               	goto	l1234
   947  013B  3A22               	xorlw	34	; case 187
   948  013C  1903               	skipnz
   949  013D  28DA               	goto	l1258
   950  013E  3A66               	xorlw	102	; case 221
   951  013F  1903               	skipnz
   952  0140  28F4               	goto	l1280
   953  0141  3A22               	xorlw	34	; case 255
   954  0142  1903               	skipnz
   955  0143  2906               	goto	l81
   956  0144  2945               	goto	l1320
   957  0145                     l1320:	
   958                           
   959                           ;main.c: 228:         currentState = targetState;
   960  0145  083F               	movf	_targetState,w	;volatile
   961  0146  00A0               	movwf	??_main
   962  0147  0820               	movf	??_main,w
   963  0148  00BE               	movwf	_currentState
   964  0149                     l1322:	
   965                           
   966                           ;main.c: 231:         for(int i = 0; i < 50; i++) {
   967  0149  01A2               	clrf	main@i_202
   968  014A  01A3               	clrf	main@i_202+1
   969  014B                     l1328:	
   970                           
   971                           ;main.c: 232:             for(int x = 0; x < 4; x++) {
   972  014B  0020               	movlb	0	; select bank0
   973  014C  01AC               	clrf	main@x
   974  014D  01AD               	clrf	main@x+1
   975  014E                     l1334:	
   976                           
   977                           ;main.c: 233:                 for(short j = 0; j < 10; j++) {
   978  014E  0020               	movlb	0	; select bank0
   979  014F  01A4               	clrf	main@j
   980  0150  01A5               	clrf	main@j+1
   981  0151                     l1340:	
   982                           
   983                           ;main.c: 234:                     if(j <= i/5) {
   984  0151  3005               	movlw	5
   985  0152  00F2               	movwf	___awdiv@divisor
   986  0153  3000               	movlw	0
   987  0154  00F3               	movwf	___awdiv@divisor+1
   988  0155  0020               	movlb	0	; select bank0
   989  0156  0823               	movf	main@i_202+1,w
   990  0157  00F5               	movwf	___awdiv@dividend+1
   991  0158  0822               	movf	main@i_202,w
   992  0159  00F4               	movwf	___awdiv@dividend
   993  015A  3182  22D1  3180   	fcall	___awdiv
   994  015D  0873               	movf	?___awdiv+1,w
   995  015E  3A80               	xorlw	128
   996  015F  0020               	movlb	0	; select bank0
   997  0160  00A0               	movwf	??_main
   998  0161  0825               	movf	main@j+1,w
   999  0162  3A80               	xorlw	128
  1000  0163  0220               	subwf	??_main,w
  1001  0164  1D03               	skipz
  1002  0165  2968               	goto	u605
  1003  0166  0824               	movf	main@j,w
  1004  0167  0272               	subwf	?___awdiv,w
  1005  0168                     u605:	
  1006  0168  1C03               	skipc
  1007  0169  296B               	goto	u601
  1008  016A  296C               	goto	u600
  1009  016B                     u601:	
  1010  016B  298C               	goto	l1344
  1011  016C                     u600:	
  1012  016C                     l1342:	
  1013                           
  1014                           ;main.c: 235:                         SetLed(highPin[x], lowPin[x], pinActive[x]);
  1015  016C  0020               	movlb	0	; select bank0
  1016  016D  082C               	movf	main@x,w
  1017  016E  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
  1018  016F  0086               	movwf	6
  1019  0170  0187               	clrf	7
  1020  0171  0801               	movf	1,w
  1021  0172  00A0               	movwf	??_main
  1022  0173  0820               	movf	??_main,w
  1023  0174  00F2               	movwf	SetLed@lowPin
  1024  0175  082C               	movf	main@x,w
  1025  0176  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
  1026  0177  0086               	movwf	6
  1027  0178  0187               	clrf	7
  1028  0179  0801               	movf	1,w
  1029  017A  1D03               	btfss	3,2
  1030  017B  297D               	goto	u611
  1031  017C  297F               	goto	u610
  1032  017D                     u611:	
  1033  017D  3001               	movlw	1
  1034  017E  2980               	goto	u620
  1035  017F                     u610:	
  1036  017F  3000               	movlw	0
  1037  0180                     u620:	
  1038  0180  00A1               	movwf	??_main+1
  1039  0181  0821               	movf	??_main+1,w
  1040  0182  00F3               	movwf	SetLed@active
  1041  0183  082C               	movf	main@x,w
  1042  0184  3E32               	addlw	(low (main@highPin| 0))& (0+255)
  1043  0185  0086               	movwf	6
  1044  0186  0187               	clrf	7
  1045  0187  0801               	movf	1,w
  1046  0188  3183  2330  3180   	fcall	_SetLed
  1047                           
  1048                           ;main.c: 236:                     }
  1049  018B  2993               	goto	l1346
  1050  018C                     l1344:	
  1051                           
  1052                           ;main.c: 238:                         SetLed(0,1,0);
  1053  018C  01F2               	clrf	SetLed@lowPin
  1054  018D  0AF2               	incf	SetLed@lowPin,f
  1055  018E  01F3               	clrf	SetLed@active
  1056  018F  3000               	movlw	0
  1057  0190  3183  2330  3180   	fcall	_SetLed
  1058  0193                     l1346:	
  1059                           
  1060                           ;main.c: 240:                 }
  1061  0193  3001               	movlw	1
  1062  0194  0020               	movlb	0	; select bank0
  1063  0195  07A4               	addwf	main@j,f
  1064  0196  3000               	movlw	0
  1065  0197  3DA5               	addwfc	main@j+1,f
  1066  0198                     l1348:	
  1067  0198  0825               	movf	main@j+1,w
  1068  0199  3A80               	xorlw	128
  1069  019A  00A0               	movwf	??_main
  1070  019B  3080               	movlw	128
  1071  019C  0220               	subwf	??_main,w
  1072  019D  1D03               	skipz
  1073  019E  29A1               	goto	u635
  1074  019F  300A               	movlw	10
  1075  01A0  0224               	subwf	main@j,w
  1076  01A1                     u635:	
  1077  01A1  1C03               	skipc
  1078  01A2  29A4               	goto	u631
  1079  01A3  29A5               	goto	u630
  1080  01A4                     u631:	
  1081  01A4  2951               	goto	l1340
  1082  01A5                     u630:	
  1083  01A5                     l1350:	
  1084                           
  1085                           ;main.c: 241:             }
  1086  01A5  3001               	movlw	1
  1087  01A6  0020               	movlb	0	; select bank0
  1088  01A7  07AC               	addwf	main@x,f
  1089  01A8  3000               	movlw	0
  1090  01A9  3DAD               	addwfc	main@x+1,f
  1091  01AA  082D               	movf	main@x+1,w
  1092  01AB  3A80               	xorlw	128
  1093  01AC  00A0               	movwf	??_main
  1094  01AD  3080               	movlw	128
  1095  01AE  0220               	subwf	??_main,w
  1096  01AF  1D03               	skipz
  1097  01B0  29B3               	goto	u645
  1098  01B1  3004               	movlw	4
  1099  01B2  022C               	subwf	main@x,w
  1100  01B3                     u645:	
  1101  01B3  1C03               	skipc
  1102  01B4  29B6               	goto	u641
  1103  01B5  29B7               	goto	u640
  1104  01B6                     u641:	
  1105  01B6  294E               	goto	l1334
  1106  01B7                     u640:	
  1107  01B7                     l1352:	
  1108                           
  1109                           ;main.c: 242:         }
  1110  01B7  3001               	movlw	1
  1111  01B8  0020               	movlb	0	; select bank0
  1112  01B9  07A2               	addwf	main@i_202,f
  1113  01BA  3000               	movlw	0
  1114  01BB  3DA3               	addwfc	main@i_202+1,f
  1115  01BC  0823               	movf	main@i_202+1,w
  1116  01BD  3A80               	xorlw	128
  1117  01BE  00A0               	movwf	??_main
  1118  01BF  3080               	movlw	128
  1119  01C0  0220               	subwf	??_main,w
  1120  01C1  1D03               	skipz
  1121  01C2  29C5               	goto	u655
  1122  01C3  3032               	movlw	50
  1123  01C4  0222               	subwf	main@i_202,w
  1124  01C5                     u655:	
  1125  01C5  1C03               	skipc
  1126  01C6  29C8               	goto	u651
  1127  01C7  29C9               	goto	u650
  1128  01C8                     u651:	
  1129  01C8  294B               	goto	l1328
  1130  01C9                     u650:	
  1131  01C9  29D0               	goto	l1356
  1132  01CA                     l91:	
  1133                           ;main.c: 245:             case HP0 :
  1134                           
  1135                           
  1136                           ;main.c: 246:                 LATAbits.LATA5 = 0;
  1137  01CA  0022               	movlb	2	; select bank2
  1138  01CB  128C               	bcf	12,5	;volatile
  1139                           
  1140                           ;main.c: 247:                 break;
  1141  01CC  2A1A               	goto	l1372
  1142  01CD                     l93:	
  1143                           ;main.c: 248:             default:
  1144                           
  1145                           
  1146                           ;main.c: 249:                 LATAbits.LATA5 = 1;
  1147  01CD  0022               	movlb	2	; select bank2
  1148  01CE  168C               	bsf	12,5	;volatile
  1149                           
  1150                           ;main.c: 250:                 break;
  1151  01CF  2A1A               	goto	l1372
  1152  01D0                     l1356:	
  1153  01D0  0020               	movlb	0	; select bank0
  1154  01D1  083F               	movf	_targetState,w	;volatile
  1155  01D2  00A0               	movwf	??_main
  1156  01D3  01A1               	clrf	??_main+1
  1157                           
  1158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1159                           ; Switch size 1, requested type "simple"
  1160                           ; Number of cases is 1, Range of values is 0 to 0
  1161                           ; switch strategies available:
  1162                           ; Name         Instructions Cycles
  1163                           ; simple_byte            4     3 (average)
  1164                           ; direct_byte            8     6 (fixed)
  1165                           ; jumptable            260     6 (fixed)
  1166                           ;	Chosen strategy is simple_byte
  1167  01D4  0821               	movf	??_main+1,w
  1168  01D5  3A00               	xorlw	0	; case 0
  1169  01D6  1903               	skipnz
  1170  01D7  29D9               	goto	l1482
  1171  01D8  29CD               	goto	l93
  1172  01D9                     l1482:	
  1173                           
  1174                           ; Switch size 1, requested type "simple"
  1175                           ; Number of cases is 1, Range of values is 0 to 0
  1176                           ; switch strategies available:
  1177                           ; Name         Instructions Cycles
  1178                           ; simple_byte            4     3 (average)
  1179                           ; direct_byte            8     6 (fixed)
  1180                           ; jumptable            260     6 (fixed)
  1181                           ;	Chosen strategy is simple_byte
  1182  01D9  0820               	movf	??_main,w
  1183  01DA  3A00               	xorlw	0	; case 0
  1184  01DB  1903               	skipnz
  1185  01DC  29CA               	goto	l91
  1186  01DD  29CD               	goto	l93
  1187  01DE                     l1358:	
  1188                           
  1189                           ;main.c: 254:             for(int i = 0; i < 4; i++) {
  1190  01DE  01AE               	clrf	main@i_212
  1191  01DF  01AF               	clrf	main@i_212+1
  1192  01E0                     l1364:	
  1193                           
  1194                           ;main.c: 255:                 SetLed(highPin[i], lowPin[i], pinActive[i]);
  1195  01E0  0020               	movlb	0	; select bank0
  1196  01E1  082E               	movf	main@i_212,w
  1197  01E2  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
  1198  01E3  0086               	movwf	6
  1199  01E4  0187               	clrf	7
  1200  01E5  0801               	movf	1,w
  1201  01E6  00A0               	movwf	??_main
  1202  01E7  0820               	movf	??_main,w
  1203  01E8  00F2               	movwf	SetLed@lowPin
  1204  01E9  082E               	movf	main@i_212,w
  1205  01EA  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
  1206  01EB  0086               	movwf	6
  1207  01EC  0187               	clrf	7
  1208  01ED  0801               	movf	1,w
  1209  01EE  1D03               	btfss	3,2
  1210  01EF  29F1               	goto	u661
  1211  01F0  29F3               	goto	u660
  1212  01F1                     u661:	
  1213  01F1  3001               	movlw	1
  1214  01F2  29F4               	goto	u670
  1215  01F3                     u660:	
  1216  01F3  3000               	movlw	0
  1217  01F4                     u670:	
  1218  01F4  00A1               	movwf	??_main+1
  1219  01F5  0821               	movf	??_main+1,w
  1220  01F6  00F3               	movwf	SetLed@active
  1221  01F7  082E               	movf	main@i_212,w
  1222  01F8  3E32               	addlw	(low (main@highPin| 0))& (0+255)
  1223  01F9  0086               	movwf	6
  1224  01FA  0187               	clrf	7
  1225  01FB  0801               	movf	1,w
  1226  01FC  3183  2330  3180   	fcall	_SetLed
  1227  01FF                     l1366:	
  1228                           
  1229                           ;main.c: 256:                 _delay((unsigned long)((1)*(8000000/4000.0)));
  1230  01FF  3003               	movlw	3
  1231  0200  0020               	movlb	0	; select bank0
  1232  0201  00A0               	movwf	??_main
  1233  0202  3097               	movlw	151
  1234  0203                     u837:	
  1235  0203  0B89               	decfsz	9,f
  1236  0204  2A03               	goto	u837
  1237  0205  0BA0               	decfsz	??_main,f
  1238  0206  2A03               	goto	u837
  1239  0207  3200               	nop2
  1240  0208                     l1368:	
  1241                           
  1242                           ;main.c: 257:             }
  1243  0208  3001               	movlw	1
  1244  0209  0020               	movlb	0	; select bank0
  1245  020A  07AE               	addwf	main@i_212,f
  1246  020B  3000               	movlw	0
  1247  020C  3DAF               	addwfc	main@i_212+1,f
  1248  020D                     l1370:	
  1249  020D  082F               	movf	main@i_212+1,w
  1250  020E  3A80               	xorlw	128
  1251  020F  00A0               	movwf	??_main
  1252  0210  3080               	movlw	128
  1253  0211  0220               	subwf	??_main,w
  1254  0212  1D03               	skipz
  1255  0213  2A16               	goto	u685
  1256  0214  3004               	movlw	4
  1257  0215  022E               	subwf	main@i_212,w
  1258  0216                     u685:	
  1259  0216  1C03               	skipc
  1260  0217  2A19               	goto	u681
  1261  0218  2A1A               	goto	u680
  1262  0219                     u681:	
  1263  0219  29E0               	goto	l1364
  1264  021A                     u680:	
  1265  021A                     l1372:	
  1266                           
  1267                           ;main.c: 253:         while(currentState == targetState) {
  1268  021A  0020               	movlb	0	; select bank0
  1269  021B  083E               	movf	_currentState,w
  1270  021C  063F               	xorwf	_targetState,w	;volatile
  1271  021D  1903               	skipnz
  1272  021E  2A20               	goto	u691
  1273  021F  2A21               	goto	u690
  1274  0220                     u691:	
  1275  0220  29DE               	goto	l1358
  1276  0221                     u690:	
  1277  0221                     l98:	
  1278                           
  1279                           ;main.c: 260:         LATAbits.LATA5 = 0;
  1280  0221  0022               	movlb	2	; select bank2
  1281  0222  128C               	bcf	12,5	;volatile
  1282  0223                     l1374:	
  1283                           
  1284                           ;main.c: 262:         for(int i = 0; i < 50; i++) {
  1285  0223  0020               	movlb	0	; select bank0
  1286  0224  01A6               	clrf	main@i_213
  1287  0225  01A7               	clrf	main@i_213+1
  1288  0226                     l1376:	
  1289  0226  0827               	movf	main@i_213+1,w
  1290  0227  3A80               	xorlw	128
  1291  0228  00A0               	movwf	??_main
  1292  0229  3080               	movlw	128
  1293  022A  0220               	subwf	??_main,w
  1294  022B  1D03               	skipz
  1295  022C  2A2F               	goto	u705
  1296  022D  3032               	movlw	50
  1297  022E  0226               	subwf	main@i_213,w
  1298  022F                     u705:	
  1299  022F  1C03               	skipc
  1300  0230  2A32               	goto	u701
  1301  0231  2A33               	goto	u700
  1302  0232                     u701:	
  1303  0232  2A34               	goto	l1380
  1304  0233                     u700:	
  1305  0233  2AC2               	goto	l1406
  1306  0234                     l1380:	
  1307                           
  1308                           ;main.c: 263:             for(int x = 0; x < 4; x++) {
  1309  0234  0020               	movlb	0	; select bank0
  1310  0235  01B0               	clrf	main@x_214
  1311  0236  01B1               	clrf	main@x_214+1
  1312  0237                     l1382:	
  1313  0237  0831               	movf	main@x_214+1,w
  1314  0238  3A80               	xorlw	128
  1315  0239  00A0               	movwf	??_main
  1316  023A  3080               	movlw	128
  1317  023B  0220               	subwf	??_main,w
  1318  023C  1D03               	skipz
  1319  023D  2A40               	goto	u715
  1320  023E  3004               	movlw	4
  1321  023F  0230               	subwf	main@x_214,w
  1322  0240                     u715:	
  1323  0240  1C03               	skipc
  1324  0241  2A43               	goto	u711
  1325  0242  2A44               	goto	u710
  1326  0243                     u711:	
  1327  0243  2A45               	goto	l1386
  1328  0244                     u710:	
  1329  0244  2AB0               	goto	l1404
  1330  0245                     l1386:	
  1331                           
  1332                           ;main.c: 264:                 for(short j = 0; j < 10; j++) {
  1333  0245  0020               	movlb	0	; select bank0
  1334  0246  01A8               	clrf	main@j_215
  1335  0247  01A9               	clrf	main@j_215+1
  1336  0248                     l1388:	
  1337  0248  0829               	movf	main@j_215+1,w
  1338  0249  3A80               	xorlw	128
  1339  024A  00A0               	movwf	??_main
  1340  024B  3080               	movlw	128
  1341  024C  0220               	subwf	??_main,w
  1342  024D  1D03               	skipz
  1343  024E  2A51               	goto	u725
  1344  024F  300A               	movlw	10
  1345  0250  0228               	subwf	main@j_215,w
  1346  0251                     u725:	
  1347  0251  1C03               	skipc
  1348  0252  2A54               	goto	u721
  1349  0253  2A55               	goto	u720
  1350  0254                     u721:	
  1351  0254  2A56               	goto	l1392
  1352  0255                     u720:	
  1353  0255  2A9E               	goto	l1402
  1354  0256                     l1392:	
  1355                           
  1356                           ;main.c: 265:                     if(j <= i/5) {
  1357  0256  3005               	movlw	5
  1358  0257  00F2               	movwf	___awdiv@divisor
  1359  0258  3000               	movlw	0
  1360  0259  00F3               	movwf	___awdiv@divisor+1
  1361  025A  0020               	movlb	0	; select bank0
  1362  025B  0827               	movf	main@i_213+1,w
  1363  025C  00F5               	movwf	___awdiv@dividend+1
  1364  025D  0826               	movf	main@i_213,w
  1365  025E  00F4               	movwf	___awdiv@dividend
  1366  025F  3182  22D1  3180   	fcall	___awdiv
  1367  0262  0873               	movf	?___awdiv+1,w
  1368  0263  3A80               	xorlw	128
  1369  0264  0020               	movlb	0	; select bank0
  1370  0265  00A0               	movwf	??_main
  1371  0266  0829               	movf	main@j_215+1,w
  1372  0267  3A80               	xorlw	128
  1373  0268  0220               	subwf	??_main,w
  1374  0269  1D03               	skipz
  1375  026A  2A6D               	goto	u735
  1376  026B  0828               	movf	main@j_215,w
  1377  026C  0272               	subwf	?___awdiv,w
  1378  026D                     u735:	
  1379  026D  1C03               	skipc
  1380  026E  2A70               	goto	u731
  1381  026F  2A71               	goto	u730
  1382  0270                     u731:	
  1383  0270  2A79               	goto	l1396
  1384  0271                     u730:	
  1385  0271                     l1394:	
  1386                           
  1387                           ;main.c: 266:                         SetLed(0,1,0);
  1388  0271  01F2               	clrf	SetLed@lowPin
  1389  0272  0AF2               	incf	SetLed@lowPin,f
  1390  0273  01F3               	clrf	SetLed@active
  1391  0274  3000               	movlw	0
  1392  0275  3183  2330  3180   	fcall	_SetLed
  1393                           
  1394                           ;main.c: 267:                     }
  1395  0278  2A98               	goto	l1398
  1396  0279                     l1396:	
  1397                           
  1398                           ;main.c: 269:                         SetLed(highPin[x], lowPin[x], pinActive[x]);
  1399  0279  0020               	movlb	0	; select bank0
  1400  027A  0830               	movf	main@x_214,w
  1401  027B  3E36               	addlw	(low (main@lowPin| 0))& (0+255)
  1402  027C  0086               	movwf	6
  1403  027D  0187               	clrf	7
  1404  027E  0801               	movf	1,w
  1405  027F  00A0               	movwf	??_main
  1406  0280  0820               	movf	??_main,w
  1407  0281  00F2               	movwf	SetLed@lowPin
  1408  0282  0830               	movf	main@x_214,w
  1409  0283  3E3A               	addlw	(low (main@pinActive| 0))& (0+255)
  1410  0284  0086               	movwf	6
  1411  0285  0187               	clrf	7
  1412  0286  0801               	movf	1,w
  1413  0287  1D03               	btfss	3,2
  1414  0288  2A8A               	goto	u741
  1415  0289  2A8C               	goto	u740
  1416  028A                     u741:	
  1417  028A  3001               	movlw	1
  1418  028B  2A8D               	goto	u750
  1419  028C                     u740:	
  1420  028C  3000               	movlw	0
  1421  028D                     u750:	
  1422  028D  00A1               	movwf	??_main+1
  1423  028E  0821               	movf	??_main+1,w
  1424  028F  00F3               	movwf	SetLed@active
  1425  0290  0830               	movf	main@x_214,w
  1426  0291  3E32               	addlw	(low (main@highPin| 0))& (0+255)
  1427  0292  0086               	movwf	6
  1428  0293  0187               	clrf	7
  1429  0294  0801               	movf	1,w
  1430  0295  3183  2330  3180   	fcall	_SetLed
  1431  0298                     l1398:	
  1432                           
  1433                           ;main.c: 271:                 }
  1434  0298  3001               	movlw	1
  1435  0299  0020               	movlb	0	; select bank0
  1436  029A  07A8               	addwf	main@j_215,f
  1437  029B  3000               	movlw	0
  1438  029C  3DA9               	addwfc	main@j_215+1,f
  1439  029D  2A48               	goto	l1388
  1440  029E                     l1402:	
  1441                           
  1442                           ;main.c: 272:             }
  1443  029E  3001               	movlw	1
  1444  029F  0020               	movlb	0	; select bank0
  1445  02A0  07B0               	addwf	main@x_214,f
  1446  02A1  3000               	movlw	0
  1447  02A2  3DB1               	addwfc	main@x_214+1,f
  1448  02A3  0831               	movf	main@x_214+1,w
  1449  02A4  3A80               	xorlw	128
  1450  02A5  00A0               	movwf	??_main
  1451  02A6  3080               	movlw	128
  1452  02A7  0220               	subwf	??_main,w
  1453  02A8  1D03               	skipz
  1454  02A9  2AAC               	goto	u765
  1455  02AA  3004               	movlw	4
  1456  02AB  0230               	subwf	main@x_214,w
  1457  02AC                     u765:	
  1458  02AC  1C03               	skipc
  1459  02AD  2AAF               	goto	u761
  1460  02AE  2AB0               	goto	u760
  1461  02AF                     u761:	
  1462  02AF  2A45               	goto	l1386
  1463  02B0                     u760:	
  1464  02B0                     l1404:	
  1465                           
  1466                           ;main.c: 273:         }
  1467  02B0  3001               	movlw	1
  1468  02B1  0020               	movlb	0	; select bank0
  1469  02B2  07A6               	addwf	main@i_213,f
  1470  02B3  3000               	movlw	0
  1471  02B4  3DA7               	addwfc	main@i_213+1,f
  1472  02B5  0827               	movf	main@i_213+1,w
  1473  02B6  3A80               	xorlw	128
  1474  02B7  00A0               	movwf	??_main
  1475  02B8  3080               	movlw	128
  1476  02B9  0220               	subwf	??_main,w
  1477  02BA  1D03               	skipz
  1478  02BB  2ABE               	goto	u775
  1479  02BC  3032               	movlw	50
  1480  02BD  0226               	subwf	main@i_213,w
  1481  02BE                     u775:	
  1482  02BE  1C03               	skipc
  1483  02BF  2AC1               	goto	u771
  1484  02C0  2AC2               	goto	u770
  1485  02C1                     u771:	
  1486  02C1  2A34               	goto	l1380
  1487  02C2                     u770:	
  1488  02C2                     l1406:	
  1489                           
  1490                           ;main.c: 275:         _delay((unsigned long)((300)*(8000000/4000.0)));
  1491  02C2  3004               	movlw	4
  1492  02C3  0020               	movlb	0	; select bank0
  1493  02C4  00A1               	movwf	??_main+1
  1494  02C5  300C               	movlw	12
  1495  02C6  00A0               	movwf	??_main
  1496  02C7  3033               	movlw	51
  1497  02C8                     u847:	
  1498  02C8  0B89               	decfsz	9,f
  1499  02C9  2AC8               	goto	u847
  1500  02CA  0BA0               	decfsz	??_main,f
  1501  02CB  2AC8               	goto	u847
  1502  02CC  0BA1               	decfsz	??_main+1,f
  1503  02CD  2AC8               	goto	u847
  1504  02CE  3200               	nop2
  1505  02CF  2837               	goto	l1146
  1506  02D0  282D               	ljmp	start
  1507  02D1                     __end_of_main:	
  1508                           
  1509                           	psect	text1
  1510  0385                     __ptext1:	
  1511 ;; *************** function _initialize *****************
  1512 ;; Defined at:
  1513 ;;		line 70 in file "main.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1
  1527 ;;      Params:         0       0       0
  1528 ;;      Locals:         0       0       0
  1529 ;;      Temps:          0       0       0
  1530 ;;      Totals:         0       0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _initialize
  1543  0385                     _initialize:	
  1544  0385                     l1064:	
  1545                           ;incstack = 0
  1546                           ; Regs used in _initialize: [wreg+status,2+status,0]
  1547                           
  1548                           
  1549                           ;main.c: 71:     OSCCON = 0b01110000;
  1550  0385  3070               	movlw	112
  1551  0386  0021               	movlb	1	; select bank1
  1552  0387  0099               	movwf	25	;volatile
  1553                           
  1554                           ;main.c: 73:     TRISA = 0b00000111;
  1555  0388  3007               	movlw	7
  1556  0389  008C               	movwf	12	;volatile
  1557                           
  1558                           ;main.c: 74:     TRISC = 0b00111111;
  1559  038A  303F               	movlw	63
  1560  038B  008E               	movwf	14	;volatile
  1561  038C                     l1066:	
  1562                           
  1563                           ;main.c: 76:     ANSELC = 0x00;
  1564  038C  0023               	movlb	3	; select bank3
  1565  038D  018E               	clrf	14	;volatile
  1566  038E                     l1068:	
  1567                           
  1568                           ;main.c: 77:     ANSELA = 0x00;
  1569  038E  018C               	clrf	12	;volatile
  1570                           
  1571                           ;main.c: 79:     WPUA = 0x07;
  1572  038F  3007               	movlw	7
  1573  0390  0024               	movlb	4	; select bank4
  1574  0391  008C               	movwf	12	;volatile
  1575  0392                     l1070:	
  1576                           
  1577                           ;main.c: 80:     OPTION_REGbits.nWPUEN = 0;
  1578  0392  0021               	movlb	1	; select bank1
  1579  0393  1395               	bcf	21,7	;volatile
  1580                           
  1581                           ;main.c: 82:     SSP1STAT = 0b10000000;
  1582  0394  3080               	movlw	128
  1583  0395  0024               	movlb	4	; select bank4
  1584  0396  0094               	movwf	20	;volatile
  1585                           
  1586                           ;main.c: 83:     SSP1CON1 = 0b00110110;
  1587  0397  3036               	movlw	54
  1588  0398  0095               	movwf	21	;volatile
  1589                           
  1590                           ;main.c: 84:     SSP1CON2 = 0b00000001;
  1591  0399  3001               	movlw	1
  1592  039A  0096               	movwf	22	;volatile
  1593  039B                     l1072:	
  1594                           
  1595                           ;main.c: 85:     SSP1ADD = 0b10000000 | (0b00001110 & (PORTA << 1));
  1596  039B  0020               	movlb	0	; select bank0
  1597  039C  350C               	lslf	12,w	;volatile
  1598  039D  390E               	andlw	14
  1599  039E  3880               	iorlw	128
  1600  039F  0024               	movlb	4	; select bank4
  1601  03A0  0092               	movwf	18	;volatile
  1602  03A1                     l1074:	
  1603                           
  1604                           ;main.c: 87:     GIE = 1;
  1605  03A1  178B               	bsf	11,7	;volatile
  1606  03A2                     l1076:	
  1607                           
  1608                           ;main.c: 88:     PEIE = 1;
  1609  03A2  170B               	bsf	11,6	;volatile
  1610  03A3                     l1078:	
  1611                           
  1612                           ;main.c: 89:     SSP1IF = 0;
  1613  03A3  0020               	movlb	0	; select bank0
  1614  03A4  1191               	bcf	17,3	;volatile
  1615  03A5                     l1080:	
  1616                           
  1617                           ;main.c: 90:     SSP1IE = 1;
  1618  03A5  0021               	movlb	1	; select bank1
  1619  03A6  1591               	bsf	17,3	;volatile
  1620  03A7                     l53:	
  1621  03A7  0008               	return
  1622  03A8                     __end_of_initialize:	
  1623                           
  1624                           	psect	text2
  1625  02D1                     __ptext2:	
  1626 ;; *************** function ___awdiv *****************
  1627 ;; Defined at:
  1628 ;;		line 5 in file "M:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  divisor         2    2[COMMON] int 
  1631 ;;  dividend        2    4[COMMON] int 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  quotient        2    9[COMMON] int 
  1634 ;;  sign            1    8[COMMON] unsigned char 
  1635 ;;  counter         1    7[COMMON] unsigned char 
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  2    2[COMMON] int 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMMON   BANK0   BANK1
  1645 ;;      Params:         4       0       0
  1646 ;;      Locals:         4       0       0
  1647 ;;      Temps:          1       0       0
  1648 ;;      Totals:         9       0       0
  1649 ;;Total ram usage:        9 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    1
  1652 ;; This function calls:
  1653 ;;		Nothing
  1654 ;; This function is called by:
  1655 ;;		_main
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function ___awdiv
  1661  02D1                     ___awdiv:	
  1662  02D1                     l1100:	
  1663                           ;incstack = 0
  1664                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1665                           
  1666  02D1  01F8               	clrf	___awdiv@sign
  1667  02D2                     l1102:	
  1668  02D2  1FF3               	btfss	___awdiv@divisor+1,7
  1669  02D3  2AD5               	goto	u491
  1670  02D4  2AD6               	goto	u490
  1671  02D5                     u491:	
  1672  02D5  2ADD               	goto	l1108
  1673  02D6                     u490:	
  1674  02D6                     l1104:	
  1675  02D6  09F2               	comf	___awdiv@divisor,f
  1676  02D7  09F3               	comf	___awdiv@divisor+1,f
  1677  02D8  0AF2               	incf	___awdiv@divisor,f
  1678  02D9  1903               	skipnz
  1679  02DA  0AF3               	incf	___awdiv@divisor+1,f
  1680  02DB                     l1106:	
  1681  02DB  01F8               	clrf	___awdiv@sign
  1682  02DC  0AF8               	incf	___awdiv@sign,f
  1683  02DD                     l1108:	
  1684  02DD  1FF5               	btfss	___awdiv@dividend+1,7
  1685  02DE  2AE0               	goto	u501
  1686  02DF  2AE1               	goto	u500
  1687  02E0                     u501:	
  1688  02E0  2AEA               	goto	l1114
  1689  02E1                     u500:	
  1690  02E1                     l1110:	
  1691  02E1  09F4               	comf	___awdiv@dividend,f
  1692  02E2  09F5               	comf	___awdiv@dividend+1,f
  1693  02E3  0AF4               	incf	___awdiv@dividend,f
  1694  02E4  1903               	skipnz
  1695  02E5  0AF5               	incf	___awdiv@dividend+1,f
  1696  02E6                     l1112:	
  1697  02E6  3001               	movlw	1
  1698  02E7  00F6               	movwf	??___awdiv
  1699  02E8  0876               	movf	??___awdiv,w
  1700  02E9  06F8               	xorwf	___awdiv@sign,f
  1701  02EA                     l1114:	
  1702  02EA  01F9               	clrf	___awdiv@quotient
  1703  02EB  01FA               	clrf	___awdiv@quotient+1
  1704  02EC                     l1116:	
  1705  02EC  0872               	movf	___awdiv@divisor,w
  1706  02ED  0473               	iorwf	___awdiv@divisor+1,w
  1707  02EE  1903               	btfsc	3,2
  1708  02EF  2AF1               	goto	u511
  1709  02F0  2AF2               	goto	u510
  1710  02F1                     u511:	
  1711  02F1  2B21               	goto	l1136
  1712  02F2                     u510:	
  1713  02F2                     l1118:	
  1714  02F2  01F7               	clrf	___awdiv@counter
  1715  02F3  0AF7               	incf	___awdiv@counter,f
  1716  02F4  2AFE               	goto	l1124
  1717  02F5                     l1120:	
  1718  02F5  3001               	movlw	1
  1719  02F6                     u525:	
  1720  02F6  35F2               	lslf	___awdiv@divisor,f
  1721  02F7  0DF3               	rlf	___awdiv@divisor+1,f
  1722  02F8  0B89               	decfsz	9,f
  1723  02F9  2AF6               	goto	u525
  1724  02FA                     l1122:	
  1725  02FA  3001               	movlw	1
  1726  02FB  00F6               	movwf	??___awdiv
  1727  02FC  0876               	movf	??___awdiv,w
  1728  02FD  07F7               	addwf	___awdiv@counter,f
  1729  02FE                     l1124:	
  1730  02FE  1FF3               	btfss	___awdiv@divisor+1,7
  1731  02FF  2B01               	goto	u531
  1732  0300  2B02               	goto	u530
  1733  0301                     u531:	
  1734  0301  2AF5               	goto	l1120
  1735  0302                     u530:	
  1736  0302                     l1126:	
  1737  0302  3001               	movlw	1
  1738  0303                     u545:	
  1739  0303  35F9               	lslf	___awdiv@quotient,f
  1740  0304  0DFA               	rlf	___awdiv@quotient+1,f
  1741  0305  0B89               	decfsz	9,f
  1742  0306  2B03               	goto	u545
  1743  0307  0873               	movf	___awdiv@divisor+1,w
  1744  0308  0275               	subwf	___awdiv@dividend+1,w
  1745  0309  1D03               	skipz
  1746  030A  2B0D               	goto	u555
  1747  030B  0872               	movf	___awdiv@divisor,w
  1748  030C  0274               	subwf	___awdiv@dividend,w
  1749  030D                     u555:	
  1750  030D  1C03               	skipc
  1751  030E  2B10               	goto	u551
  1752  030F  2B11               	goto	u550
  1753  0310                     u551:	
  1754  0310  2B16               	goto	l1132
  1755  0311                     u550:	
  1756  0311                     l1128:	
  1757  0311  0872               	movf	___awdiv@divisor,w
  1758  0312  02F4               	subwf	___awdiv@dividend,f
  1759  0313  0873               	movf	___awdiv@divisor+1,w
  1760  0314  3BF5               	subwfb	___awdiv@dividend+1,f
  1761  0315                     l1130:	
  1762  0315  1479               	bsf	___awdiv@quotient,0
  1763  0316                     l1132:	
  1764  0316  3001               	movlw	1
  1765  0317                     u565:	
  1766  0317  36F3               	lsrf	___awdiv@divisor+1,f
  1767  0318  0CF2               	rrf	___awdiv@divisor,f
  1768  0319  0B89               	decfsz	9,f
  1769  031A  2B17               	goto	u565
  1770  031B                     l1134:	
  1771  031B  3001               	movlw	1
  1772  031C  02F7               	subwf	___awdiv@counter,f
  1773  031D  1D03               	btfss	3,2
  1774  031E  2B20               	goto	u571
  1775  031F  2B21               	goto	u570
  1776  0320                     u571:	
  1777  0320  2B02               	goto	l1126
  1778  0321                     u570:	
  1779  0321                     l1136:	
  1780  0321  0878               	movf	___awdiv@sign,w
  1781  0322  1903               	btfsc	3,2
  1782  0323  2B25               	goto	u581
  1783  0324  2B26               	goto	u580
  1784  0325                     u581:	
  1785  0325  2B2B               	goto	l1140
  1786  0326                     u580:	
  1787  0326                     l1138:	
  1788  0326  09F9               	comf	___awdiv@quotient,f
  1789  0327  09FA               	comf	___awdiv@quotient+1,f
  1790  0328  0AF9               	incf	___awdiv@quotient,f
  1791  0329  1903               	skipnz
  1792  032A  0AFA               	incf	___awdiv@quotient+1,f
  1793  032B                     l1140:	
  1794  032B  087A               	movf	___awdiv@quotient+1,w
  1795  032C  00F3               	movwf	?___awdiv+1
  1796  032D  0879               	movf	___awdiv@quotient,w
  1797  032E  00F2               	movwf	?___awdiv
  1798  032F                     l343:	
  1799  032F  0008               	return
  1800  0330                     __end_of___awdiv:	
  1801                           
  1802                           	psect	text3
  1803  0330                     __ptext3:	
  1804 ;; *************** function _SetLed *****************
  1805 ;; Defined at:
  1806 ;;		line 95 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  highPin         1    wreg     unsigned char 
  1809 ;;  lowPin          1    2[COMMON] unsigned char 
  1810 ;;  active          1    3[COMMON] _Bool 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  highPin         1    8[COMMON] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1
  1822 ;;      Params:         2       0       0
  1823 ;;      Locals:         3       0       0
  1824 ;;      Temps:          2       0       0
  1825 ;;      Totals:         7       0       0
  1826 ;;Total ram usage:        7 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _SetLed
  1838  0330                     _SetLed:	
  1839                           
  1840                           ;incstack = 0
  1841                           ; Regs used in _SetLed: [wreg+status,2+status,0]
  1842                           ;SetLed@highPin stored from wreg
  1843  0330  00F8               	movwf	SetLed@highPin
  1844  0331                     l1084:	
  1845                           
  1846                           ;main.c: 96:     TRISC = 0b00111111;
  1847  0331  303F               	movlw	63
  1848  0332  0021               	movlb	1	; select bank1
  1849  0333  008E               	movwf	14	;volatile
  1850  0334                     l1086:	
  1851                           
  1852                           ;main.c: 97:     LATC = active ? 1 << (highPin+2) : 0;
  1853  0334  0873               	movf	SetLed@active,w
  1854  0335  1D03               	btfss	3,2
  1855  0336  2B38               	goto	u421
  1856  0337  2B39               	goto	u420
  1857  0338                     u421:	
  1858  0338  2B3C               	goto	l1090
  1859  0339                     u420:	
  1860  0339                     l1088:	
  1861  0339  01F6               	clrf	_SetLed$191
  1862  033A  01F7               	clrf	_SetLed$191+1
  1863  033B  2B4C               	goto	l1092
  1864  033C                     l1090:	
  1865  033C  3001               	movlw	1
  1866  033D  00F4               	movwf	??_SetLed
  1867  033E  3000               	movlw	0
  1868  033F  00F5               	movwf	??_SetLed+1
  1869  0340  0878               	movf	SetLed@highPin,w
  1870  0341  3E02               	addlw	2
  1871  0342  0A89               	incf	9,f
  1872  0343  2B46               	goto	u434
  1873  0344                     u435:	
  1874  0344  35F4               	lslf	??_SetLed,f
  1875  0345  0DF5               	rlf	??_SetLed+1,f
  1876  0346                     u434:	
  1877  0346  0B89               	decfsz	9,f
  1878  0347  2B44               	goto	u435
  1879  0348  0874               	movf	??_SetLed,w
  1880  0349  00F6               	movwf	_SetLed$191
  1881  034A  0875               	movf	??_SetLed+1,w
  1882  034B  00F7               	movwf	_SetLed$191+1
  1883  034C                     l1092:	
  1884  034C  0876               	movf	_SetLed$191,w
  1885  034D  0022               	movlb	2	; select bank2
  1886  034E  008E               	movwf	14	;volatile
  1887  034F                     l1094:	
  1888                           
  1889                           ;main.c: 98:     if (highPin > lowPin)
  1890  034F  0878               	movf	SetLed@highPin,w
  1891  0350  0272               	subwf	SetLed@lowPin,w
  1892  0351  1803               	skipnc
  1893  0352  2B54               	goto	u441
  1894  0353  2B55               	goto	u440
  1895  0354                     u441:	
  1896  0354  2B6D               	goto	l1098
  1897  0355                     u440:	
  1898  0355                     l1096:	
  1899                           
  1900                           ;main.c: 99:         TRISC = (unsigned) ~(((1 << (highPin-lowPin)) + 1) << (2 + lowPin))
      +                          ;
  1901  0355  3001               	movlw	1
  1902  0356  00F4               	movwf	??_SetLed
  1903  0357  0872               	movf	SetLed@lowPin,w
  1904  0358  0278               	subwf	SetLed@highPin,w
  1905  0359  0A89               	incf	9,f
  1906  035A  2B5C               	goto	u454
  1907  035B                     u455:	
  1908  035B  35F4               	lslf	??_SetLed,f
  1909  035C                     u454:	
  1910  035C  0B89               	decfsz	9,f
  1911  035D  2B5B               	goto	u455
  1912  035E  0874               	movf	??_SetLed,w
  1913  035F  3E01               	addlw	1
  1914  0360  00F5               	movwf	??_SetLed+1
  1915  0361  0872               	movf	SetLed@lowPin,w
  1916  0362  3E02               	addlw	2
  1917  0363  0A89               	incf	9,f
  1918  0364  2B66               	goto	u464
  1919  0365                     u465:	
  1920  0365  35F5               	lslf	??_SetLed+1,f
  1921  0366                     u464:	
  1922  0366  0B89               	decfsz	9,f
  1923  0367  2B65               	goto	u465
  1924  0368  0875               	movf	??_SetLed+1,w
  1925  0369  3AFF               	xorlw	255
  1926  036A  0021               	movlb	1	; select bank1
  1927  036B  008E               	movwf	14	;volatile
  1928  036C  2B84               	goto	l62
  1929  036D                     l1098:	
  1930                           
  1931                           ;main.c: 101:         TRISC = (unsigned) ~(((1 << (lowPin-highPin)) + 1) << (2 + highPin
      +                          ));
  1932  036D  3001               	movlw	1
  1933  036E  00F4               	movwf	??_SetLed
  1934  036F  0878               	movf	SetLed@highPin,w
  1935  0370  0272               	subwf	SetLed@lowPin,w
  1936  0371  0A89               	incf	9,f
  1937  0372  2B74               	goto	u474
  1938  0373                     u475:	
  1939  0373  35F4               	lslf	??_SetLed,f
  1940  0374                     u474:	
  1941  0374  0B89               	decfsz	9,f
  1942  0375  2B73               	goto	u475
  1943  0376  0874               	movf	??_SetLed,w
  1944  0377  3E01               	addlw	1
  1945  0378  00F5               	movwf	??_SetLed+1
  1946  0379  0878               	movf	SetLed@highPin,w
  1947  037A  3E02               	addlw	2
  1948  037B  0A89               	incf	9,f
  1949  037C  2B7E               	goto	u484
  1950  037D                     u485:	
  1951  037D  35F5               	lslf	??_SetLed+1,f
  1952  037E                     u484:	
  1953  037E  0B89               	decfsz	9,f
  1954  037F  2B7D               	goto	u485
  1955  0380  0875               	movf	??_SetLed+1,w
  1956  0381  3AFF               	xorlw	255
  1957  0382  0021               	movlb	1	; select bank1
  1958  0383  008E               	movwf	14	;volatile
  1959  0384                     l62:	
  1960  0384  0008               	return
  1961  0385                     __end_of_SetLed:	
  1962                           
  1963                           	psect	intentry
  1964  0004                     __pintentry:	
  1965 ;; *************** function _I2C_Slave_Read *****************
  1966 ;; Defined at:
  1967 ;;		line 279 in file "main.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  buf             1    0        unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1
  1981 ;;      Params:         0       0       0
  1982 ;;      Locals:         1       0       0
  1983 ;;      Temps:          1       0       0
  1984 ;;      Totals:         2       0       0
  1985 ;;Total ram usage:        2 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		Interrupt level 1
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994  0004                     _I2C_Slave_Read:	
  1995                           
  1996                           ;incstack = 0
  1997  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1998                           
  1999                           ; Regs used in _I2C_Slave_Read: [wreg+status,2]
  2000  0005  3180               	pagesel	$
  2001  0006                     i1l1416:	
  2002                           
  2003                           ;main.c: 280:     unsigned char buf;;main.c: 282:     if(SSP1IF == 1) {
  2004  0006  0020               	movlb	0	; select bank0
  2005  0007  1D91               	btfss	17,3	;volatile
  2006  0008  280A               	goto	u78_21
  2007  0009  280B               	goto	u78_20
  2008  000A                     u78_21:	
  2009  000A  282B               	goto	i1l122
  2010  000B                     u78_20:	
  2011  000B                     i1l1418:	
  2012                           
  2013                           ;main.c: 283:         SSP1IF = 0;
  2014  000B  1191               	bcf	17,3	;volatile
  2015                           
  2016                           ;main.c: 285:         if(SSP1CON1bits.WCOL || SSP1CON1bits.SSPOV ) {
  2017  000C  0024               	movlb	4	; select bank4
  2018  000D  1B95               	btfsc	21,7	;volatile
  2019  000E  2810               	goto	u79_21
  2020  000F  2811               	goto	u79_20
  2021  0010                     u79_21:	
  2022  0010  2815               	goto	i1l1422
  2023  0011                     u79_20:	
  2024  0011                     i1l1420:	
  2025  0011  1F15               	btfss	21,6	;volatile
  2026  0012  2814               	goto	u80_21
  2027  0013  2815               	goto	u80_20
  2028  0014                     u80_21:	
  2029  0014  2818               	goto	i1l1428
  2030  0015                     u80_20:	
  2031  0015                     i1l1422:	
  2032  0015  0811               	movf	17,w	;volatile
  2033  0016                     i1l1424:	
  2034                           
  2035                           ;main.c: 287:             SSP1CON1bits.WCOL = 0;
  2036  0016  1395               	bcf	21,7	;volatile
  2037  0017                     i1l1426:	
  2038                           
  2039                           ;main.c: 288:             SSP1CON1bits.SSPOV = 0;
  2040  0017  1315               	bcf	21,6	;volatile
  2041  0018                     i1l1428:	
  2042                           
  2043                           ;main.c: 291:         if (SSP1STATbits.R_nW) {
  2044  0018  1D14               	btfss	20,2	;volatile
  2045  0019  281B               	goto	u81_21
  2046  001A  281C               	goto	u81_20
  2047  001B                     u81_21:	
  2048  001B  281E               	goto	i1l118
  2049  001C                     u81_20:	
  2050  001C                     i1l1430:	
  2051                           
  2052                           ;main.c: 292:             SSPBUF = 0x00;
  2053  001C  0191               	clrf	17	;volatile
  2054                           
  2055                           ;main.c: 293:         } else if (SSP1STATbits.D_nA) {
  2056  001D  2829               	goto	i1l1436
  2057  001E                     i1l118:	
  2058  001E  1E94               	btfss	20,5	;volatile
  2059  001F  2821               	goto	u82_21
  2060  0020  2822               	goto	u82_20
  2061  0021                     u82_21:	
  2062  0021  2828               	goto	i1l1434
  2063  0022                     u82_20:	
  2064  0022                     i1l1432:	
  2065                           
  2066                           ;main.c: 294:             targetState = SSPBUF;
  2067  0022  0811               	movf	17,w	;volatile
  2068  0023  00F0               	movwf	??_I2C_Slave_Read
  2069  0024  0870               	movf	??_I2C_Slave_Read,w
  2070  0025  0020               	movlb	0	; select bank0
  2071  0026  00BF               	movwf	_targetState	;volatile
  2072                           
  2073                           ;main.c: 295:         } else {
  2074  0027  2829               	goto	i1l1436
  2075  0028                     i1l1434:	
  2076  0028  0811               	movf	17,w	;volatile
  2077  0029                     i1l1436:	
  2078                           
  2079                           ;main.c: 299:         SSPCON1bits.CKP = 1;
  2080  0029  0024               	movlb	4	; select bank4
  2081  002A  1615               	bsf	21,4	;volatile
  2082  002B                     i1l122:	
  2083  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2084  002C  0009               	retfie
  2085  002D                     __end_of_I2C_Slave_Read:	
  2086  007E                     btemp	set	126	;btemp
  2087  007E                     int$flags	set	126
  2088  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     30      32
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv

Critical Paths under _I2C_Slave_Read in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _I2C_Slave_Read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _I2C_Slave_Read in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    4005
                                              0 BANK0     30    30      0
                             _SetLed
                            ___awdiv
                         _initialize
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              2 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SetLed                                               7     5      2    1004
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Read                                       2     2      0       2
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetLed
   ___awdiv
   _initialize

 _I2C_Slave_Read (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      20       6       40.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      2B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Apr 19 22:29:34 2020

            __CFG_CP$OFF 0000                       l53 03A7                       l62 0384  
                     l81 0106                       l91 01CA                       l93 01CD  
                     l98 0221             ___awdiv@sign 0078              __CFG_LVP$ON 0000  
                    l343 032F                      _GIE 005F                      u420 0339  
                    u500 02E1                      u421 0338                      u501 02E0  
                    u510 02F2                      u511 02F1                      u440 0355  
                    u600 016C                      u441 0354                      u601 016B  
                    u434 0346                      u530 0302                      u610 017F  
                    u435 0344                      u531 0301                      u611 017D  
                    u700 0233                      u620 0180                      u525 02F6  
                    u701 0232                      u605 0168                      u454 035C  
                    u550 0311                      u710 0244                      u630 01A5  
                    u455 035B                      u551 0310                      u711 0243  
                    u631 01A4                      u464 0366                      u720 0255  
                    u640 01B7                      u465 0365                      u545 0303  
                    u721 0254                      u705 022F                      u641 01B6  
                    u474 0374                      u570 0321                      u490 02D6  
                    u730 0271                      u650 01C9                      u475 0373  
                    u571 0320                      u555 030D                      u491 02D5  
                    u731 0270                      u715 0240                      u651 01C8  
                    u635 01A1                      u484 037E                      u580 0326  
                    u740 028C                      u660 01F3                      u485 037D  
                    u581 0325                      u565 0317                      u741 028A  
                    u725 0251                      u661 01F1                      u645 01B3  
                    u750 028D                      u670 01F4                      u590 005C  
                    u735 026D                      u655 01C5                      u591 005B  
                    u760 02B0                      u680 021A                      u761 02AF  
                    u681 0219                      u770 02C2                      u690 0221  
                    u771 02C1                      u691 0220                      u595 0058  
                    u765 02AC                      u685 0216                      u837 0203  
                    u847 02C8                      u775 02BE             __CFG_BORV$LO 0000  
                    wreg 0009              main@highPin 0032                     l1100 02D1  
                   l1110 02E1                     l1102 02D2                     l1120 02F5  
                   l1112 02E6                     l1104 02D6                     l1200 0098  
                   l1130 0315                     l1122 02FA                     l1114 02EA  
                   l1106 02DB                     l1210 00A3                     l1202 009C  
                   l1140 032B                     l1132 0316                     l1124 02FE  
                   l1116 02EC                     l1108 02DD                     l1212 00A5  
                   l1134 031B                     l1126 0302                     l1118 02F2  
                   l1070 0392                     l1310 0116                     l1302 0108  
                   l1230 00BC                     l1222 00B3                     l1214 00AA  
                   l1206 009E                     l1128 0311                     l1136 0321  
                   l1080 03A5                     l1072 039B                     l1064 0385  
                   l1312 0117                     l1304 010C                     l1240 00C5  
                   l1224 00B7                     l1216 00AC                     l1208 00A2  
                   l1320 0145                     l1160 005E                     l1152 003A  
                   l1144 0034                     l1090 033C                     l1138 0326  
                   l1074 03A1                     l1066 038C                     l1402 029E  
                   l1322 0149                     l1306 0112                     l1250 00CF  
                   l1242 00C7                     l1234 00BE                     l1226 00B8  
                   l1218 00AE                     l1170 006E                     l1162 0060  
                   l1154 004B                     l1146 0037                     l1092 034C  
                   l1084 0331                     l1076 03A2                     l1068 038E  
                   l1404 02B0                     l1340 0151                     l1308 0114  
                   l1260 00DE                     l1252 00D1                     l1244 00C8  
                   l1236 00C2                     l1228 00BA                     l1180 0079  
                   l1172 006F                     l1164 0063                     l1156 004F  
                   l1094 034F                     l1086 0334                     l1078 03A3  
                   l1406 02C2                     l1350 01A5                     l1342 016C  
                   l1334 014E                     l1270 00EA                     l1262 00DF  
                   l1254 00D3                     l1246 00CA                     l1238 00C3  
                   l1190 008D                     l1182 007E                     l1174 0072  
                   l1166 0067                     l1158 005D                     l1318 011C  
                   l1096 0355                     l1088 0339                     l1352 01B7  
                   l1344 018C                     l1328 014B                     l1280 00F4  
                   l1272 00EB                     l1264 00E1                     l1256 00D7  
                   l1248 00CB                     l1192 008E                     l1184 0080  
                   l1176 0076                     l1168 006A                     l1098 036D  
                   l1370 020D                     l1346 0193                     l1290 00FE  
                   l1282 00F8                     l1274 00ED                     l1266 00E3  
                   l1258 00DA                     l1194 0090                     l1186 0086  
                   l1178 0077                     l1380 0234                     l1364 01E0  
                   l1372 021A                     l1356 01D0                     l1348 0198  
                   l1292 0104                     l1284 00F9                     l1276 00F1  
                   l1268 00E4                     l1196 0094                     l1188 0089  
                   l1382 0237                     l1374 0223                     l1366 01FF  
                   l1358 01DE                     l1286 00FB                     l1198 0096  
                   l1392 0256                     l1376 0226                     l1368 0208  
                   l1480 0125                     l1288 00FD                     l1394 0271  
                   l1386 0245                     l1482 01D9                     l1396 0279  
                   l1388 0248                     l1398 0298                     _LATC 010E  
                   _PEIE 005E                     _WPUA 020C             __CFG_WRT$OFF 0000  
                   _main 0034                     fsr1h 0007                     indf1 0001  
                   fsr1l 0006                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 002D            __CFG_MCLRE$ON 0000                    ?_main 0070  
        __end_of___awdiv 0330            __CFG_WDTE$OFF 0000          ___awdiv@divisor 0072  
                  i1l122 002B                    i1l118 001E          ___awdiv@counter 0077  
                  _PORTA 000C                    u80_20 0015                    u80_21 0014  
                  u81_20 001C                    u81_21 001B                    _TRISA 008C  
                  _TRISC 008E                    u82_20 0022                    u82_21 0021  
                  u78_20 000B                    u78_21 000A                    u79_20 0011  
                  u79_21 0010                    main@i 002A                    main@j 0024  
                  main@x 002C                    status 0003                    wtemp0 007E  
        __initialization 002E             __end_of_main 02D1           __CFG_LPBOR$OFF 0000  
                 ??_main 0020               _SetLed$191 0076         ___awdiv@dividend 0074  
                 _ANSELA 018C                   _ANSELC 018E                   i1l1420 0011  
                 i1l1430 001C                   i1l1422 0015                   i1l1432 0022  
                 i1l1424 0016                   i1l1416 0006                   i1l1434 0028  
                 i1l1426 0017                   i1l1418 000B                   i1l1436 0029  
                 i1l1428 0018                   _OSCCON 0099                   _SSP1IE 048B  
                 _SSP1IF 008B                   _SSPBUF 0211            main@pinActive 003A  
         __CFG_PWRTE$OFF 0000                   _SetLed 0330                ??___awdiv 0076  
         __CFG_STVREN$ON 0000         ___awdiv@quotient 0079  __end_of__initialization 0031  
         __pcstackCOMMON 0070  __size_of_I2C_Slave_Read 0029           _OPTION_REGbits 0095  
             __pbssBANK0 003E                  ?_SetLed 0072               __pmaintext 0034  
             __pintentry 0004                  _SSP1ADD 0212          __size_of_SetLed 0055  
                ___awdiv 02D1               _initialize 0385                  __ptext1 0385  
                __ptext2 02D1                  __ptext3 0330     end_of_initialization 0031  
           SetLed@active 0073             SetLed@lowPin 0072           _I2C_Slave_Read 0004  
       __CFG_FOSC$INTOSC 0000               main@lowPin 0036   __end_of_I2C_Slave_Read 002D  
         __end_of_SetLed 0385              ?_initialize 0070      start_initialization 002E  
        ?_I2C_Slave_Read 0070                 ??_SetLed 0074                ___latbits 0000  
          __pcstackBANK0 0020             _currentState 003E      __size_of_initialize 0023  
               ?___awdiv 0072                 _LATAbits 010C                 _SSP1CON1 0215  
               _SSP1CON2 0216                 _SSP1STAT 0214                main@i_202 0022  
              main@i_212 002E                main@i_213 0026                main@j_215 0028  
              main@x_214 0030         __size_of___awdiv 005F             ??_initialize 0072  
           _SSP1CON1bits 0215         ??_I2C_Slave_Read 0070            __size_of_main 029D  
     __end_of_initialize 03A8                 int$flags 007E             _SSP1STATbits 0214  
               intlevel1 0000              _targetState 003F        __CFG_CLKOUTEN$OFF 0000  
          SetLed@highPin 0078              _SSPCON1bits 0215  
